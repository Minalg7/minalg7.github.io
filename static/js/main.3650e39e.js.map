{"version":3,"file":"static/js/main.3650e39e.js","mappings":"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","sources":["../node_modules/object-assign/index.js","../node_modules/react/index.js","../node_modules/react-fast-marquee/src/components/Marquee.tsx","../node_modules/react/cjs/react.production.min.js","../node_modules/scheduler/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react-dom/index.js","../webpack/bootstrap","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/use-sync-external-store-shim/useSyncExternalStoreShimClient.ts","../node_modules/react-router/lib/use-sync-external-store-shim/index.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router-dom/index.tsx","../node_modules/react-router-dom/dom.ts","assets/icons/Star.jsx","components/Wave-shape-milieu/index.jsx","assets/svg/Menu-shape.jsx","datas/colors.jsx","components/Header/index.jsx","assets/svg/logo.svg","components/Footer/index.jsx","assets/icons/scroll-down.svg","components/Hero-banner/index.jsx","assets/svg/Feux-vert-orange.jsx","components/Timer/index.jsx","assets/svg/Feux-rose-orange-droit.jsx","components/Introduction/index.jsx","assets/svg/Branche-orange.jsx","assets/svg/Branche-vert.jsx","components/Encart-info/index.jsx","components/Button/index.jsx","components/Slider/index.jsx","components/Description-img/index.jsx","components/Bandeau-cadre/index.jsx","components/Wave-shape/index.jsx","assets/svg/Feux-rose-orange.jsx","assets/svg/Feux-bleu-vert-bas.jsx","components/Activites-accueil/index.jsx","assets/svg/Pompom.jsx","assets/svg/Rubans.jsx","assets/svg/Origami-orange.jsx","assets/svg/Origami-rose.jsx","pages/Home/index.jsx","components/Wave-shape-haut/index.jsx","components/Legend-item/index.jsx","assets/icons/Minus-box.jsx","assets/icons/Add-box.jsx","components/Faq-accordion/index.jsx","components/Banner/index.jsx","assets/svg/Guirlande.jsx","datas/legendes.jsx","datas/faq.jsx","pages/Informations/index.jsx","components/Card-programmation/index.jsx","../node_modules/ssr-window/ssr-window.esm.js","../node_modules/swiper/shared/utils.js","../node_modules/swiper/shared/get-support.js","../node_modules/swiper/shared/get-device.js","../node_modules/swiper/shared/get-browser.js","../node_modules/swiper/core/events-emitter.js","../node_modules/swiper/shared/process-lazy-preloader.js","../node_modules/swiper/core/update/index.js","../node_modules/swiper/core/update/updateSize.js","../node_modules/swiper/core/update/updateSlides.js","../node_modules/swiper/core/update/updateAutoHeight.js","../node_modules/swiper/core/update/updateSlidesOffset.js","../node_modules/swiper/core/update/updateSlidesProgress.js","../node_modules/swiper/core/update/updateProgress.js","../node_modules/swiper/core/update/updateSlidesClasses.js","../node_modules/swiper/core/update/updateActiveIndex.js","../node_modules/swiper/core/update/updateClickedSlide.js","../node_modules/swiper/core/translate/index.js","../node_modules/swiper/core/translate/getTranslate.js","../node_modules/swiper/core/translate/setTranslate.js","../node_modules/swiper/core/translate/minTranslate.js","../node_modules/swiper/core/translate/maxTranslate.js","../node_modules/swiper/core/translate/translateTo.js","../node_modules/swiper/core/transition/transitionEmit.js","../node_modules/swiper/core/slide/index.js","../node_modules/swiper/core/slide/slideTo.js","../node_modules/swiper/core/slide/slideToLoop.js","../node_modules/swiper/core/slide/slideNext.js","../node_modules/swiper/core/slide/slidePrev.js","../node_modules/swiper/core/slide/slideReset.js","../node_modules/swiper/core/slide/slideToClosest.js","../node_modules/swiper/core/slide/slideToClickedSlide.js","../node_modules/swiper/core/loop/index.js","../node_modules/swiper/core/loop/loopCreate.js","../node_modules/swiper/core/loop/loopFix.js","../node_modules/swiper/core/loop/loopDestroy.js","../node_modules/swiper/core/events/onTouchStart.js","../node_modules/swiper/core/events/onTouchMove.js","../node_modules/swiper/core/events/onTouchEnd.js","../node_modules/swiper/core/events/onResize.js","../node_modules/swiper/core/events/onClick.js","../node_modules/swiper/core/events/onScroll.js","../node_modules/swiper/core/events/onLoad.js","../node_modules/swiper/core/events/index.js","../node_modules/swiper/core/breakpoints/setBreakpoint.js","../node_modules/swiper/core/check-overflow/index.js","../node_modules/swiper/core/defaults.js","../node_modules/swiper/core/moduleExtendParams.js","../node_modules/swiper/core/core.js","../node_modules/swiper/core/transition/index.js","../node_modules/swiper/core/transition/setTransition.js","../node_modules/swiper/core/transition/transitionStart.js","../node_modules/swiper/core/transition/transitionEnd.js","../node_modules/swiper/core/grab-cursor/index.js","../node_modules/swiper/core/grab-cursor/setGrabCursor.js","../node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","../node_modules/swiper/core/breakpoints/index.js","../node_modules/swiper/core/breakpoints/getBreakpoint.js","../node_modules/swiper/core/classes/index.js","../node_modules/swiper/core/classes/addClasses.js","../node_modules/swiper/core/classes/removeClasses.js","../node_modules/swiper/core/modules/resize/resize.js","../node_modules/swiper/core/modules/observer/observer.js","../node_modules/swiper/modules/navigation/navigation.js","../node_modules/swiper/shared/create-element-if-not-defined.js","../node_modules/swiper/modules/thumbs/thumbs.js","../node_modules/swiper/modules/free-mode/free-mode.js","../node_modules/swiper/components-shared/utils.js","../node_modules/swiper/components-shared/params-list.js","../node_modules/swiper/react/get-children.js","../node_modules/swiper/react/use-isomorphic-layout-effect.js","../node_modules/swiper/react/context.js","../node_modules/swiper/react/swiper.js","../node_modules/swiper/components-shared/get-params.js","../node_modules/swiper/components-shared/mount-swiper.js","../node_modules/swiper/components-shared/get-changed-params.js","../node_modules/swiper/components-shared/update-swiper.js","../node_modules/swiper/components-shared/update-on-virtual-data.js","../node_modules/swiper/react/virtual.js","../node_modules/swiper/react/swiper-slide.js","assets/icons/Nav-next.jsx","assets/icons/Nav-prev.jsx","components/Carrousel-programme/index.jsx","assets/icons/Coeur.jsx","assets/svg/Origamis.jsx","assets/svg/Billets.jsx","assets/icons/Bienvenue.jsx","assets/icons/Lit.jsx","assets/icons/Parking.jsx","datas/programmation.jsx","pages/Programmation/index.jsx","assets/svg/Feux-vert.jsx","assets/svg/Feux-bleu.jsx","datas/activites.jsx","pages/Activites/index.jsx","assets/svg/Poisson-gauche.jsx","components/Tabs-1-3/index.jsx","assets/icons/Vegetarien-icon.jsx","components/Card-menu/index.jsx","assets/svg/Feux-vert-rose.jsx","datas/menu.jsx","pages/Restauration/index.jsx","components/ClickableImageMap/index.jsx","components/Button-small/index.jsx","datas/logements.jsx","components/Carrousel-logements/index.jsx","assets/svg/Feux-rose-vert-droit.jsx","pages/Hebergement/index.jsx","assets/icons/Qr-code.jsx","assets/svg/Poisson-grand.jsx","pages/Galerie/index.jsx","components/Error/index.jsx","App.jsx","components/Scroll-fade-in/index.jsx","components/Scroll-to-top/index.jsx","index.jsx"],"sourcesContent":["/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","import React, {\n  Fragment,\n  useEffect,\n  useState,\n  useRef,\n  useCallback,\n  useMemo,\n  ReactNode,\n  CSSProperties,\n  FC,\n  forwardRef,\n  Children,\n  MutableRefObject,\n  RefAttributes,\n} from \"react\";\nimport \"./Marquee.scss\";\n\nexport type MarqueeProps = {\n  /**\n   * @description Inline style for the container div\n   * @type {CSSProperties}\n   * @default {}\n   */\n  style?: CSSProperties;\n  /**\n   * @description Class name to style the container div\n   * @type {string}\n   * @default \"\"\n   */\n  className?: string;\n  /**\n   * @description Whether to automatically fill blank space in the marquee with copies of the children or not\n   * @type {boolean}\n   * @default false\n   */\n  autoFill?: boolean;\n  /**\n   * @description Whether to play or pause the marquee\n   * @type {boolean}\n   * @default true\n   */\n  play?: boolean;\n  /**\n   * @description Whether to pause the marquee when hovered\n   * @type {boolean}\n   * @default false\n   */\n  pauseOnHover?: boolean;\n  /**\n   * @description Whether to pause the marquee when clicked\n   * @type {boolean}\n   * @default false\n   */\n  pauseOnClick?: boolean;\n  /**\n   * @description The direction the marquee is sliding\n   * @type {\"left\" | \"right\" | \"up\" | \"down\"}\n   * @default \"left\"\n   */\n  direction?: \"left\" | \"right\" | \"up\" | \"down\";\n  /**\n   * @description Speed calculated as pixels/second\n   * @type {number}\n   * @default 50\n   */\n  speed?: number;\n  /**\n   * @description Duration to delay the animation after render, in seconds\n   * @type {number}\n   * @default 0\n   */\n  delay?: number;\n  /**\n   * @description The number of times the marquee should loop, 0 is equivalent to infinite\n   * @type {number}\n   * @default 0\n   */\n  loop?: number;\n  /**\n   * @description Whether to show the gradient or not\n   * @type {boolean}\n   * @default false\n   */\n  gradient?: boolean;\n  /**\n   * @description The color of the gradient\n   * @type {string}\n   * @default \"white\"\n   */\n  gradientColor?: string;\n  /**\n   * @description The width of the gradient on either side\n   * @type {number | string}\n   * @default 200\n   */\n  gradientWidth?: number | string;\n  /**\n   * @description A callback for when the marquee finishes scrolling and stops. Only calls if loop is non-zero.\n   * @type {() => void}\n   * @default null\n   */\n  onFinish?: () => void;\n  /**\n   * @description A callback for when the marquee finishes a loop. Does not call if maximum loops are reached (use onFinish instead).\n   * @type {() => void}\n   * @default null\n   */\n  onCycleComplete?: () => void;\n  /**\n   * @description: A callback function that is invoked once the marquee has finished mounting. It can be utilized to recalculate the page size, if necessary.\n   * @type {() => void}\n   * @default null\n   */\n  onMount?: () => void;\n  /**\n   * @description The children rendered inside the marquee\n   * @type {ReactNode}\n   * @default null\n   */\n  children?: ReactNode;\n} & RefAttributes<HTMLDivElement>;\n\nconst Marquee: FC<MarqueeProps> = forwardRef(function Marquee(\n  {\n    style = {},\n    className = \"\",\n    autoFill = false,\n    play = true,\n    pauseOnHover = false,\n    pauseOnClick = false,\n    direction = \"left\",\n    speed = 50,\n    delay = 0,\n    loop = 0,\n    gradient = false,\n    gradientColor = \"white\",\n    gradientWidth = 200,\n    onFinish,\n    onCycleComplete,\n    onMount,\n    children,\n  },\n  ref\n) {\n  // React Hooks\n  const [containerWidth, setContainerWidth] = useState(0);\n  const [marqueeWidth, setMarqueeWidth] = useState(0);\n  const [multiplier, setMultiplier] = useState(1);\n  const [isMounted, setIsMounted] = useState(false);\n  const rootRef = useRef<HTMLDivElement>(null);\n  const containerRef = (ref as MutableRefObject<HTMLDivElement>) || rootRef;\n  const marqueeRef = useRef<HTMLDivElement>(null);\n\n  // Calculate width of container and marquee and set multiplier\n  const calculateWidth = useCallback(() => {\n    if (marqueeRef.current && containerRef.current) {\n      const containerRect = containerRef.current.getBoundingClientRect();\n      const marqueeRect = marqueeRef.current.getBoundingClientRect();\n      let containerWidth = containerRect.width;\n      let marqueeWidth = marqueeRect.width;\n\n      // Swap width and height if direction is up or down\n      if (direction === \"up\" || direction === \"down\") {\n        containerWidth = containerRect.height;\n        marqueeWidth = marqueeRect.height;\n      }\n\n      if (autoFill && containerWidth && marqueeWidth) {\n        setMultiplier(\n          marqueeWidth < containerWidth\n            ? Math.ceil(containerWidth / marqueeWidth)\n            : 1\n        );\n      } else {\n        setMultiplier(1);\n      }\n\n      setContainerWidth(containerWidth);\n      setMarqueeWidth(marqueeWidth);\n    }\n  }, [autoFill, containerRef, direction]);\n\n  // Calculate width and multiplier on mount and on window resize\n  useEffect(() => {\n    if (!isMounted) return;\n\n    calculateWidth();\n    if (marqueeRef.current && containerRef.current) {\n      const resizeObserver = new ResizeObserver(() => calculateWidth());\n      resizeObserver.observe(containerRef.current);\n      resizeObserver.observe(marqueeRef.current);\n      return () => {\n        if (!resizeObserver) return;\n        resizeObserver.disconnect();\n      };\n    }\n  }, [calculateWidth, containerRef, isMounted]);\n\n  // Recalculate width when children change\n  useEffect(() => {\n    calculateWidth();\n  }, [calculateWidth, children]);\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  // Runs the onMount callback, if it is a function, when Marquee is mounted.\n  useEffect(() => {\n    if (typeof onMount === \"function\") {\n      onMount();\n    }\n  }, []);\n\n  // Animation duration\n  const duration = useMemo(() => {\n    if (autoFill) {\n      return (marqueeWidth * multiplier) / speed;\n    } else {\n      return marqueeWidth < containerWidth\n        ? containerWidth / speed\n        : marqueeWidth / speed;\n    }\n  }, [autoFill, containerWidth, marqueeWidth, multiplier, speed]);\n\n  const containerStyle = useMemo(\n    () => ({\n      ...style,\n      [\"--pause-on-hover\" as string]:\n        !play || pauseOnHover ? \"paused\" : \"running\",\n      [\"--pause-on-click\" as string]:\n        !play || (pauseOnHover && !pauseOnClick) || pauseOnClick\n          ? \"paused\"\n          : \"running\",\n      [\"--width\" as string]:\n        direction === \"up\" || direction === \"down\" ? `100vh` : \"100%\",\n      [\"--transform\" as string]:\n        direction === \"up\"\n          ? \"rotate(-90deg)\"\n          : direction === \"down\"\n          ? \"rotate(90deg)\"\n          : \"none\",\n    }),\n    [style, play, pauseOnHover, pauseOnClick, direction]\n  );\n\n  const gradientStyle = useMemo(\n    () => ({\n      [\"--gradient-color\" as string]: gradientColor,\n      [\"--gradient-width\" as string]:\n        typeof gradientWidth === \"number\"\n          ? `${gradientWidth}px`\n          : gradientWidth,\n    }),\n    [gradientColor, gradientWidth]\n  );\n\n  const marqueeStyle = useMemo(\n    () => ({\n      [\"--play\" as string]: play ? \"running\" : \"paused\",\n      [\"--direction\" as string]: direction === \"left\" ? \"normal\" : \"reverse\",\n      [\"--duration\" as string]: `${duration}s`,\n      [\"--delay\" as string]: `${delay}s`,\n      [\"--iteration-count\" as string]: !!loop ? `${loop}` : \"infinite\",\n      [\"--min-width\" as string]: autoFill ? `auto` : \"100%\",\n    }),\n    [play, direction, duration, delay, loop, autoFill]\n  );\n\n  const childStyle = useMemo(\n    () => ({\n      [\"--transform\" as string]:\n        direction === \"up\"\n          ? \"rotate(90deg)\"\n          : direction === \"down\"\n          ? \"rotate(-90deg)\"\n          : \"none\",\n    }),\n    [direction]\n  );\n\n  // Render {multiplier} number of children\n  const multiplyChildren = useCallback(\n    (multiplier: number) => {\n      return [\n        ...Array(\n          Number.isFinite(multiplier) && multiplier >= 0 ? multiplier : 0\n        ),\n      ].map((_, i) => (\n        <Fragment key={i}>\n          {Children.map(children, (child) => {\n            return (\n              <div style={childStyle} className=\"rfm-child\">\n                {child}\n              </div>\n            );\n          })}\n        </Fragment>\n      ));\n    },\n    [childStyle, children]\n  );\n\n  return !isMounted ? null : (\n    <div\n      ref={containerRef}\n      style={containerStyle}\n      className={\"rfm-marquee-container \" + className}\n    >\n      {gradient && <div style={gradientStyle} className=\"rfm-overlay\" />}\n      <div\n        className=\"rfm-marquee\"\n        style={marqueeStyle}\n        onAnimationIteration={onCycleComplete}\n        onAnimationEnd={onFinish}\n      >\n        <div className=\"rfm-initial-child-container\" ref={marqueeRef}>\n          {Children.map(children, (child) => {\n            return (\n              <div style={childStyle} className=\"rfm-child\">\n                {child}\n              </div>\n            );\n          })}\n        </div>\n        {multiplyChildren(multiplier - 1)}\n      </div>\n      <div className=\"rfm-marquee\" style={marqueeStyle}>\n        {multiplyChildren(multiplier)}\n      </div>\n    </div>\n  );\n});\n\nexport default Marquee;\n","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { warning, invariant, parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on <Form>,\n * useSubmit(), <fetcher.Form>, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\";\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport interface Submission {\n  formMethod: FormMethod | V7_FormMethod;\n  formAction: string;\n  formEncType: FormEncType;\n  formData: FormData;\n}\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n  context?: any;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<Response> | Response | Promise<any> | any;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<Response> | Response | Promise<any> | any;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    formData?: Submission[\"formData\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<Omit<R, ImmutableRouteKey>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  detectErrorBoundary: DetectErrorBoundaryFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        hasErrorBoundary: detectErrorBoundary(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        id,\n        hasErrorBoundary: detectErrorBoundary(route),\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          detectErrorBoundary,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        const starParam = params[star];\n\n        // Apply the splat\n        return starParam;\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n\n        if (optional === \"?\") {\n          return param == null ? \"\" : param;\n        }\n\n        if (param == null) {\n          invariant(false, `Missing \":${key}\" param`);\n        }\n\n        return param;\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, null, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  error?: Error;\n  internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  DataResult,\n  DeferredData,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  DetectErrorBoundaryFunction,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n  ShouldRevalidateFunction,\n  RouteManifest,\n  ImmutableRouteKey,\n  ActionFunction,\n  LoaderFunction,\n  V7_MutationFormMethod,\n  V7_FormMethod,\n  HTMLFormMethod,\n  MutationFormMethod,\n} from \"./utils\";\nimport {\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string,\n    opts?: RouterNavigateOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_normalizeFormMethod: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  future?: FutureConfig;\n  hydrationData?: HydrationState;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\n/**\n * Options for a navigate() call for a Link navigation\n */\ntype LinkNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n};\n\n/**\n * Options for a navigate() call for a Form navigation\n */\ntype SubmissionNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n  formData: FormData;\n};\n\n/**\n * Options to pass to navigate() for either a Link or Form navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions =\n  | Omit<LinkNavigateOptions, \"replace\">\n  | Omit<SubmissionNavigateOptions, \"replace\">;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: FormMethod | V7_FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: FormMethod | V7_FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: FormMethod | V7_FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: FormMethod | V7_FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\nconst isServer = !isBrowser;\n\nconst defaultDetectErrorBoundary = (route: AgnosticRouteObject) =>\n  Boolean(route.hasErrorBoundary);\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let detectErrorBoundary =\n    init.detectErrorBoundary || defaultDetectErrorBoundary;\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    detectErrorBoundary,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_normalizeFormMethod: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(\n    dataRoutes,\n    init.history.location,\n    init.basename\n  );\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidate()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations from their actions\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              deleteBlocker(blockerKey!);\n              updateState({ blockers: new Map(router.state.blockers) });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    for (let [key] of blockerFunctions) {\n      deleteBlocker(key);\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    updateState({\n      ...newState, // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(\n        location,\n        newState.matches || state.matches\n      ),\n      preventScrollReset,\n      blockers: new Map(state.blockers),\n    });\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      to,\n      future,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          deleteBlocker(blockerKey!);\n          updateState({ blockers: new Map(state.blockers) });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, init.basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a mutation submission\n    // For example, on /page#hash and submit a <Form method=\"post\"> which will\n    // default to a navigation to /page\n    if (\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        ...opts.submission,\n      };\n      loadingNavigation = navigation;\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts?: { replace?: boolean }\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation: NavigationStates[\"Submitting\"] = {\n      state: \"submitting\",\n      location,\n      ...submission,\n    };\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        detectErrorBoundary,\n        router.basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n    if (!loadingNavigation) {\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        ...submission,\n      };\n      loadingNavigation = navigation;\n    }\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission || fetcherSubmission\n        ? submission || fetcherSubmission\n        : loadingNavigation.formMethod &&\n          loadingNavigation.formAction &&\n          loadingNavigation.formData &&\n          loadingNavigation.formEncType\n        ? {\n            formMethod: loadingNavigation.formMethod,\n            formAction: loadingNavigation.formAction,\n            formData: loadingNavigation.formData,\n            formEncType: loadingNavigation.formEncType,\n          }\n        : undefined;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      routesToUse,\n      init.basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach((rf) =>\n      fetchControllers.set(rf.key, pendingNavigationController!)\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n\n    return {\n      loaderData,\n      errors,\n      ...(didAbortFetchLoads || revalidatingFetchers.length > 0\n        ? { fetchers: new Map(state.fetchers) }\n        : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = matchRoutes(routesToUse, href, init.basename);\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: href })\n      );\n      return;\n    }\n\n    let { path, submission } = normalizeNavigateOptions(\n      href,\n      future,\n      opts,\n      true\n    );\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher: FetcherStates[\"Submitting\"] = {\n      state: \"submitting\",\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      detectErrorBoundary,\n      router.basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n      let loadingFetcher: FetcherStates[\"Loading\"] = {\n        state: \"loading\",\n        ...submission,\n        data: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, loadingFetcher);\n      updateState({ fetchers: new Map(state.fetchers) });\n\n      return startRedirectNavigation(state, actionResult, {\n        submission,\n        isFetchActionRedirect: true,\n      });\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, init.basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      data: actionResult.data,\n      ...submission,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      routesToUse,\n      init.basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: existingFetcher && existingFetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        fetchControllers.set(staleKey, abortController);\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      detectErrorBoundary,\n      router.basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by ou our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      await startRedirectNavigation(state, result);\n      return;\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      replace,\n      isFetchActionRedirect,\n    }: {\n      submission?: Submission;\n      replace?: boolean;\n      isFetchActionRedirect?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(\n      state.location,\n      redirect.location,\n      // TODO: This can be removed once we get rid of useTransition in Remix v2\n      {\n        _isRedirect: true,\n        ...(isFetchActionRedirect ? { _isFetchActionRedirect: true } : {}),\n      }\n    );\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n    // Check if this an absolute external redirect that goes to a new origin\n    if (\n      ABSOLUTE_URL_REGEX.test(redirect.location) &&\n      isBrowser &&\n      typeof window?.location !== \"undefined\"\n    ) {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename =\n        stripBasename(url.pathname, init.basename || \"/\") == null;\n\n      if (window.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          window.location.replace(redirect.location);\n        } else {\n          window.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType, formData } = state.navigation;\n    if (!submission && formMethod && formAction && formData && formEncType) {\n      submission = {\n        formMethod,\n        formAction,\n        formEncType,\n        formData,\n      };\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      submission &&\n      isMutationMethod(submission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...submission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n        },\n        fetcherSubmission: submission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: submission ? submission.formMethod : undefined,\n          formAction: submission ? submission.formAction : undefined,\n          formEncType: submission ? submission.formEncType : undefined,\n          formData: submission ? submission.formData : undefined,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          detectErrorBoundary,\n          router.basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, request.signal),\n            f.match,\n            f.matches,\n            manifest,\n            detectErrorBoundary,\n            router.basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        request.signal,\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        request.signal,\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): void {\n    let doneKeys = [];\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n      }\n    }\n    markFetchersDone(doneKeys);\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    state.blockers.set(key, newBlocker);\n    updateState({ blockers: new Map(state.blockers) });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || ((location) => location.key);\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    inFlightDataRoutes = newRoutes;\n  }\n\n  router = {\n    get basename() {\n      return init.basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let detectErrorBoundary =\n    opts?.detectErrorBoundary || defaultDetectErrorBoundary;\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    detectErrorBoundary,\n    undefined,\n    manifest\n  );\n  let basename = (opts ? opts.basename : null) || \"/\";\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        detectErrorBoundary,\n        basename,\n        true,\n        isRouteRequest,\n        requestContext\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          detectErrorBoundary,\n          basename,\n          true,\n          isRouteRequest,\n          requestContext\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return opts != null && \"formData\" in opts;\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  to: To,\n  future: FutureConfig,\n  opts?: RouterNavigateOptions,\n  isFetcher = false\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  let path = typeof to === \"string\" ? to : createPath(to);\n\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  // Create a Submission on non-GET navigations\n  let submission: Submission | undefined;\n  if (opts.formData) {\n    let formMethod = opts.formMethod || \"get\";\n    submission = {\n      formMethod: future.v7_normalizeFormMethod\n        ? (formMethod.toUpperCase() as V7_FormMethod)\n        : (formMethod.toLowerCase() as FormMethod),\n      formAction: stripHashFromPath(path),\n      formEncType:\n        (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n      formData: opts.formData,\n    };\n\n    if (isMutationMethod(submission.formMethod)) {\n      return { path, submission };\n    }\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  let searchParams = convertFormDataToSearchParams(opts.formData);\n  // Since fetcher GET submissions only run a single loader (as opposed to\n  // navigation GET submissions which run all loaders), we need to preserve\n  // any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  let defaultShouldRevalidate =\n    // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate\n    isRevalidationRequired ||\n    // Clicked the same link, resubmitted a GET form\n    currentUrl.toString() === nextUrl.toString() ||\n    // Search params affect all loaders\n    currentUrl.search !== nextUrl.search;\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        defaultShouldRevalidate ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({ key, ...f, matches: null, match: null });\n      return;\n    }\n\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    if (cancelledFetcherLoads.includes(key)) {\n      revalidatingFetchers.push({\n        key,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        ...f,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // hit a static href, so they _always_ check shouldRevalidate and the\n    // default is strictly if a revalidation is explicitly required (action\n    // submissions, useRevalidator, X-Remix-Revalidate).\n    let shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n      currentUrl,\n      currentParams: state.matches[state.matches.length - 1].params,\n      nextUrl,\n      nextParams: matches[matches.length - 1].params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate,\n    });\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        ...f,\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: Parameters<ShouldRevalidateFunction>[0]\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  detectErrorBoundary: DetectErrorBoundaryFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to detectErrorBoundary\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `detectErrorBoundary` function to set the `hasErrorBoundary` route\n    // property since the logic will differ between frameworks.\n    hasErrorBoundary: detectErrorBoundary({ ...routeToUpdate }),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  detectErrorBoundary: DetectErrorBoundaryFunction,\n  basename = \"/\",\n  isStaticRequest: boolean = false,\n  isRouteRequest: boolean = false,\n  requestContext?: unknown\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({ request, params: match.params, context: requestContext }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([\n          runHandler(handler),\n          loadLazyRouteModule(match.route, detectErrorBoundary, manifest),\n        ]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, detectErrorBoundary, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname: new URL(request.url).pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else {\n      invariant<Function>(\n        handler,\n        `Could not find the ${type} to run on the \"${match.route.id}\" route`\n      );\n\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        let activeMatches = matches.slice(0, matches.indexOf(match) + 1);\n        let routePathnames = getPathContributingMatches(activeMatches).map(\n          (match) => match.pathnameBase\n        );\n        let resolvedLocation = resolveTo(\n          location,\n          routePathnames,\n          new URL(request.url).pathname\n        );\n        invariant(\n          createPath(resolvedLocation),\n          `Unable to resolve redirect location: ${location}`\n        );\n\n        // Prepend the basename to the redirect location if we have one\n        if (basename) {\n          let path = resolvedLocation.pathname;\n          resolvedLocation.pathname =\n            path === \"/\" ? basename : joinPaths([basename, path]);\n        }\n\n        location = createPath(resolvedLocation);\n      } else if (!isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result,\n      };\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType, formData } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    init.body =\n      formEncType === \"application/x-www-form-urlencoded\"\n        ? convertFormDataToSearchParams(formData)\n        : formData;\n  }\n\n  // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, value instanceof File ? value.name : value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponse(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results: DataResult[]): RedirectResult | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  return (\n    a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signal: AbortSignal,\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n//#endregion\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from \"react\";\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction isPolyfill(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst is: (x: any, y: any) => boolean =\n  typeof Object.is === \"function\" ? Object.is : isPolyfill;\n\n// Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\nconst { useState, useEffect, useLayoutEffect, useDebugValue } = React;\n\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false;\n\n// Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  getServerSnapshot?: () => T\n): T {\n  if (__DEV__) {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that \" +\n            \"does not support useSyncExternalStore. The \" +\n            \"use-sync-external-store shim will not work correctly. Upgrade \" +\n            \"to a newer pre-release.\"\n        );\n      }\n    }\n  }\n\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n      if (!is(value, cachedValue)) {\n        console.error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{ inst }, forceUpdate] = useState({ inst: { value, getSnapshot } });\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe, value, getSnapshot]);\n\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({ inst });\n      }\n    };\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst: any) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n","/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from \"react\";\n\nimport { useSyncExternalStore as client } from \"./useSyncExternalStoreShimClient\";\nimport { useSyncExternalStore as server } from \"./useSyncExternalStoreShimServer\";\n\nconst canUseDOM: boolean = !!(\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\"\n);\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? server : client;\n\nexport const useSyncExternalStore =\n  \"useSyncExternalStore\" in React\n    ? ((module) => module.useSyncExternalStore)(React)\n    : shim;\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  Router as RemixRouter,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history.  If this is a root navigation, then we\n      // navigate to the raw basename which allows the basename to have full\n      // control over the presence of a trailing slash on root links\n      if (basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterStateContext || undefined\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own&nbsp;\n          <code style={codeStyles}>ErrorBoundary</code> prop on&nbsp;\n          <code style={codeStyles}>&lt;Route&gt;</code>\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for the current errors: ${errors}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      if (match.route.ErrorBoundary) {\n        errorElement = <match.route.ErrorBoundary />;\n      } else if (match.route.errorElement) {\n        errorElement = match.route.errorElement;\n      } else {\n        errorElement = <DefaultErrorComponent />;\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode = outlet;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{ outlet, matches }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => {\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n    },\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(\n    () => () => router.deleteBlocker(blockerKey),\n    [router, blockerKey]\n  );\n\n  // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n  return state.blockers.get(blockerKey) || blocker;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  RouterState,\n  To,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport { useSyncExternalStore as useSyncExternalStoreShim } from \"./use-sync-external-store-shim\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  let getState = React.useCallback(() => router.state, [router]);\n\n  // Sync router state to our component state to force re-renders\n  let state: RouterState = useSyncExternalStoreShim(\n    router.subscribe,\n    getState,\n    // We have to provide this so React@18 doesn't complain during hydration,\n    // but we pass our serialized hydration data into the router so state here\n    // is already synced with what the server saw\n    getState\n  );\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={router.basename}\n            location={router.state.location}\n            navigationType={router.state.historyAction}\n            navigator={navigator}\n          >\n            {router.state.initialized ? <Routes /> : fallbackElement}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n    navigate(to, { replace, state, relative });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n  let routes =\n    dataRouterContext && !children\n      ? (dataRouterContext.router.routes as DataRouteObject[])\n      : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_detectErrorBoundary as detectErrorBoundary,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: FutureConfig;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: opts?.future,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    detectErrorBoundary,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: opts?.future,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    detectErrorBoundary,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + to)\n          : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmitImpl = \"useSubmitImpl\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        formMethod: method as HTMLFormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace/preventScrollReset because they are not\n    // navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"preventScrollReset\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n","import type { FormEncType, HTMLFormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method: method.toLowerCase(), encType, formData };\n}\n","function Star() {\r\n  return (\r\n    <svg\r\n      width=\"28\"\r\n      height=\"37\"\r\n      viewBox=\"0 0 28 37\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M13.0348 1.565C13.3014 0.58013 14.6986 0.580127 14.9652 1.565L17.9349 12.5331C18.009 12.8068 18.1959 13.0362 18.4489 13.1642L27.2354 17.6076C27.967 17.9776 27.967 19.0224 27.2354 19.3924L18.4489 23.8358C18.1959 23.9638 18.009 24.1932 17.9349 24.4669L14.9652 35.435C14.6986 36.4199 13.3014 36.4199 13.0348 35.435L10.0651 24.4669C9.99096 24.1932 9.80414 23.9638 9.5511 23.8358L0.764599 19.3924C0.0329814 19.0224 0.0329806 17.9776 0.764598 17.6076L9.5511 13.1642C9.80414 13.0362 9.99096 12.8068 10.0651 12.5331L13.0348 1.565Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Star;\r\n","function WaveShapeMilieu({ color }) {\r\n  return (\r\n    <svg\r\n      width=\"auto\"\r\n      height=\"100vh\"\r\n      viewBox=\"0 0 122 728\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"wave-milieu\"\r\n    >\r\n      <path\r\n        d=\"M0 748L0 -12H80.1604C135.435 126.996 136.455 210.11 80.1604 368C23.6761 517.593 24.0671 600.789 80.1604 748H0Z\"\r\n        fill={color}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default WaveShapeMilieu;\r\n","function MenuShape() {\r\n  return (\r\n    <svg\r\n      width=\"214\"\r\n      height=\"54\"\r\n      viewBox=\"0 0 214 54\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"menu-shape\"\r\n    >\r\n      <path\r\n        d=\"M140.312 42.3982C124.481 56.5967 99.5269 57.2923 83.3825 43.4508C67.0869 29.4797 51.9745 9.54959 0 -3L224 -3C155.976 18.2166 153.665 30.4229 140.312 42.3982Z\"\r\n        fill=\"#294069\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default MenuShape;\r\n","export const white = \"#FFFCF5\";\r\nexport const blue = \"#294069\";\r\nexport const pink = \"#EF6B93\";\r\nexport const orange = \"#F9A626\";\r\nexport const green = \"#97AC83\";","import { NavLink, useLocation } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\n// Styles\r\nimport \"../../styles/Header.css\";\r\n\r\n// Assets\r\nimport Star from \"../../assets/icons/Star\";\r\nimport accueilImg from \"../../assets/header/menu-accueil.jpg\";\r\nimport infoImg from \"../../assets/header/menu-informations.jpg\";\r\nimport progImg from \"../../assets/header/menu-programmation.jpg\";\r\nimport actImg from \"../../assets/header/menu-activités.jpg\";\r\nimport restauImg from \"../../assets/header/menu-restauration.jpg\";\r\nimport hebergImg from \"../../assets/header/menu-herbergement.jpg\";\r\nimport galerieImg from \"../../assets/header/menu-galerie.jpg\";\r\nimport WaveShapeMilieu from \"../Wave-shape-milieu\";\r\nimport MenuShape from \"../../assets/svg/Menu-shape\";\r\n\r\n// Données\r\nimport { blue, pink, orange, green } from \"../../datas/colors\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    label: \"Accueil\",\r\n    image: accueilImg,\r\n    color: blue,\r\n    bgColor: \"bg-blue\",\r\n  },\r\n  {\r\n    path: \"/informations\",\r\n    label: \"Informations\",\r\n    image: infoImg,\r\n    color: pink,\r\n    bgColor: \"bg-pink\",\r\n  },\r\n  {\r\n    path: \"/programmation\",\r\n    label: \"Programmation\",\r\n    image: progImg,\r\n    color: orange,\r\n    bgColor: \"bg-orange\",\r\n  },\r\n  {\r\n    path: \"/activites\",\r\n    label: \"Activités\",\r\n    image: actImg,\r\n    color: green,\r\n    bgColor: \"bg-green\",\r\n  },\r\n  {\r\n    path: \"/restauration\",\r\n    label: \"Restauration\",\r\n    image: restauImg,\r\n    color: pink,\r\n    bgColor: \"bg-pink\",\r\n  },\r\n  {\r\n    path: \"/hebergement\",\r\n    label: \"Hébergement\",\r\n    image: hebergImg,\r\n    color: orange,\r\n    bgColor: \"bg-orange\",\r\n  },\r\n  {\r\n    path: \"/galerie\",\r\n    label: \"Galerie\",\r\n    image: galerieImg,\r\n    color: green,\r\n    bgColor: \"bg-green\",\r\n  },\r\n];\r\n\r\nfunction Header() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [hoveredPath, setHoveredPath] = useState(null);\r\n  const location = useLocation();\r\n\r\n  const currentPath = hoveredPath || location.pathname;\r\n  const activeRoute = routes.find((route) => route.path === currentPath);\r\n\r\n  return isOpen ? (\r\n    <nav>\r\n      <MenuShape />\r\n      <div\r\n        className={`hamburger ${isOpen ? \"open\" : \"\"}`}\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n\r\n      {activeRoute && (\r\n        <div className={`menu-modale ${activeRoute.bgColor}`}>\r\n          <div className=\"menu\">\r\n            {routes.map((route) => {\r\n              const isHovered = hoveredPath === route.path;\r\n              const isActive = location.pathname === route.path;\r\n\r\n              const isHighlighted = isHovered || (!hoveredPath && isActive);\r\n\r\n              // Style dynamique\r\n              const textColor = isHighlighted ? \"#FFFCF5\" : \"#DBDBDB\";\r\n\r\n              return (\r\n                <NavLink\r\n                  key={route.path}\r\n                  to={route.path}\r\n                  onClick={() => setIsOpen(false)}\r\n                  onMouseEnter={() => setHoveredPath(route.path)}\r\n                  onMouseLeave={() => setHoveredPath(null)}\r\n                  className={`nav-link ${isHighlighted ? \"active\" : \"\"}`}\r\n                >\r\n                  <div\r\n                    className={`lien title ${isHighlighted ? \"highlighted\" : \"normal\"}`}\r\n                    style={{\r\n                      color: textColor,\r\n                      transition: \"font-size 0.3s ease, color 0.3s ease\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      gap: \"10px\",\r\n                    }}\r\n                  >\r\n                    {isHighlighted && <Star />}\r\n                    {route.label}\r\n                  </div>\r\n                </NavLink>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {activeRoute && <WaveShapeMilieu color={activeRoute.color} />}\r\n\r\n          {activeRoute && (\r\n            <div className=\"img-lien\">\r\n              <img src={activeRoute.image} alt={activeRoute.label} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </nav>\r\n  ) : (\r\n    <nav>\r\n      <MenuShape />\r\n      <div className=\"hamburger\" onClick={() => setIsOpen(true)}>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _ellipse, _ellipse2, _circle, _path20;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 165,\n    height: 162,\n    viewBox: \"0 0 165 162\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M92.284 70.4921C92.502 70.0856 92.9623 69.8713 93.4038 70.0044C95.1538 70.5317 91.7584 75.9977 91.2774 77.066C89.0447 82.0249 86.9309 87.0388 84.6699 91.9847C77.844 106.916 68.5835 127.163 51.6799 132.178C42.3806 134.936 28.1612 132.711 23.2909 123.002C16.8083 110.078 29.2594 98.9591 41.5829 101.608C43.3997 101.998 44.3515 104.168 43.2074 105.75C42.2277 107.105 39.7671 107.73 38.4768 108.983C33.7621 113.562 30.8734 122.365 36.9583 127.008C45.4231 133.468 56.7565 128.319 63.4911 121.903C78.1219 107.964 82.9847 87.8359 92.284 70.4921Z\",\n    fill: \"#FFF2E1\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M100.372 58.5365C102.469 55.8897 106.97 58.0622 105.763 61.3098C104.562 64.5411 101.258 67.7169 99.4583 70.7441C94.2646 79.4816 89.7318 89.9405 89.899 100.239C89.9935 106.062 93.0867 118.136 99.8917 116.44C101.757 115.975 98.7 120.778 92.9487 118.894C88.5752 117.461 85.7946 106.005 85.1188 101.9C82.6739 87.0495 91.3619 69.9086 100.372 58.5365Z\",\n    fill: \"#FFF2E1\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.4009 100.317C66.2669 100.348 66.1326 100.367 66.0263 100.271C65.606 99.8922 67.1995 98.5781 67.4744 98.2571C67.4826 98.2476 67.4923 98.2394 67.5004 98.2298C67.8888 97.7661 69.2444 98.3735 68.8277 98.8654C68.4446 99.3176 66.8626 100.211 66.4009 100.317ZM68.2724 99.3221C67.7742 99.6191 66.9228 98.9105 67.3297 98.4274C67.7966 97.8728 68.5202 97.0475 68.8111 96.5463C69.7026 95.0108 70.0375 93.1407 69.8392 91.3625C69.731 90.3914 69.3837 88.6869 68.2148 88.5707C65.3203 88.2829 63.5403 92.3049 63.9917 94.8029C64.3245 96.6444 65.6806 98.0982 66.793 99.4757C67.2564 100.049 66.8454 100.952 66.1227 100.739C65.5812 100.579 64.9362 99.7162 64.567 99.2854C62.9278 97.372 61.5524 95.2508 61.0269 92.6913C60.0823 88.0904 63.2383 83.5932 67.801 83.5384C71.8484 83.4898 74.1405 87.4525 73.7208 91.358C73.3496 94.8126 71.1344 97.6157 68.2724 99.3221ZM65.3894 100.225C64.8681 99.6212 65.8473 98.94 66.5656 99.2994C67.0451 99.5393 67.4728 100.096 67.9018 100.434C69.1153 101.392 70.4829 102.121 71.9679 102.477C74.8436 103.167 78.8702 102.595 80.5941 101.71C82.318 100.825 83.648 103.045 82.1743 104.457C81.2102 105.381 79.0512 105.966 77.7864 105.952C73.2355 105.634 68.5796 103.923 65.3894 100.225ZM77.7864 105.952C75.7551 105.592 76.0878 103.554 77.9604 102.799C79.8279 102.045 83.8593 100.416 85.4644 99.597C86.8628 98.8832 88.2348 98.1052 89.5295 97.1992C90.4536 96.5525 91.3379 95.8369 92.1392 95.0283C94.5648 92.5805 96.2322 89.4011 96.2804 85.8199C96.2925 84.9255 96.3645 83.3275 95.7625 82.5752C95.2251 81.9036 94.4632 81.2025 93.7275 80.8975C90.2007 79.4354 89.1754 74.7443 92.5571 72.5429C94.8224 71.0682 98.3682 72.1569 100.597 73.4293C108.395 77.8817 106.654 89.56 101.903 95.7079C96.9537 102.113 82.8447 106.417 77.7864 105.952ZM95.3105 71.816C100.201 72.3339 100.029 84.7978 95.4993 82.3055C92.0276 80.3951 90.156 80.5939 87.7281 80.5653C84.0057 80.5213 80.2654 81.2374 76.5604 80.616C69.4182 79.4181 63.7548 74.5651 65.1086 66.5092C65.4094 64.7198 66.0004 62.8972 66.8481 61.3091C67.3984 60.2782 68.9665 60.7489 68.8226 61.9561C68.7175 62.8382 67.9131 63.8598 67.5821 64.6959C66.7838 66.7127 66.3496 68.9765 66.7375 71.1503C67.6732 76.3931 74.0045 77.3335 78.1084 76.2159C84.0562 74.5962 88.7921 71.1258 95.3105 71.816ZM67.5227 62.5317C66.8685 62.237 66.9274 61.1888 67.667 61.0667C68.5119 60.9272 69.9166 61.4532 70.7714 61.6168C71.6156 61.7783 71.8925 62.9786 71.1028 63.4435C70.3489 63.8872 68.3043 62.8839 67.5227 62.5317ZM68.4849 62.9622C67.6244 62.5325 68.5206 61.0252 69.4738 61.2921C70.6338 61.6168 72.6429 61.7019 73.6297 61.6664C75.7044 61.592 77.7344 61.1499 79.6026 60.1791C80.1628 59.888 80.7025 59.5542 81.2189 59.1847C84.1717 57.0716 82.481 56.6615 79.8758 55.4525C77.6853 54.4359 77.3524 51.2895 79.5463 49.9959C81.3364 48.9404 84.4973 50.2678 86.0483 51.4803C89.7319 54.3597 89.5527 60.247 85.4374 62.5836C80.9245 65.1459 71.2563 64.3461 68.4849 62.9622ZM81.4305 49.6209C84.085 49.814 84.7904 58.8859 82.6532 57.0101C80.9772 55.5391 78.1956 54.9555 76.1123 55.5276C72.9149 56.4056 70.5588 59.7678 68.6443 62.4464C68.0174 63.3234 66.6163 62.8379 66.7351 61.6993C67.0068 59.096 70.8881 54.3681 72.437 52.8364C74.7385 50.5605 78.2641 49.3905 81.4305 49.6209ZM68.0135 61.098C68.7073 61.3686 68.63 62.4722 67.8728 62.5748C66.7396 62.7284 63.8851 61.2055 62.8653 60.5652C59.5579 58.4886 55.7978 53.4502 56.3955 49.1402C56.5164 48.2689 56.8447 47.4298 57.3777 46.7462C58.0908 45.8315 59.1215 45.2608 60.2338 45.1158C63.9181 44.6355 66.2037 48.182 68.0033 50.9528C68.103 51.1063 67.6708 50.896 67.6509 50.8867C67.1598 50.6591 66.6593 50.4518 66.1501 50.2731C65.2386 49.9531 61.3117 48.8432 60.7042 50.3616C59.5198 53.3221 61.7484 57.1589 63.8973 58.9006C65.137 59.9055 66.5568 60.5299 68.0135 61.098Z\",\n    fill: \"#FFF2E1\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.2311 51.0275C67.353 49.7572 66.5043 48.589 66.2284 48.3818L63.8341 49.6882C64.7555 49.8475 66.0235 50.8697 67.2813 51.9263C68.145 52.652 68.8713 51.9537 68.2311 51.0275Z\",\n    fill: \"#FFF2E1\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.9858 102.797C64.4476 101.851 66.6279 100.52 67.1382 99.8343L66.5636 99.2815C65.8391 100.044 63.6659 101.326 61.7232 102.472L61.7139 102.477C58.0574 104.171 55.5867 104.944 53.3655 104.628C50.5482 104.227 48.853 101.193 49.2836 98.4009C49.4804 97.1248 49.9264 95.9887 50.6771 94.7467C51.1681 93.9343 50.8779 92.8194 49.9511 92.5925C48.6445 92.2726 47.5304 92.396 46.0888 93.2399C45.3594 93.6669 44.8268 94.3576 44.5286 95.1443C44.0074 96.5194 43.7443 97.6418 43.7348 98.6467C43.7031 102.013 46.7166 104.658 49.9149 105.778C53.1555 106.914 56.7935 105.827 59.9176 104.406L60.946 103.938C61.6564 103.615 62.3312 103.22 62.9858 102.797Z\",\n    fill: \"#FFF2E1\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M96.205 87.4234C96.998 81.4607 92.7927 80.2882 82.1744 80.7908L92.9487 77.776L99.6528 85.2125L96.205 87.4234Z\",\n    fill: \"#FFF2E1\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M81.073 59.2853C82.4428 56.5467 81.2251 56.1785 79.0139 55.3661C82.5374 53.7734 83.6875 54.1414 84.042 57.376L81.073 59.2853Z\",\n    fill: \"#FFF2E1\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M67.4229 18.1767C67.4719 18.6559 67.1231 19.0841 66.6439 19.1331C30.1178 22.8655 1.74446 52.2038 1.74446 87.7658C1.74446 125.849 34.2886 156.799 74.531 156.799C75.0127 156.799 75.4032 157.19 75.4032 157.671C75.4032 158.153 75.0127 158.543 74.531 158.543C33.4122 158.543 -4.7866e-06 126.898 -3.07609e-06 87.7658C-1.47894e-06 51.2274 29.134 21.2125 66.4666 17.3977C66.9458 17.3487 67.374 17.6975 67.4229 18.1767ZM88.2182 19.0599C88.3082 18.5867 88.7647 18.2759 89.238 18.3659C91.9843 18.8879 94.6763 19.5532 97.3049 20.3534C97.7657 20.4937 98.0256 20.981 97.8853 21.4418C97.745 21.9026 97.2577 22.1625 96.7969 22.0222C94.228 21.2402 91.5969 20.5899 88.9122 20.0797C88.439 19.9897 88.1283 19.5331 88.2182 19.0599ZM147.673 79.3924C148.151 79.3385 148.583 79.6829 148.637 80.1616C148.918 82.6601 149.062 85.1971 149.062 87.7658C149.062 101.559 144.907 114.43 137.724 125.31C137.458 125.712 136.917 125.823 136.515 125.558C136.113 125.292 136.002 124.751 136.268 124.349C143.271 113.741 147.318 101.201 147.318 87.7658C147.318 85.2624 147.177 82.7905 146.903 80.3567C146.849 79.878 147.194 79.4462 147.673 79.3924Z\",\n    fill: \"#FCFFF9\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M85.5752 155.765C85.6139 156.443 85.5905 157.078 85.5051 157.672C85.4234 158.261 85.2788 158.795 85.0714 159.272C84.8637 159.745 84.5732 160.125 84.1999 160.413C83.8303 160.697 83.3957 160.853 82.8962 160.881C82.3848 160.911 81.9176 160.738 81.4946 160.365C81.0713 159.987 80.7389 159.493 80.4972 158.883C80.2595 158.272 80.1203 157.609 80.0796 156.896C80.0409 156.218 80.0627 155.59 80.1451 155.013C80.2314 154.435 80.3789 153.918 80.5874 153.46C80.7997 152.999 81.091 152.632 81.4613 152.36C81.8353 152.085 82.2741 151.932 82.7775 151.904C83.2929 151.874 83.7597 152.038 84.1778 152.396C84.5958 152.75 84.923 153.223 85.1596 153.814C85.3962 154.405 85.5347 155.055 85.5752 155.765ZM80.9626 156.374C80.9897 156.85 81.0589 157.331 81.1702 157.818C81.2855 158.305 81.4347 158.757 81.6177 159.177C81.8007 159.596 82.0287 159.933 82.3018 160.187C82.5788 160.442 82.872 160.561 83.1812 160.543C83.4428 160.528 83.6709 160.414 83.8656 160.2C84.0639 159.981 84.2157 159.714 84.3209 159.398C84.4299 159.078 84.5127 158.717 84.5694 158.316C84.63 157.915 84.6662 157.539 84.678 157.188C84.6898 156.838 84.6867 156.504 84.6686 156.186C84.6414 155.711 84.5728 155.239 84.4626 154.772C84.3524 154.305 84.2087 153.878 84.0315 153.49C83.858 153.099 83.6413 152.787 83.3815 152.555C83.1254 152.319 82.8527 152.209 82.5633 152.226C82.3016 152.241 82.0689 152.344 81.865 152.534C81.6609 152.721 81.4994 152.959 81.3807 153.248C81.2618 153.533 81.1651 153.861 81.0908 154.231C81.0204 154.601 80.9756 154.965 80.9563 155.325C80.9408 155.679 80.9429 156.029 80.9626 156.374Z\",\n    fill: \"#FCFFF9\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M90.7311 151.207C89.8802 151.511 89.266 152.086 88.8885 152.93C88.5143 153.77 88.3976 154.885 88.5385 156.274C88.7483 155.965 89.012 155.714 89.3296 155.519C89.6466 155.321 89.9872 155.192 90.3514 155.13C90.6334 155.083 90.9092 155.083 91.1788 155.13C91.4485 155.178 91.6996 155.27 91.9322 155.408C92.1648 155.546 92.3635 155.747 92.5283 156.009C92.6964 156.266 92.8104 156.573 92.8703 156.93C92.9532 157.423 92.9231 157.891 92.7801 158.334C92.6364 158.773 92.3924 159.142 92.0481 159.441C91.7078 159.74 91.2968 159.93 90.8151 160.011C90.0202 160.145 89.3486 159.97 88.8002 159.486C88.2552 158.998 87.8971 158.244 87.726 157.226C87.5839 156.381 87.5522 155.593 87.6309 154.863C87.7135 154.132 87.8895 153.503 88.1591 152.974C88.4287 152.446 88.7737 152.007 89.1943 151.659C89.6182 151.306 90.1022 151.059 90.6465 150.919L90.7311 151.207ZM90.0397 155.612C89.7538 155.66 89.4844 155.781 89.2313 155.977C88.9783 156.172 88.7665 156.433 88.5959 156.76L88.664 157.165C88.714 157.463 88.7937 157.758 88.9031 158.049C89.0125 158.341 89.1526 158.623 89.3233 158.897C89.4934 159.166 89.7075 159.374 89.9655 159.52C90.2275 159.665 90.5112 159.712 90.8166 159.66C91.0711 159.618 91.2874 159.515 91.4654 159.352C91.6467 159.185 91.7776 158.982 91.8582 158.743C91.9389 158.504 91.9872 158.252 92.0031 157.987C92.0185 157.719 92.0028 157.446 91.956 157.168C91.8593 156.592 91.6293 156.17 91.266 155.901C90.9027 155.632 90.4939 155.535 90.0397 155.612Z\",\n    fill: \"#FCFFF9\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M96.8141 158.221L96.7277 158.366C96.3908 158.492 96.1051 158.674 95.8706 158.914C95.6022 158.547 95.4028 158.235 95.2723 157.977C95.6146 157.678 95.973 157.459 96.3473 157.319C96.4191 157.604 96.5747 157.905 96.8141 158.221Z\",\n    fill: \"#FCFFF9\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.114 151.508C103.337 152.15 103.488 152.767 103.568 153.362C103.651 153.951 103.657 154.503 103.588 155.019C103.518 155.531 103.343 155.976 103.062 156.355C102.784 156.729 102.409 156.998 101.936 157.162C101.452 157.33 100.956 157.292 100.447 157.049C99.9364 156.801 99.4815 156.417 99.0821 155.895C98.6864 155.373 98.3715 154.774 98.1372 154.099C97.9146 153.457 97.764 152.848 97.6853 152.27C97.6104 151.69 97.6107 151.152 97.6863 150.655C97.7643 150.153 97.9442 149.721 98.2261 149.358C98.5104 148.991 98.8908 148.724 99.3673 148.559C99.8549 148.39 100.349 148.42 100.849 148.65C101.348 148.876 101.792 149.241 102.181 149.745C102.57 150.249 102.881 150.837 103.114 151.508ZM98.8439 153.355C99.0001 153.806 99.1982 154.25 99.4384 154.687C99.6824 155.124 99.9496 155.519 100.24 155.872C100.531 156.225 100.842 156.487 101.175 156.657C101.511 156.826 101.825 156.86 102.118 156.759C102.365 156.673 102.554 156.5 102.682 156.241C102.813 155.977 102.886 155.679 102.901 155.346C102.918 155.008 102.899 154.638 102.844 154.237C102.793 153.835 102.725 153.463 102.64 153.123C102.556 152.782 102.461 152.462 102.357 152.162C102.201 151.711 102.006 151.277 101.773 150.858C101.539 150.439 101.284 150.067 101.007 149.743C100.733 149.413 100.44 149.172 100.126 149.021C99.8155 148.864 99.5232 148.833 99.2493 148.928C99.0017 149.014 98.8059 149.176 98.6619 149.415C98.5166 149.651 98.4264 149.924 98.3913 150.234C98.3549 150.541 98.3515 150.883 98.3812 151.259C98.4147 151.634 98.4712 151.997 98.5509 152.348C98.633 152.693 98.7306 153.029 98.8439 153.355Z\",\n    fill: \"#FCFFF9\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M107.676 154.515C108.464 153.961 108.941 153.23 109.107 152.32C109.273 151.411 109.086 150.346 108.546 149.125C108.48 149.402 108.314 149.701 108.048 150.021C107.781 150.337 107.482 150.573 107.152 150.729C106.89 150.854 106.632 150.935 106.377 150.972C106.126 151.008 105.869 150.998 105.605 150.943C105.345 150.886 105.094 150.746 104.852 150.522C104.609 150.299 104.399 149.999 104.22 149.622C104.007 149.174 103.903 148.722 103.907 148.268C103.915 147.811 104.036 147.391 104.271 147.007C104.51 146.621 104.852 146.323 105.297 146.111C106.046 145.756 106.758 145.763 107.43 146.134C108.106 146.503 108.668 147.158 109.114 148.098C109.383 148.664 109.574 149.23 109.689 149.796C109.807 150.359 109.845 150.889 109.803 151.383C109.764 151.876 109.663 152.34 109.5 152.773C109.336 153.207 109.113 153.592 108.829 153.929C108.545 154.266 108.213 154.544 107.834 154.764L107.676 154.515ZM107.249 150.143C107.533 150.008 107.784 149.779 108.004 149.455C108.226 149.125 108.335 148.865 108.332 148.673C108.221 148.457 108.106 148.253 107.988 148.058C107.869 147.864 107.733 147.661 107.579 147.448C107.425 147.235 107.263 147.055 107.092 146.908C106.923 146.755 106.745 146.626 106.559 146.521C106.373 146.416 106.175 146.36 105.966 146.354C105.758 146.343 105.552 146.386 105.348 146.483C105.114 146.594 104.938 146.745 104.819 146.938C104.698 147.128 104.633 147.339 104.625 147.571C104.62 147.802 104.646 148.038 104.703 148.279C104.762 148.514 104.85 148.754 104.966 148.998C105.243 149.583 105.573 149.978 105.956 150.183C106.341 150.382 106.772 150.369 107.249 150.143Z\",\n    fill: \"#FCFFF9\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M114.574 150.825L114.53 150.988C114.239 151.2 114.013 151.452 113.852 151.746C113.495 151.465 113.219 151.219 113.023 151.005C113.272 150.625 113.558 150.317 113.881 150.082C114.027 150.337 114.258 150.585 114.574 150.825Z\",\n    fill: \"#FCFFF9\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M117.281 148.44L117.331 148.47C117.605 148.301 117.861 148.14 118.097 147.987C118.337 147.831 118.561 147.682 118.767 147.541C119.022 147.365 119.25 147.189 119.451 147.012C119.656 146.833 119.823 146.642 119.955 146.441C120.09 146.237 120.183 146.016 120.236 145.778C120.289 145.539 120.29 145.271 120.239 144.973L120.422 144.934C120.56 145.345 120.648 145.603 120.686 145.707C120.724 145.811 120.787 146.008 120.876 146.299C120.969 146.587 121.024 146.768 121.041 146.843C121.06 146.912 121.072 146.969 121.078 147.013C120.973 147.076 120.831 147.164 120.653 147.277C120.475 147.389 120.286 147.51 120.085 147.639C119.884 147.767 119.684 147.897 119.486 148.029C119.291 148.158 119.121 148.273 118.977 148.372C118.902 148.424 118.526 148.687 117.85 149.162C117.178 149.634 116.809 149.893 116.743 149.938L116.522 149.837C116.876 147.872 117.075 146.675 117.117 146.246C117.159 145.817 117.181 145.414 117.182 145.038C117.184 144.655 117.159 144.325 117.108 144.048C117.073 143.85 117.034 143.674 116.991 143.521C116.949 143.361 116.898 143.214 116.838 143.077C116.78 142.938 116.714 142.803 116.638 142.672C116.56 142.537 116.47 142.395 116.366 142.244C116.197 141.999 116.019 141.811 115.832 141.679C115.643 141.544 115.449 141.461 115.249 141.43C115.047 141.395 114.839 141.413 114.627 141.482C114.412 141.548 114.195 141.656 113.976 141.807C113.871 141.879 113.763 141.975 113.653 142.094C113.545 142.211 113.444 142.341 113.35 142.484C113.252 142.623 113.167 142.768 113.093 142.92C113.023 143.07 112.969 143.213 112.933 143.349L112.679 143.306C112.716 143.079 112.776 142.859 112.861 142.646C112.949 142.431 113.055 142.231 113.178 142.045C113.301 141.859 113.436 141.689 113.585 141.533C113.737 141.376 113.895 141.241 114.058 141.128C114.349 140.928 114.638 140.787 114.924 140.706C115.208 140.621 115.481 140.597 115.743 140.634C116.008 140.669 116.257 140.765 116.49 140.922C116.727 141.078 116.941 141.294 117.133 141.572C117.286 141.795 117.408 142.039 117.499 142.304C117.59 142.569 117.657 142.846 117.701 143.133C117.746 143.416 117.769 143.706 117.771 144.003C117.777 144.298 117.772 144.588 117.756 144.874C117.738 145.156 117.712 145.427 117.679 145.686C117.645 145.946 117.613 146.182 117.582 146.396L117.424 147.459C117.359 147.87 117.312 148.197 117.281 148.44Z\",\n    fill: \"#FCFFF9\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M124.696 137.738C125.141 138.252 125.51 138.769 125.805 139.292C126.1 139.808 126.311 140.319 126.439 140.823C126.563 141.325 126.565 141.803 126.445 142.259C126.326 142.71 126.077 143.099 125.699 143.426C125.312 143.762 124.837 143.91 124.274 143.873C123.708 143.832 123.143 143.644 122.579 143.308C122.017 142.97 121.503 142.53 121.035 141.99C120.59 141.477 120.224 140.966 119.937 140.459C119.652 139.949 119.453 139.449 119.339 138.959C119.225 138.464 119.232 137.996 119.359 137.555C119.487 137.108 119.742 136.719 120.123 136.389C120.513 136.051 120.983 135.896 121.533 135.924C122.08 135.949 122.627 136.124 123.176 136.447C123.724 136.771 124.231 137.201 124.696 137.738ZM121.415 141.038C121.727 141.398 122.076 141.737 122.461 142.054C122.85 142.369 123.245 142.637 123.645 142.857C124.046 143.077 124.433 143.204 124.804 143.24C125.179 143.272 125.484 143.187 125.718 142.984C125.916 142.813 126.027 142.583 126.05 142.294C126.074 142 126.031 141.696 125.921 141.382C125.812 141.061 125.657 140.725 125.457 140.373C125.26 140.018 125.06 139.698 124.855 139.413C124.65 139.129 124.444 138.866 124.236 138.626C123.924 138.266 123.581 137.934 123.209 137.632C122.837 137.329 122.462 137.079 122.085 136.88C121.708 136.676 121.346 136.561 120.999 136.536C120.652 136.506 120.369 136.585 120.15 136.775C119.952 136.947 119.83 137.17 119.785 137.446C119.738 137.718 119.755 138.005 119.838 138.307C119.918 138.605 120.041 138.924 120.208 139.262C120.378 139.598 120.566 139.914 120.77 140.21C120.974 140.501 121.189 140.776 121.415 141.038Z\",\n    fill: \"#FCFFF9\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M129.737 138.145L129.793 138.164C130.023 137.939 130.237 137.725 130.435 137.524C130.635 137.32 130.82 137.126 130.99 136.942C131.2 136.715 131.385 136.493 131.542 136.277C131.702 136.057 131.825 135.835 131.909 135.609C131.996 135.381 132.039 135.145 132.038 134.901C132.037 134.656 131.979 134.394 131.865 134.115L132.035 134.037C132.259 134.408 132.402 134.64 132.461 134.733C132.521 134.826 132.626 135.005 132.777 135.269C132.93 135.53 133.023 135.695 133.057 135.764C133.09 135.827 133.115 135.88 133.13 135.921C133.041 136.006 132.922 136.123 132.773 136.272C132.624 136.421 132.465 136.58 132.298 136.749C132.13 136.919 131.963 137.09 131.799 137.262C131.636 137.431 131.496 137.579 131.377 137.707C131.315 137.774 131.006 138.113 130.451 138.725C129.898 139.333 129.594 139.666 129.54 139.724L129.302 139.674C129.218 137.68 129.15 136.468 129.097 136.041C129.044 135.613 128.977 135.215 128.896 134.847C128.814 134.474 128.718 134.157 128.607 133.897C128.53 133.712 128.453 133.549 128.378 133.408C128.302 133.262 128.22 133.129 128.131 133.009C128.045 132.886 127.95 132.768 127.848 132.657C127.742 132.543 127.622 132.424 127.489 132.3C127.27 132.097 127.055 131.952 126.844 131.865C126.63 131.775 126.422 131.736 126.22 131.749C126.015 131.76 125.817 131.822 125.624 131.936C125.429 132.048 125.241 132.201 125.06 132.396C124.974 132.489 124.89 132.606 124.808 132.747C124.729 132.885 124.659 133.034 124.597 133.193C124.533 133.35 124.482 133.511 124.443 133.676C124.407 133.837 124.386 133.988 124.38 134.129L124.123 134.143C124.109 133.913 124.12 133.685 124.157 133.459C124.196 133.23 124.255 133.011 124.334 132.803C124.413 132.595 124.508 132.399 124.619 132.215C124.733 132.028 124.857 131.862 124.992 131.716C125.233 131.457 125.484 131.256 125.745 131.114C126.004 130.97 126.265 130.887 126.528 130.865C126.794 130.841 127.058 130.88 127.321 130.983C127.586 131.082 127.842 131.247 128.089 131.476C128.288 131.66 128.46 131.871 128.607 132.11C128.753 132.349 128.88 132.604 128.985 132.875C129.091 133.141 129.177 133.419 129.245 133.708C129.315 133.995 129.373 134.28 129.42 134.562C129.465 134.841 129.499 135.111 129.523 135.371C129.547 135.632 129.567 135.87 129.583 136.085L129.662 137.157C129.689 137.572 129.714 137.901 129.737 138.145Z\",\n    fill: \"#FCFFF9\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M131.86 130.445L131.604 130.497C131.34 130.286 131.078 130.08 130.818 129.877C130.558 129.674 130.294 129.471 130.025 129.267C129.757 129.062 129.49 128.862 129.225 128.666C128.96 128.469 128.691 128.272 128.418 128.074L128.382 128.003C128.59 127.756 128.788 127.515 128.977 127.28C129.166 127.044 129.348 126.811 129.523 126.581C129.747 126.287 129.916 126.048 130.03 125.866C130.141 125.68 130.213 125.519 130.249 125.381C130.284 125.243 130.287 125.114 130.259 124.993C130.228 124.869 130.18 124.723 130.115 124.553C130.097 124.51 130.081 124.473 130.065 124.441C130.052 124.406 130.042 124.376 130.036 124.352L130.199 124.266C130.819 125.077 131.174 125.571 131.263 125.749C131.005 126.036 130.752 126.333 130.505 126.638C130.26 126.941 130.013 127.255 129.766 127.58C129.684 127.688 129.602 127.795 129.521 127.903C129.441 128.007 129.363 128.114 129.284 128.224C129.469 128.375 129.652 128.524 129.834 128.672C130.018 128.817 130.208 128.964 130.404 129.113C130.597 129.26 130.792 129.406 130.991 129.552C131.191 129.694 131.394 129.838 131.598 129.983C131.725 129.586 131.935 129.195 132.228 128.809C132.337 128.667 132.466 128.523 132.616 128.378C132.763 128.231 132.926 128.098 133.106 127.98C133.282 127.86 133.473 127.76 133.677 127.681C133.882 127.602 134.094 127.559 134.314 127.552C134.537 127.542 134.766 127.574 135.003 127.649C135.243 127.722 135.484 127.85 135.728 128.035C137.137 129.107 137.044 130.897 135.447 133.404L135.193 133.256C136.337 131.298 136.319 129.869 135.136 128.97C134.899 128.79 134.659 128.66 134.416 128.58C134.175 128.496 133.935 128.468 133.695 128.495C133.455 128.522 133.22 128.608 132.99 128.752C132.76 128.897 132.541 129.107 132.332 129.382C132.262 129.474 132.2 129.568 132.145 129.667C132.091 129.765 132.044 129.862 132.007 129.957C131.969 130.053 131.937 130.144 131.912 130.23C131.889 130.312 131.872 130.384 131.86 130.445Z\",\n    fill: \"#FCFFF9\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M121.689 29.465C122.293 30.2471 110.351 25.2943 106.875 24.3741C103.926 23.5933 104.782 19.0748 107.824 19.631C113.118 20.5989 118.511 25.3542 121.689 29.465ZM129.573 27.0233C129.812 29.3547 123.814 25.5933 125.225 17.4117C125.467 16.0052 126.765 14.9942 128.208 15.3303C130.53 15.8709 129.299 24.3391 129.573 27.0233ZM134.847 40.6482C131.732 40.903 136.578 34.4936 145.384 36.306C150.979 37.4576 145.283 41.4768 141.634 40.706C139.345 40.2224 137.153 40.4595 134.847 40.6482ZM129.986 46.6464C128.948 43.8824 134.406 49.7527 135.367 51.7218C137.692 56.4862 139.128 61.9157 139.461 67.2124C139.556 68.7224 138.534 70.101 136.974 70.2355C135.21 70.3876 131.433 50.5015 129.986 46.6464ZM124.331 47.5961C124.803 47.2233 121.43 56.9986 122.009 60.7124C122.49 63.8007 117.835 64.3784 117.547 61.2661C117.018 55.5488 120.005 51.0184 124.331 47.5961ZM116.649 43.6184C118.962 45.0764 108.657 49.5965 110.613 47.3059C110.641 47.2723 106.824 45.7448 107.73 44.8727C108.374 44.2533 111.021 44.3212 109.019 44.3429C108.961 44.3436 108.79 44.3616 108.847 44.3532C110.595 44.0959 115.545 42.9223 116.649 43.6184ZM107.936 44.7003C108.786 44.088 109.971 44.2805 110.584 45.1302C111.196 45.9799 111.003 47.1651 110.154 47.7774C109.304 48.3897 108.119 48.1972 107.507 47.3475C106.894 46.4978 107.087 45.3126 107.936 44.7003ZM116.262 32.7281C116.514 32.8369 101.711 33.676 97.2256 34.5038C93.83 35.1305 92.5263 30.0906 95.9098 29.1968C102.148 27.5489 110.601 30.2854 116.262 32.7281Z\",\n    fill: \"#FFF2E1\"\n  })), _ellipse || (_ellipse = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 102.122,\n    cy: 17.5623,\n    rx: 2.78715,\n    ry: 2.22972,\n    transform: \"rotate(-35.7769 102.122 17.5623)\",\n    fill: \"#FFF2E1\"\n  })), _ellipse2 || (_ellipse2 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 126.576,\n    cy: 39.102,\n    rx: 4.45944,\n    ry: 3.90201,\n    transform: \"rotate(-35.7769 126.576 39.102)\",\n    fill: \"#FFF2E1\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 141.175,\n    cy: 74.6175,\n    r: 3.34458,\n    transform: \"rotate(-35.7769 141.175 74.6175)\",\n    fill: \"#FFF2E1\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.7563 9.65964C75.7937 8.63965 77.1555 8.3245 77.6372 9.22435L80.1866 13.9865C80.3204 14.2365 80.5539 14.4179 80.8292 14.4856L85.8079 15.7108C86.6035 15.9066 86.8389 16.9237 86.2102 17.4492L82.276 20.7371C82.0584 20.9189 81.9283 21.1844 81.9179 21.4677L81.7198 26.8657C81.6824 27.8857 80.3206 28.2009 79.8389 27.301L77.2895 22.5389C77.1557 22.2889 76.9222 22.1075 76.6469 22.0398L71.6682 20.8145C70.8726 20.6187 70.6372 19.6016 71.2659 19.0762L75.2001 15.7883C75.4177 15.6065 75.5478 15.3409 75.5582 15.0576L75.7563 9.65964Z\",\n    fill: \"#FFF2E1\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.3fd8790f45e3fcbc15269256aa6a643c.svg\";\nexport { ForwardRef as ReactComponent };","import \"../../styles/Footer.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../assets/svg/logo.svg\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <section className=\"footer\">\r\n      <div className=\"logo-nav\">\r\n        <img src={logo} alt=\"\" />\r\n        <div className=\"nav-footer\">\r\n          <div className=\"nav-liste\">\r\n            <Link to=\"/informations\" className=\"link\">\r\n              Informations\r\n            </Link>\r\n            <Link to=\"/programmation\" className=\"link\">\r\n              Programmation\r\n            </Link>\r\n            <Link to=\"/activites\" className=\"link\">\r\n              Activités\r\n            </Link>\r\n          </div>\r\n          <div className=\"nav-liste\">\r\n            <Link to=\"/restauration\" className=\"link\">\r\n              Restauration\r\n            </Link>\r\n            <Link to=\"/hebergement\" className=\"link\">\r\n              Hébergement\r\n            </Link>\r\n            <Link to=\"/galerie\" className=\"link\">\r\n              Galerie\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"trait-long\"></div>\r\n      <div className=\"credit\">\r\n        <p>\r\n          Site web créé par Sabrina Le Gall{\" \"}\r\n          <a\r\n            href=\"https://minalg.fr/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            (https://minalg.fr/)\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","var _circle, _g, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgScrollDown(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 64,\n    height: 64,\n    viewBox: \"0 0 64 64\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 32,\n    cy: 32,\n    r: 31,\n    stroke: \"#FEFEFC\",\n    strokeWidth: 2\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_320_27)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.055 26.6117L32 36.535L41.945 26.6117L45 29.6667L32 42.6667L19 29.6667L22.055 26.6117Z\",\n    fill: \"#FEFEFC\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_320_27\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 52,\n    height: 52,\n    fill: \"white\",\n    transform: \"translate(6 8)\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgScrollDown);\nexport default __webpack_public_path__ + \"static/media/scroll-down.a6640090b792ba523d6072c0f6eda482.svg\";\nexport { ForwardRef as ReactComponent };","import personnages from \"../../assets/hero-banner/personnages.png\";\r\nimport grandeRoueBuisson from \"../../assets/hero-banner/grande-roue.png\";\r\nimport sol from \"../../assets/hero-banner/sol.png\";\r\nimport reflet from \"../../assets/hero-banner/reflet.png\";\r\nimport lune from \"../../assets/hero-banner/lune.png\";\r\nimport lucioles from \"../../assets/hero-banner/lucioles.png\";\r\nimport lanternes from \"../../assets/hero-banner/lanternes.png\";\r\nimport etoiles from \"../../assets/hero-banner/etoiles.png\";\r\nimport artificesDroit from \"../../assets/hero-banner/artifices-droit.png\";\r\nimport artificesGauche from \"../../assets/hero-banner/artifices-gauche.png\";\r\nimport artificesMilieu from \"../../assets/hero-banner/artifices-milieu.png\";\r\nimport mer from \"../../assets/hero-banner/mer.png\";\r\nimport scrollDown from \"../../assets/icons/scroll-down.svg\"\r\nimport { useEffect } from \"react\";\r\nimport \"../../styles/Hero-banner.css\";\r\n\r\nfunction HeroBanner() {\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const scrollY = window.scrollY;\r\n  \r\n      const heroTitle = document.querySelector(\".hero-title\");\r\n      const artificeGauche = document.getElementById(\"artificeGauche\");\r\n      const artificeMilieu = document.getElementById(\"artificeMilieu\");\r\n      const artificeDroit = document.getElementById(\"artificeDroit\");\r\n      const lanternes = document.getElementById(\"lanternes\");\r\n      const sol = document.getElementById(\"sol\");\r\n      const roue = document.getElementById(\"roue\");\r\n      const personnages = document.getElementById(\"personnages\");\r\n  \r\n      // Hero title shrink\r\n      if (scrollY > 100) {\r\n        heroTitle.classList.add(\"small\");\r\n      } else {\r\n        heroTitle.classList.remove(\"small\");\r\n      }\r\n  \r\n      // Artifices apparitions échelonnées\r\n      artificeGauche.classList.toggle(\"visible\", scrollY > 100);\r\n      artificeMilieu.classList.toggle(\"visible\", scrollY > 120);\r\n      artificeDroit.classList.toggle(\"visible\", scrollY > 130);\r\n  \r\n      // Entrées haut/bas\r\n      const showElements = scrollY > 150;\r\n      lanternes.classList.toggle(\"visible\", showElements);\r\n      sol.classList.toggle(\"visible\", showElements);\r\n      roue.classList.toggle(\"visible\", showElements);\r\n      personnages.classList.toggle(\"visible\", showElements);\r\n    };\r\n  \r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n  return (\r\n    <section className=\"parallax-wrapper\">\r\n      <div className=\"parallax-hero-banner\">\r\n        <img src={etoiles} alt=\"\" id=\"etoiles\" />\r\n        <img src={lune} alt=\"\" id=\"lune\" className=\"img-longue\" />\r\n        <img src={artificesGauche} alt=\"\" className=\"img-longue artifice\" id=\"artificeGauche\"/>\r\n        <img src={artificesMilieu} alt=\"\" className=\"img-longue artifice\" id=\"artificeMilieu\"/>\r\n        <img src={artificesDroit} alt=\"\" className=\"img-longue artifice\" id=\"artificeDroit\"/>\r\n        <img src={mer} alt=\"\" className=\"img-longue\" />\r\n        <img src={reflet} alt=\"\" id=\"reflet\" className=\"img-longue\" />\r\n        <img src={lucioles} alt=\"\" className=\"img-longue\" />\r\n        <h1 className=\"white hero-title\">Stéphie & Alain</h1>\r\n        <img src={lanternes} alt=\"\" id=\"lanternes\" className=\"entry-down\"/>\r\n        <img src={sol} alt=\"\" id=\"sol\" className=\"entry-up\"/>\r\n        <img src={grandeRoueBuisson} alt=\"\" id=\"roue\" className=\"entry-up\"/>\r\n        <img src={personnages} alt=\"\" id=\"personnages\" className=\"entry-up\"/>\r\n        <img src={scrollDown} alt=\"\" id=\"scroll-down\"/>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default HeroBanner;\r\n","function FeuxVertOrange() {\r\n  return (\r\n    <svg\r\n      width=\"225\"\r\n      height=\"306\"\r\n      viewBox=\"0 0 225 306\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"feux-accueil-timer\"\r\n    >\r\n      <path\r\n        d=\"M158.878 76.4944C157.194 81.1374 167.965 69.818 169.83 65.9215C174.25 56.685 176.192 46.1457 177.16 36.0027C177.954 27.6769 165.928 24.6256 163.324 32.849C159.056 46.3315 164.237 61.7212 158.878 76.4944ZM132.103 72.6864C132.878 73.59 123.671 30.2684 123.522 25.3476C123.261 16.7402 110.21 16.6014 110.243 25.2713C110.305 41.7925 121.752 60.6204 132.103 72.6864ZM119.343 95.3295C120.518 95.8323 91.6793 62.0593 88.206 57.1118C82.1969 48.5522 68.7277 56.7851 74.2503 65.8137C82.4302 79.1869 105.615 89.4545 119.343 95.3295ZM123.753 112.698C125.216 112.055 69.8468 116.083 65.0364 115.658C58.3397 115.066 57.1208 125.203 63.8411 125.88C83.765 127.887 105.823 120.573 123.753 112.698ZM142.749 124.441C141.259 117.13 134.077 142.398 130.532 147.621C127.632 151.895 133.687 156.767 137.021 152.713C143.48 144.859 144.719 134.101 142.749 124.441ZM170.255 106.305C166.049 106.058 180.829 116.749 193.444 115.118C194.762 114.948 195.946 114.415 196.821 113.387C203.682 105.334 176.402 106.665 170.255 106.305ZM164.265 90.7095C162.092 91.7446 175.213 92.2774 180.922 88.8173C188.444 84.2585 194.113 76.4239 198.036 68.6751C199.264 66.2492 199.179 63.4083 197.432 61.2355C193.102 55.8519 175.461 85.3759 164.265 90.7095Z\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <ellipse\r\n        cx=\"9.27214\"\r\n        cy=\"11.5902\"\r\n        rx=\"9.27214\"\r\n        ry=\"11.5902\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 156.465 95.4376)\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <circle\r\n        cx=\"6.9541\"\r\n        cy=\"6.9541\"\r\n        r=\"6.9541\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 210.746 48.7507)\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <path\r\n        d=\"M72.0835 187.029C71.4186 188.661 89.5601 174.459 95.088 171.221C99.7787 168.473 96.1542 161.124 91.1965 163.53C82.5692 167.718 75.5782 178.455 72.0835 187.029ZM57.3808 186.599C58.0837 190.716 66.5868 181.396 60.2613 168.022C59.1739 165.723 56.4641 164.606 54.1459 165.872C50.4174 167.908 56.5715 181.86 57.3808 186.599ZM54.8266 212.508C60.2962 211.46 48.9195 202.767 34.6645 210.08C25.6069 214.727 37.3038 218.91 43.2012 215.846C46.9019 213.923 50.7783 213.284 54.8266 212.508ZM66.0356 220.487C66.4988 215.247 59.928 227.93 59.2177 231.769C57.4993 241.058 57.6241 251.066 59.5791 260.318C60.1364 262.956 62.5494 264.836 65.2916 264.322C68.3936 263.742 65.3896 227.797 66.0356 220.487ZM76.1965 219.42C75.2093 219.005 85.6635 234.179 86.442 240.832C87.0893 246.364 95.3579 245.134 94.3674 239.654C92.5476 229.585 85.258 223.232 76.1965 219.42ZM87.4882 208.926C84.2129 212.532 104.063 215.376 99.6122 212.377C99.547 212.333 105.372 207.889 103.401 206.824C102 206.067 97.4869 207.447 100.935 206.529C101.034 206.503 101.337 206.452 101.235 206.464C98.1109 206.857 89.0519 207.204 87.4882 208.926ZM102.964 206.626C101.213 205.98 99.2699 206.876 98.624 208.627C97.9781 210.378 98.874 212.321 100.625 212.967C102.376 213.613 104.319 212.717 104.965 210.966C105.611 209.215 104.715 207.272 102.964 206.626ZM82.9577 190.043C82.5766 190.35 108.393 184.728 116.489 184.009C122.618 183.465 122.452 174.19 116.216 174.27C104.719 174.417 91.5108 183.148 82.9577 190.043Z\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <ellipse\r\n        cx=\"4.96666\"\r\n        cy=\"3.97333\"\r\n        rx=\"4.96666\"\r\n        ry=\"3.97333\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 106.034 155.247)\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <ellipse\r\n        cx=\"7.94666\"\r\n        cy=\"6.95333\"\r\n        rx=\"7.94666\"\r\n        ry=\"6.95333\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 78.1524 202.135)\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <circle\r\n        cx=\"5.96\"\r\n        cy=\"5.96\"\r\n        r=\"5.96\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 67.8242 270.32)\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <path\r\n        d=\"M172.351 153.094C172.509 151.334 170.24 150.497 169.217 151.937L163.52 159.96C163.236 160.36 162.796 160.621 162.309 160.677L153.109 161.743C151.7 161.906 151.075 163.601 152.04 164.64L158.344 171.424C158.678 171.784 158.844 172.268 158.8 172.757L157.923 182.557C157.765 184.316 160.035 185.153 161.057 183.713L166.754 175.69C167.038 175.29 167.478 175.03 167.966 174.973L177.166 173.907C178.574 173.744 179.199 172.049 178.234 171.011L171.93 164.226C171.596 163.867 171.43 163.382 171.474 162.894L172.351 153.094Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M142.318 184.519C142.481 182.755 140.202 181.915 139.181 183.362L136.573 187.057C136.291 187.457 135.853 187.719 135.367 187.777L130.325 188.386C128.925 188.555 128.304 190.238 129.259 191.276L132.698 195.012C133.029 195.373 133.193 195.856 133.148 196.344L132.731 200.847C132.568 202.611 134.847 203.452 135.868 202.004L138.476 198.309C138.758 197.909 139.196 197.647 139.682 197.589L144.724 196.98C146.124 196.811 146.745 195.128 145.79 194.09L142.351 190.354C142.019 189.993 141.856 189.51 141.901 189.022L142.318 184.519Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default FeuxVertOrange;\r\n","import { useState, useEffect } from \"react\";\r\nimport \"../../styles/Timer.css\";\r\n\r\n//Assets\r\nimport FeuxVertOrange from \"../../assets/svg/Feux-vert-orange\";\r\n\r\nconst TIMER_TARGET = new Date(\"2025-09-06T11:59:59\");\r\n\r\nconst getTimeLeft = () => {\r\n  const totalTimeLeft = TIMER_TARGET - new Date();\r\n  const days = Math.floor(totalTimeLeft / (1000 * 60 * 60 * 24));\r\n  const hours = Math.floor((totalTimeLeft / (1000 * 60 * 60)) % 24);\r\n  const minutes = Math.floor((totalTimeLeft / (1000 * 60)) % 60);\r\n  const seconds = Math.floor((totalTimeLeft / 1000) % 60);\r\n  return { days, hours, minutes, seconds };\r\n};\r\n\r\nfunction Timer() {\r\n  const [timeLeft, setTimeLeft] = useState(() => getTimeLeft());\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeLeft(getTimeLeft());\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"timer fade-in-section\">\r\n      <div className=\"title-timer-accueil\">\r\n        <FeuxVertOrange />\r\n        <h2 className=\"text-center\">\r\n          Le grand <span className=\"title pink\">jour</span> approche...\r\n          Préparez-vous à le <span className=\"title orange\">célébrer</span> avec\r\n          <span className=\"title green\"> nous</span> !\r\n        </h2>\r\n      </div>\r\n\r\n      {/* Fonctionnalité compte à rebours */}\r\n      <div className=\"timer-content\">\r\n        <div className=\"box\">\r\n          <div className=\"value\">\r\n            <span>{timeLeft.days}</span>\r\n          </div>\r\n          <span className=\"label\">Jours</span>\r\n        </div>\r\n        <span className=\"dots\">:</span>\r\n        <div className=\"box\">\r\n          <div className=\"value\">\r\n            <span>{timeLeft.hours}</span>\r\n          </div>\r\n          <span className=\"label\">Heures</span>\r\n        </div>\r\n        <span className=\"dots\">:</span>\r\n        <div className=\"box\">\r\n          <div className=\"value\">\r\n            <span>{timeLeft.minutes}</span>\r\n          </div>\r\n          <span className=\"label\">Minutes</span>\r\n        </div>\r\n        <span className=\"dots\">:</span>\r\n        <div className=\"box\">\r\n          <div className=\"value\">\r\n            <span>{timeLeft.seconds}</span>\r\n          </div>\r\n          <span className=\"label\">Secondes</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","function FeuxRoseOrangeDroit() {\r\n  return (\r\n    <svg\r\n      width=\"225\"\r\n      height=\"306\"\r\n      viewBox=\"0 0 225 306\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"feux-accueil-introduction\"\r\n    >\r\n      <path\r\n        d=\"M65.8221 76.4944C67.5063 81.1374 56.7356 69.818 54.8707 65.9215C50.4502 56.685 48.5081 46.1457 47.5404 36.0027C46.746 27.6769 58.7727 24.6256 61.3759 32.849C65.6439 46.3315 60.463 61.7212 65.8221 76.4944ZM92.5975 72.6864C91.8224 73.59 101.03 30.2684 101.179 25.3476C101.439 16.7402 114.49 16.6014 114.458 25.2713C114.396 41.7925 102.948 60.6204 92.5975 72.6864ZM105.357 95.3295C104.182 95.8323 133.021 62.0593 136.494 57.1118C142.503 48.5522 155.973 56.7851 150.45 65.8137C142.27 79.1869 119.086 89.4545 105.357 95.3295ZM100.948 112.698C99.4839 112.055 154.854 116.083 159.664 115.658C166.361 115.066 167.58 125.203 160.859 125.88C140.935 127.887 118.877 120.573 100.948 112.698ZM81.9511 124.441C83.4419 117.13 90.6238 142.398 94.1679 147.621C97.0684 151.895 91.0138 156.767 87.6798 152.713C81.22 144.859 79.9814 134.101 81.9511 124.441ZM54.4451 106.305C58.6511 106.058 43.8717 116.749 31.2564 115.118C29.9387 114.948 28.7543 114.415 27.8789 113.387C21.0184 105.334 48.2985 106.665 54.4451 106.305ZM60.4356 90.7095C62.6086 91.7446 49.4873 92.2774 43.7781 88.8173C36.2562 84.2585 30.5875 76.4239 26.6646 68.6751C25.4364 66.2492 25.5216 63.4083 27.2688 61.2355C31.5979 55.8519 49.2391 85.3759 60.4356 90.7095Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <ellipse\r\n        cx=\"80.9454\"\r\n        cy=\"103.103\"\r\n        rx=\"9.27214\"\r\n        ry=\"11.5902\"\r\n        transform=\"rotate(-20.2469 80.9454 103.103)\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <circle\r\n        cx=\"22.8849\"\r\n        cy=\"52.8686\"\r\n        r=\"6.9541\"\r\n        transform=\"rotate(-20.2469 22.8849 52.8686)\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M152.617 187.03C153.282 188.661 135.14 174.459 129.612 171.221C124.922 168.474 128.546 161.124 133.504 163.53C142.131 167.718 149.122 178.455 152.617 187.03ZM167.32 186.599C166.617 190.716 158.114 181.396 164.439 168.022C165.526 165.723 168.236 164.606 170.554 165.872C174.283 167.908 168.129 181.86 167.32 186.599ZM169.874 212.508C164.404 211.46 175.781 202.767 190.036 210.08C199.093 214.727 187.397 218.91 181.499 215.846C177.798 213.923 173.922 213.285 169.874 212.508ZM158.665 220.487C158.202 215.247 164.772 227.93 165.483 231.769C167.201 241.058 167.076 251.066 165.121 260.319C164.564 262.956 162.151 264.836 159.409 264.322C156.307 263.742 159.311 227.797 158.665 220.487ZM148.504 219.42C149.491 219.005 139.037 234.18 138.258 240.832C137.611 246.364 129.342 245.135 130.333 239.654C132.153 229.585 139.442 223.232 148.504 219.42ZM137.212 208.926C140.487 212.532 120.637 215.376 125.088 212.377C125.153 212.333 119.328 207.889 121.3 206.824C122.7 206.067 127.213 207.447 123.765 206.529C123.666 206.503 123.363 206.452 123.465 206.465C126.589 206.857 135.648 207.204 137.212 208.926ZM121.736 206.626C123.487 205.98 125.43 206.876 126.076 208.627C126.722 210.378 125.826 212.321 124.075 212.967C122.324 213.613 120.381 212.717 119.735 210.966C119.089 209.215 119.985 207.272 121.736 206.626ZM141.743 190.043C142.124 190.35 116.307 184.728 108.211 184.009C102.083 183.465 102.249 174.19 108.484 174.27C119.981 174.417 133.19 183.148 141.743 190.043Z\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <ellipse\r\n        cx=\"124.701\"\r\n        cy=\"157.256\"\r\n        rx=\"4.96666\"\r\n        ry=\"3.97333\"\r\n        transform=\"rotate(-20.2469 124.701 157.256)\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <ellipse\r\n        cx=\"156.41\"\r\n        cy=\"205.908\"\r\n        rx=\"7.94666\"\r\n        ry=\"6.95333\"\r\n        transform=\"rotate(-20.2469 156.41 205.908)\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <circle\r\n        cx=\"164.53\"\r\n        cy=\"273.849\"\r\n        r=\"5.96\"\r\n        transform=\"rotate(-20.2469 164.53 273.849)\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <path\r\n        d=\"M52.3489 153.094C52.1914 151.334 54.4607 150.497 55.4833 151.937L61.18 159.96C61.4641 160.36 61.9045 160.62 62.3918 160.677L71.5917 161.743C73.0001 161.906 73.6253 163.601 72.6602 164.64L66.356 171.424C66.0221 171.784 65.8564 172.268 65.9002 172.757L66.7775 182.557C66.935 184.316 64.6657 185.153 63.6431 183.713L57.9464 175.69C57.6624 175.29 57.2219 175.03 56.7347 174.973L47.5347 173.907C46.1263 173.744 45.5011 172.049 46.4662 171.011L52.7704 164.226C53.1043 163.867 53.27 163.382 53.2262 162.894L52.3489 153.094Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M82.3828 184.519C82.2196 182.755 84.4982 181.915 85.5197 183.362L88.1272 187.057C88.4094 187.457 88.8478 187.719 89.3337 187.777L94.3756 188.386C95.7757 188.555 96.3965 190.238 95.4415 191.276L92.0024 195.012C91.6709 195.373 91.5075 195.856 91.5526 196.344L91.9691 200.847C92.1323 202.611 89.8537 203.451 88.8323 202.004L86.2247 198.309C85.9425 197.909 85.5041 197.647 85.0182 197.589L79.9763 196.98C78.5762 196.811 77.9554 195.128 78.9104 194.09L82.3495 190.354C82.681 189.993 82.8444 189.51 82.7993 189.022L82.3828 184.519Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default FeuxRoseOrangeDroit;\r\n","import accueilIntroduction from \"../../assets/accueil/accueil-introduction.jpg\";\r\nimport \"../../styles/Introduction.css\";\r\nimport FeuxRoseOrangeDroit from \"../../assets/svg/Feux-rose-orange-droit\";\r\n\r\nfunction Introduction() {\r\n  return (\r\n    <div className=\"container-content-text fade-in-section\">\r\n      <div className=\"container-content\">\r\n        <img src={accueilIntroduction} alt=\"\" className=\"img-grande\" />\r\n        <div className=\"content\">\r\n          <div className=\"ill-feux-intro\">\r\n            <FeuxRoseOrangeDroit />\r\n            <h2>Bienvenue dans notre plus belle aventure !</h2>\r\n          </div>\r\n\r\n          <div className=\"text\">\r\n            <p>\r\n              Vous nous connaissez, on adore les jeux, les énigmes et les défis…\r\n              on a décidé de vous embarquez dans le plus beau de ceux-ci, celui\r\n              de se dire oui !\r\n            </p>\r\n            <p>\r\n              Après des années à accumuler des points d'expérience ensemble, à\r\n              explorer des mondes (réels et virtuels) et à partager notre\r\n              passion pour le Japon, il était temps de passer au niveau suivant.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"text\">\r\n        <p>\r\n          Nous prévoyons pour cette journée, bonne humeur, surprise et clin\r\n          d'œil à nos univers préférés. Prêt à jouer avec nous ? Promis, pas de\r\n          chrono, pas de cadenas… Juste beaucoup de fun et d'amour !\r\n        </p>\r\n        <p>\r\n          Un mariage comme un festival, rempli de belles émotions et entouré de\r\n          ceux qui comptent pour nous.\r\n        </p>\r\n        <p>\r\n          Afin de profiter pleinement de cette journée, où jeux et activités\r\n          vous attendent, armez-vous d'entrain, laissez les costumes trois\r\n          pièces au placard et optez pour une tenue habillée dans lesquels vous\r\n          pourrez bouger, rire et vous amusez en toute liberté.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Introduction;\r\n","function BrancheOrange() {\r\n  return (\r\n    <svg\r\n      width=\"207\"\r\n      height=\"146\"\r\n      viewBox=\"0 0 207 146\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"branche-orange-info\"\r\n    >\r\n      <path\r\n        d=\"M0.5 34V38C14 41 55.5 49.5 61.3125 53.3821C52.1621 61.4977 47.262 67.129 42.5497 75.2371C40.085 79.4778 38.3438 84.7432 40.5817 89.1077C41.5655 91.0265 43.0413 92.1809 45.1667 92.7694C50.661 94.2906 56.0935 90.3783 58.9826 85.4636C64.4205 76.2126 66.6792 68.3796 69.1875 55.9214C76.3642 58.2729 83.1201 60.5963 89.5312 62.9417C83.8921 71.5689 72.4381 78.3509 64.7462 89.2491C62.2133 92.8379 60.8894 97.2896 61.691 101.608C62.4965 105.948 64.5289 107.91 67.9009 108.526C74.1772 109.672 80.2008 105.602 83.9905 100.469C91.5984 90.166 94.5555 80.9836 98.0625 66.1563C103.782 68.3786 109.23 70.6401 114.469 72.9815C99.5935 86.5098 89.7983 94.8953 89.1615 106.872C88.958 110.7 90.3855 114.696 93.5492 116.86C94.0795 117.223 94.6299 117.528 95.2125 117.78C100.449 120.044 106.221 116.304 109.507 111.641C116.713 101.414 118.989 91.89 121.031 76.0093C126.232 78.4871 131.241 81.0674 136.125 83.7941C128.391 92.5272 123.702 98.3842 119.379 106.521C116.828 111.321 115.349 117.046 117.283 122.127C118.251 124.67 119.842 126.271 122.74 126.903C126.283 127.677 129.947 126.17 132.568 123.664C140.128 116.437 142.081 106.545 143.344 87.9863C149.125 91.4771 154.773 95.2148 160.406 99.2777C154.085 104.221 150.294 107.903 146.536 114.071C144.326 117.7 143.006 123.76 147.026 125.136C147.722 125.375 148.564 125.457 149.61 125.373C150.686 125.288 151.733 124.962 152.709 124.503C160.516 120.834 162.549 114.787 164.344 102.172C170.476 106.765 176.623 111.765 182.94 117.272C174.902 121.162 170.103 123.739 164.713 129.643C163.12 131.387 161.632 133.626 162.195 135.92C162.558 137.4 163.657 138.36 165.604 139.032C169.639 140.426 174.121 138.631 176.775 135.288C180.58 130.495 182.38 125.87 184.437 118.585C184.739 118.85 185.041 119.117 185.344 119.385C185.499 129.671 186.65 135.445 191.653 141.637C193.422 143.828 195.951 145.49 198.766 145.532C201.51 145.573 202.771 144.385 203.521 142.204C204.387 139.683 204.268 136.879 203.294 134.398C200.971 128.489 195.976 125.24 186.656 120.553C194.914 120.531 199.804 119.644 203.39 115.789C206.419 112.534 207.869 106.943 204.81 103.716C204.255 103.13 203.581 102.742 202.757 102.501C200.849 101.944 198.797 102.463 197.025 103.363C192.795 105.511 189.416 108.953 183.706 116.628C176.134 106.825 168.056 98.4886 158.444 91.0222C171.087 85.8933 177.834 82.2854 182.42 77.5641C185.602 74.2874 187.855 68.5858 184.508 65.4773C183.865 64.8798 183.054 64.4846 182.042 64.2534C178.689 63.4879 175.266 65.077 172.634 67.2911C165.77 73.0654 162.435 79.3011 158.444 91.0222C153.806 87.4198 148.811 84.02 143.344 80.7561C158.359 67.9718 165.359 59.8224 170.901 48.552C173.239 43.7975 175.235 37.0286 170.911 33.9663C168.711 32.4079 165.142 32.4386 159.094 33.9285C147.281 38.5223 141.655 53.9209 136.125 76.6723C131.443 74.1593 126.431 71.7142 121.031 69.3035C137.107 49.4078 144.982 38.3114 144.063 28.3239C143.84 25.9018 142.773 23.6298 141.348 21.6587C135.654 13.7826 131.108 15.7044 125.105 23.0692C120.836 28.3068 117.997 34.6154 116.889 41.2808C115.408 50.1868 115.682 56.9127 115.781 67.0218C110.44 64.7608 104.737 62.521 98.621 60.2741C106.308 46.5158 110.884 37.9278 112.147 24.93C112.578 20.5002 112.29 15.3532 108.808 12.5813C106.404 10.6673 103.326 11.3672 98.2119 15.6915C94.4539 18.8689 91.5509 23.0005 89.8921 27.6337C86.4299 37.3037 86.9997 44.9824 90.8438 57.4894C84.4948 55.2717 77.729 53.0359 70.5 50.7549C71.6275 44.7565 84.8623 26.9607 85.6586 13.3267C85.9056 9.09628 84.0345 4.91791 80.8256 2.15024C76.9459 -1.19603 73.0179 -0.713959 67.3391 4.14137C62.0564 8.65796 58.1861 14.7224 56.2181 21.3882C53.3786 31.0055 54.7122 37.9485 60.665 47.7097C55.0252 45.9943 6.68477 35.7881 0.5 34Z\"\r\n        fill=\"#F9A626\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default BrancheOrange;\r\n","function BrancheVert() {\r\n  return (\r\n    <svg\r\n      width=\"250\"\r\n      height=\"203\"\r\n      viewBox=\"0 0 276 229\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"branche-vert-info\"\r\n    >\r\n      <path\r\n        d=\"M1.49739 193.521L0.291293 186.346C12.1253 184.357 81.757 162.284 89.3126 158.407C74.9428 149.418 66.9524 142.848 58.6496 132.85C54.3071 127.62 50.7178 120.824 52.7736 114.345C53.6773 111.497 55.4289 109.581 58.1984 108.288C65.3577 104.947 73.6808 109.045 78.7582 115.098C88.3152 126.492 93.2016 136.678 99.4916 153.128C108.759 148.265 117.459 143.538 125.682 138.86C115.993 128.365 98.7812 121.728 85.7654 108.601C81.4794 104.278 78.6474 98.4985 78.7507 92.412C78.8545 86.296 81.1813 83.1473 85.6482 81.5314C93.9625 78.5238 103.13 82.702 109.488 88.8457C122.252 101.179 128.403 113.049 136.602 132.507C143.908 128.156 150.834 123.813 157.456 119.41C134.019 104.339 118.706 95.1293 115.084 78.9069C113.926 73.7227 114.959 67.9333 118.786 64.2491C119.427 63.6315 120.109 63.0881 120.848 62.6099C127.483 58.3124 136.231 62.0987 141.793 67.7167C153.992 80.0368 159.29 92.5302 165.729 113.764C172.267 109.183 178.52 104.506 184.568 99.6578C171.993 89.4994 164.238 82.5723 156.461 72.446C151.873 66.471 148.536 58.9871 150.011 51.5993C150.75 47.9007 152.557 45.3482 156.372 43.8177C161.037 41.9467 166.39 43.1644 170.548 45.9869C182.54 54.1267 187.481 67.1971 193.471 92.2701C200.57 86.1713 207.43 79.7657 214.195 72.919C204.42 67.616 198.393 63.455 191.84 55.8878C187.986 51.437 184.791 43.4577 189.968 40.6536C190.865 40.1678 191.996 39.8624 193.446 39.7358C194.935 39.6057 196.441 39.8104 197.881 40.2133C209.393 43.4338 213.561 51.2316 218.911 68.0585C226.236 60.3734 233.489 52.1284 240.857 43.1501C228.978 39.6809 221.827 37.2609 213.105 30.4316C210.527 28.413 207.979 25.6961 208.222 22.4307C208.378 20.3248 209.659 18.7607 212.166 17.3943C217.36 14.5626 223.897 15.9856 228.293 19.9454C234.594 25.6219 238.116 31.5293 242.602 41.0123C242.953 40.5799 243.305 40.1457 243.656 39.7099C241.506 25.6172 241.752 17.4626 247.167 7.85006C249.082 4.44992 252.155 1.59665 255.994 0.892806C259.734 0.206974 261.73 1.53998 263.256 4.34929C265.019 7.59482 265.501 11.4549 264.739 15.0688C262.922 23.6787 256.841 29.2658 245.182 37.812C256.472 35.9458 263.358 36.034 269.145 40.4788C274.032 44.232 277.298 51.5391 273.86 56.652C273.235 57.5805 272.404 58.2657 271.333 58.7839C268.854 59.9835 265.93 59.7459 263.301 58.9231C257.028 56.9591 251.618 53.0316 242.052 43.855C233.956 58.9907 224.831 72.24 213.41 84.6522C231.866 88.7571 241.917 92.1377 249.268 97.5367C254.37 101.284 258.758 108.558 254.899 113.575C254.157 114.54 253.14 115.266 251.81 115.814C247.403 117.631 242.361 116.245 238.255 113.824C227.547 107.51 221.557 99.754 213.41 84.6522C207.899 90.6408 201.854 96.4346 195.132 102.151C218.589 116.173 230.028 125.703 240.191 139.832C244.479 145.793 248.761 154.585 243.556 159.763C240.907 162.399 236.022 163.177 227.414 162.53C210.215 158.965 198.989 139.213 186.204 109.391C180.383 113.901 174.095 118.394 167.269 122.929C193.81 146.426 207.122 159.782 208.159 173.643C208.411 177.004 207.475 180.354 205.98 183.375C200.008 195.447 193.354 193.865 183.458 185.179C176.421 179.002 171.092 171.032 168.046 162.178C163.976 150.347 162.805 141.092 160.619 127.253C153.839 131.57 146.558 135.942 138.717 140.417C152.383 157.454 160.61 168.14 165.322 185.613C166.928 191.568 167.718 198.668 163.596 203.256C160.749 206.424 156.383 206.175 148.4 201.44C142.534 197.961 137.618 192.981 134.286 187.031C127.333 174.61 126.348 163.985 128.728 146.01C120.561 150.499 111.828 155.109 102.472 159.887C105.391 167.826 127.567 189.106 131.787 207.556C133.097 213.28 131.499 219.421 127.75 223.94C123.216 229.405 117.737 229.648 108.861 224.317C100.604 219.358 93.9214 211.96 89.7004 203.302C83.6104 190.811 83.838 181.016 89.7309 166.308C82.4174 169.948 16.7829 190.952 1.49739 193.521Z\"\r\n        fill=\"#97AC83\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default BrancheVert;\r\n","import \"../../styles/Encart-info.css\"\r\nimport BrancheOrange from \"../../assets/svg/Branche-orange\";\r\nimport BrancheVert from \"../../assets/svg/Branche-vert\";\r\n\r\nfunction EncartInfo() {\r\n    return (\r\n      <div className=\"container-info fade-in-section\">\r\n        <BrancheVert />\r\n        <div className=\"box-info\">\r\n            <h3 className=\"pink\">Quand ?</h3>\r\n            <div className=\"trait bg-pink\"></div>\r\n            <p>06 Septembre 2025 - 13h</p>\r\n        </div>\r\n        <div className=\"box-info\">\r\n            <h3 className=\"green\">Où ?</h3>\r\n            <div className=\"trait bg-green\"></div>\r\n            <p>Domaine de l'Oiselière,<br />85140 Chauché</p>\r\n        </div>\r\n        <div className=\"box-info\">\r\n            <h3 className=\"orange\">Qui ?</h3>\r\n            <div className=\"trait bg-orange\"></div>\r\n            <p>Nos plus chers amis et notre famille,<br />De près et de loin.</p>\r\n        </div>\r\n        <BrancheOrange />\r\n      </div>\r\n    );\r\n  }\r\n    \r\n  export default EncartInfo;\r\n    ","import { Link } from \"react-router-dom\";\r\nimport \"../../styles/Button.css\";\r\n\r\nfunction Button({ link, color, borderColor }) {\r\n  return (\r\n    <Link to={link} className={`button button-galerie ${borderColor}`}>\r\n      <svg\r\n        width=\"35\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 39 28\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"fleche-button\"\r\n      >\r\n        <path\r\n          d=\"M2 14.2034H37M37 14.2034L27.1685 26M37 14.2034L27.1685 2\"\r\n          stroke={color}\r\n          stroke-width=\"3\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import Marquee from \"react-fast-marquee\";\r\nimport \"../../styles/Slider.css\";\r\n\r\nconst words = [\r\n  \"Le marié a tenté un moonwalk… échec total ! 🕺❌\",\r\n  \"•\",\r\n  \"Le témoin a oublié son discours… Gêne palpable. 😅\",\r\n  \"•\",\r\n  \"Le bouquet a été lancé… 3 blessés légers. 💐💥\",\r\n  \"•\",\r\n  \"最初のヒント: 赤いワイヤーの写真の下のコードを翻訳してください (1=A, 5=E, 12=L, etc...)\",\r\n  \"•\",\r\n  \"Un enfant a découvert le bar à bonbons… Chaos imminent ! 🍬😱\",\r\n  \"•\",\r\n  \"Le traiteur en rupture de champagne… Révolution annoncée ! 🍾🚨\",\r\n  \"•\",\r\n  \"Le photobooth déborde… Selfies en surcharge ! 📸📢\",\r\n  \"•\",\r\n  \"La mariée en talons dans l’herbe… Suspense insoutenable ! 👠⏳\",\r\n  \"•\",\r\n  \"Une grand-mère a pris le contrôle de la piste… Respect éternel ! 💃🔥\",\r\n  \"•\",\r\n];\r\n\r\nfunction Slider() {\r\n  return (\r\n      <Marquee duration={30} autoFill=\"true\" gradient=\"true\" gradientColor=\"#294069\" pauseOnHover=\"true\" direction=\"left\" className=\"slider\">\r\n      {words.map((el) => (\r\n          <div className=\"slide\" key={el}>{el}</div>\r\n        ))}\r\n    </Marquee>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","import Button from \"../Button\";\r\nimport \"../../styles/Description-img.css\"\r\n\r\nfunction DescriptionImg({title, children, imgPosition, link, imgGrande, imgPetite, bgColor, borderColor}) {\r\n    return (\r\n      <div className={`card-content ${imgPosition} ${bgColor}`}>\r\n        <div className=\"content\">\r\n            <h2>{title}</h2>\r\n            <div className=\"text\">\r\n              {children}\r\n            </div>\r\n            <Button link={link} className=\"button\" color=\"#FFFCF5\" borderColor=\"button-white\"/>\r\n        </div>\r\n        <div className=\"card-container-img\">\r\n          <img src={imgGrande} alt=\"\" className=\"img-grande\"/>\r\n          <img src={imgPetite} alt=\"\" className={`img-petite ${borderColor}`}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default DescriptionImg;\r\n  ","import \"../../styles/Bandeau-cadre.css\"\r\nimport grandeRoue from \"../../assets/grande-roue.png\"\r\nimport buissonDroit from \"../../assets/buisson-droit.png\"\r\n\r\nfunction BandeauCadre({children}) {\r\n    return (\r\n      <section className=\"bandeau-cadre fade-in-section\">\r\n        <div className=\"contour-cadre\">\r\n            {children}\r\n        </div>\r\n        <div className=\"illustrations-bas\">\r\n            <img src={grandeRoue} alt=\"\" className=\"img-bas1\"/>\r\n            <img src={buissonDroit} alt=\"\" className=\"img-bas2\" />\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n  \r\nexport default BandeauCadre;","function WaveShape({ bgColor }) {\r\n  return (\r\n    <svg\r\n      width=\"100%\"\r\n      height=\"auto\"\r\n      viewBox=\"0 0 1440 156\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M0 0H1440V102.5C1176.64 173.18 1019.16 174.484 720 102.5C436.561 30.2743 278.926 30.7743 0 102.5V0Z\"\r\n        fill={bgColor}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default WaveShape;\r\n","function FeuxRoseOrange({className}) {\r\n  return (\r\n    <svg\r\n      width=\"225\"\r\n      height=\"306\"\r\n      viewBox=\"0 0 225 306\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={className}\r\n    >\r\n      <path\r\n        d=\"M158.878 76.4945C157.194 81.1374 167.965 69.818 169.83 65.9215C174.25 56.685 176.192 46.1457 177.16 36.0027C177.954 27.6769 165.928 24.6256 163.325 32.8491C159.056 46.3316 164.237 61.7212 158.878 76.4945ZM132.103 72.6864C132.878 73.59 123.671 30.2684 123.522 25.3476C123.261 16.7402 110.21 16.6014 110.243 25.2713C110.305 41.7925 121.752 60.6204 132.103 72.6864ZM119.343 95.3295C120.518 95.8323 91.6794 62.0593 88.206 57.1118C82.1969 48.5522 68.7278 56.7851 74.2503 65.8138C82.4303 79.187 105.615 89.4545 119.343 95.3295ZM123.753 112.698C125.217 112.055 69.8469 116.083 65.0365 115.658C58.3398 115.066 57.1209 125.203 63.8411 125.88C83.7651 127.887 105.823 120.573 123.753 112.698ZM142.749 124.441C141.259 117.13 134.077 142.398 130.533 147.621C127.632 151.895 133.687 156.767 137.021 152.713C143.48 144.859 144.719 134.101 142.749 124.441ZM170.255 106.305C166.049 106.058 180.829 116.749 193.444 115.118C194.762 114.948 195.946 114.415 196.821 113.387C203.682 105.334 176.402 106.665 170.255 106.305ZM164.265 90.7095C162.092 91.7447 175.213 92.2775 180.922 88.8173C188.444 84.2585 194.113 76.4239 198.036 68.6751C199.264 66.2492 199.179 63.4083 197.432 61.2355C193.103 55.8519 175.461 85.3759 164.265 90.7095Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <ellipse\r\n        cx=\"9.27214\"\r\n        cy=\"11.5902\"\r\n        rx=\"9.27214\"\r\n        ry=\"11.5902\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 156.465 95.4376)\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <circle\r\n        cx=\"6.9541\"\r\n        cy=\"6.9541\"\r\n        r=\"6.9541\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 210.746 48.7507)\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M72.0833 187.029C71.4184 188.661 89.5599 174.459 95.0878 171.221C99.7786 168.473 96.154 161.124 91.1964 163.53C82.5691 167.718 75.578 178.455 72.0833 187.029ZM57.3807 186.599C58.0836 190.716 66.5866 181.396 60.2611 168.022C59.1737 165.723 56.464 164.606 54.1457 165.872C50.4173 167.908 56.5714 181.859 57.3807 186.599ZM54.8264 212.508C60.2961 211.46 48.9193 202.767 34.6643 210.08C25.6067 214.727 37.3037 218.91 43.201 215.846C46.9017 213.923 50.7781 213.284 54.8264 212.508ZM66.0355 220.487C66.4987 215.246 59.9278 227.93 59.2176 231.769C57.4991 241.058 57.624 251.066 59.5789 260.318C60.1363 262.956 62.5492 264.836 65.2915 264.322C68.3935 263.742 65.3894 227.797 66.0355 220.487ZM76.1963 219.42C75.2091 219.005 85.6633 234.179 86.4418 240.832C87.0892 246.364 95.3578 245.134 94.3672 239.654C92.5474 229.585 85.2579 223.232 76.1963 219.42ZM87.488 208.926C84.2127 212.532 104.063 215.376 99.612 212.376C99.5468 212.333 105.372 207.889 103.4 206.824C102 206.067 97.4868 207.447 100.935 206.529C101.034 206.503 101.337 206.452 101.235 206.464C98.1107 206.857 89.0518 207.204 87.488 208.926ZM102.964 206.626C101.213 205.98 99.2698 206.876 98.6239 208.627C97.978 210.378 98.8739 212.321 100.625 212.967C102.376 213.613 104.319 212.717 104.965 210.966C105.611 209.215 104.715 207.272 102.964 206.626ZM82.9575 190.043C82.5764 190.35 108.393 184.728 116.489 184.009C122.618 183.465 122.452 174.19 116.216 174.269C104.719 174.417 91.5107 183.148 82.9575 190.043Z\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <ellipse\r\n        cx=\"4.96666\"\r\n        cy=\"3.97333\"\r\n        rx=\"4.96666\"\r\n        ry=\"3.97333\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 106.034 155.246)\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <ellipse\r\n        cx=\"7.94666\"\r\n        cy=\"6.95333\"\r\n        rx=\"7.94666\"\r\n        ry=\"6.95333\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 78.1523 202.135)\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <circle\r\n        cx=\"5.96\"\r\n        cy=\"5.96\"\r\n        r=\"5.96\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 67.8237 270.32)\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <path\r\n        d=\"M172.351 153.094C172.509 151.334 170.239 150.497 169.217 151.937L163.52 159.96C163.236 160.36 162.796 160.621 162.308 160.677L153.109 161.743C151.7 161.906 151.075 163.601 152.04 164.64L158.344 171.424C158.678 171.784 158.844 172.268 158.8 172.757L157.923 182.557C157.765 184.316 160.035 185.153 161.057 183.713L166.754 175.69C167.038 175.29 167.478 175.03 167.966 174.973L177.165 173.907C178.574 173.744 179.199 172.049 178.234 171.011L171.93 164.226C171.596 163.867 171.43 163.382 171.474 162.894L172.351 153.094Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M142.317 184.519C142.481 182.755 140.202 181.915 139.181 183.362L136.573 187.057C136.291 187.457 135.852 187.719 135.366 187.777L130.325 188.386C128.924 188.555 128.304 190.238 129.259 191.276L132.698 195.012C133.029 195.373 133.193 195.856 133.148 196.344L132.731 200.847C132.568 202.611 134.847 203.452 135.868 202.004L138.475 198.309C138.758 197.909 139.196 197.647 139.682 197.589L144.724 196.98C146.124 196.811 146.745 195.128 145.79 194.09L142.351 190.354C142.019 189.993 141.856 189.51 141.901 189.022L142.317 184.519Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default FeuxRoseOrange;\r\n","function FeuxBleuVertBas() {\r\n  return (\r\n    <svg\r\n      width=\"268\"\r\n      height=\"306\"\r\n      viewBox=\"0 0 268 306\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"feux-bleu-vert-bas\"\r\n    >\r\n      <path\r\n        d=\"M168.186 70.1231C165.421 74.2159 168.241 58.8476 170.296 55.0478C175.166 46.0404 182.548 38.2713 190.182 31.5233C196.449 25.9842 205.99 33.9164 200.87 40.8583C192.476 52.2395 176.982 57.1004 168.186 70.1231ZM187.013 89.5387C185.826 89.4432 226.278 71.4114 230.346 68.6378C237.46 63.7862 245.248 74.2598 238.217 79.3325C224.819 88.999 202.859 90.8137 187.013 89.5387ZM176.204 113.175C175.106 112.521 219.382 115.982 225.426 115.881C235.883 115.707 237.146 131.443 226.596 132.286C210.969 133.536 189.03 120.823 176.204 113.175ZM159.563 119.824C159.223 118.262 188.529 165.412 191.702 169.053C196.119 174.121 188.638 181.068 184.138 176.031C170.796 161.098 163.739 138.956 159.563 119.824ZM138.893 111.366C145.683 108.272 129.471 128.942 127.331 134.88C125.58 139.739 118.08 137.708 119.397 132.627C121.95 122.783 129.923 115.454 138.893 111.366ZM137.385 78.454C140.058 81.7108 122.719 76.0451 116.619 64.883C115.982 63.7171 115.716 62.4455 116.033 61.1332C118.511 50.8483 133.478 73.6948 137.385 78.454ZM153.521 74.1269C153.962 76.4931 145.814 66.1944 145.255 59.5419C144.518 50.7773 147.52 41.585 151.48 33.855C152.72 31.4349 155.068 29.833 157.852 29.9682C164.753 30.3033 151.25 61.9347 153.521 74.1269Z\"\r\n        fill=\"#294069\"\r\n      />\r\n      <ellipse\r\n        cx=\"155.56\"\r\n        cy=\"98.0036\"\r\n        rx=\"9.27214\"\r\n        ry=\"11.5902\"\r\n        transform=\"rotate(33.7291 155.56 98.0036)\"\r\n        fill=\"#294069\"\r\n      />\r\n      <circle\r\n        cx=\"162.041\"\r\n        cy=\"21.5019\"\r\n        r=\"6.9541\"\r\n        transform=\"rotate(33.7291 162.041 21.5019)\"\r\n        fill=\"#294069\"\r\n      />\r\n      <path\r\n        d=\"M129.834 205.329C128.906 206.826 129.722 183.801 129.09 177.426C128.553 172.016 136.629 170.625 137.599 176.05C139.286 185.49 134.713 197.46 129.834 205.329ZM138.829 216.967C135.086 218.819 137.623 206.461 152.16 203.711C154.659 203.239 157.156 204.773 157.495 207.393C158.042 211.606 143.138 214.834 138.829 216.967ZM119.377 234.27C117.008 229.23 130.729 233.319 133.198 249.149C134.767 259.207 124.505 252.207 123.515 245.636C122.893 241.512 121.13 238.001 119.377 234.27ZM106.331 229.897C110.297 226.441 103.904 239.214 101.217 242.046C94.7146 248.9 86.5474 254.684 77.9142 258.545C75.453 259.646 72.514 258.799 71.3163 256.28C69.9616 253.429 100.799 234.719 106.331 229.897ZM101.218 221.052C102.135 221.606 83.7139 222.076 77.8757 225.358C73.0209 228.088 69.1522 220.678 74.1675 218.256C83.381 213.806 92.8064 215.965 101.218 221.052ZM103.065 205.747C102.075 210.518 88.1 196.136 93.1438 197.971C93.2178 197.998 93.386 190.674 95.4068 191.642C96.8422 192.329 98.3807 196.791 97.0953 193.463C97.0584 193.367 96.9213 193.092 96.9707 193.182C98.4909 195.939 103.538 203.47 103.065 205.747ZM95.8234 191.879C97.3756 192.915 97.7938 195.013 96.7574 196.566C95.7211 198.118 93.6227 198.536 92.0705 197.5C90.5183 196.463 90.1001 194.365 91.1364 192.813C92.1728 191.261 94.2712 190.842 95.8234 191.879ZM121.002 198.306C120.977 198.795 110.341 174.609 106.161 167.639C102.996 162.362 110.596 157.041 114.199 162.131C120.841 171.516 121.547 187.334 121.002 198.306Z\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <ellipse\r\n        cx=\"137.496\"\r\n        cy=\"165.241\"\r\n        rx=\"4.96666\"\r\n        ry=\"3.97333\"\r\n        transform=\"rotate(33.7291 137.496 165.241)\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <ellipse\r\n        cx=\"116.796\"\r\n        cy=\"219.499\"\r\n        rx=\"7.94666\"\r\n        ry=\"6.95333\"\r\n        transform=\"rotate(33.7291 116.796 219.499)\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <circle\r\n        cx=\"66.6232\"\r\n        cy=\"266.024\"\r\n        r=\"5.96\"\r\n        transform=\"rotate(33.7291 66.6232 266.024)\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <path\r\n        d=\"M98.3105 104.277C99.6406 103.115 101.652 104.458 101.089 106.132L97.951 115.457C97.7945 115.922 97.8428 116.432 98.0837 116.859L102.632 124.926C103.329 126.162 102.326 127.664 100.918 127.494L91.723 126.386C91.2359 126.327 90.7469 126.478 90.3775 126.801L82.9673 133.274C81.6372 134.436 79.6256 133.093 80.1889 131.419L83.3268 122.093C83.4833 121.628 83.435 121.119 83.1941 120.692L78.6455 112.624C77.9492 111.389 78.9523 109.887 80.3599 110.056L89.5548 111.165C90.0419 111.223 90.5309 111.073 90.9004 110.75L98.3105 104.277Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M90.5581 147.049C91.8889 145.88 93.9087 147.228 93.3388 148.906L91.8838 153.188C91.7263 153.651 91.7725 154.16 92.0109 154.587L94.484 159.023C95.1708 160.255 94.1747 161.747 92.7737 161.584L87.7289 161.001C87.2427 160.944 86.7554 161.097 86.3878 161.42L82.9906 164.405C81.6598 165.575 79.6399 164.226 80.2099 162.549L81.6649 158.267C81.8223 157.803 81.7762 157.295 81.5378 156.867L79.0647 152.432C78.3779 151.2 79.374 149.708 80.7749 149.87L85.8197 150.454C86.3059 150.51 86.7932 150.358 87.1609 150.035L90.5581 147.049Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default FeuxBleuVertBas;\r\n","import \"../../styles/Activites-accueil.css\";\r\nimport Activite1Accueil from \"../../assets/accueil/activité1-accueil.jpg\"\r\nimport Activite2Accueil from \"../../assets/accueil/activité2-accueil.jpg\"\r\nimport Activite3Accueil from \"../../assets/accueil/activité3-accueil.jpg\"\r\nimport Button from \"../Button\";\r\nimport FeuxRoseOrange from \"../../assets/svg/Feux-rose-orange\";\r\nimport FeuxBleuVertBas from \"../../assets/svg/Feux-bleu-vert-bas\";\r\n\r\nconst blue = \"#294069\";\r\n\r\nfunction ActivitesAccueil() {\r\n  return (\r\n    <section className=\"activites-accueil fade-in-section\">\r\n      <FeuxRoseOrange className=\"feux-rose-orange-accueil\"/>\r\n      <div className=\"eventail-titre\">\r\n        <div className=\"eventail-img\">\r\n          <img src={Activite3Accueil} alt=\"\" className=\"img-activite act3\"/>\r\n          <img src={Activite2Accueil} alt=\"\" className=\"img-activite act2\"/>\r\n          <img src={Activite1Accueil} alt=\"\" className=\"img-activite act1\"/>\r\n        </div>\r\n        <h2>Les activités à ne pas manquer !</h2>\r\n      </div>\r\n      <div className=\"text-button-center text-size text-center\">\r\n        <p>Voici le cœur de notre mariage où nous rêvons que chacun d'entre vous puisse passer son après-midi en s'amusant avec nous à travers toute une panoplie d'activités que vous découvrirez ici.</p>\r\n        <Button link=\"/activites\" color={blue} borderColor=\"button-blue\"/>\r\n      </div>\r\n      <FeuxBleuVertBas />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ActivitesAccueil;\r\n","function Pompon({className}) {\r\n  return (\r\n    <svg\r\n      width=\"183\"\r\n      height=\"335\"\r\n      viewBox=\"0 0 183 335\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={className}\r\n    >\r\n      <path d=\"M59 143V10\" stroke=\"#F2F2F2\" />\r\n      <path\r\n        d=\"M56.3635 115.646C57.1265 113.659 59.9371 113.659 60.7001 115.646C61.399 117.465 63.8933 117.667 64.8751 115.983C65.9469 114.144 68.7211 114.595 69.1555 116.678C69.5535 118.587 71.9832 119.186 73.2224 117.681C74.5752 116.038 77.2412 116.928 77.3358 119.054C77.4225 121.001 79.7247 121.982 81.1892 120.696C82.788 119.291 85.2767 120.598 85.0291 122.711C84.8023 124.647 86.9173 125.985 88.5692 124.95C90.3726 123.82 92.6196 125.508 92.0361 127.555C91.5016 129.43 93.3748 131.089 95.1713 130.333C97.1326 129.507 99.0796 131.534 98.1754 133.46C97.3471 135.225 98.9298 137.163 100.824 136.705C102.893 136.204 104.489 138.517 103.288 140.274C102.187 141.882 103.439 144.05 105.382 143.901C107.504 143.739 108.709 146.278 107.241 147.819C105.897 149.23 106.784 151.57 108.727 151.735C110.847 151.915 111.629 154.615 109.933 155.901C108.38 157.078 108.88 159.53 110.771 160.005C112.835 160.523 113.174 163.313 111.294 164.31C109.571 165.223 109.672 167.723 111.462 168.495C113.417 169.337 113.303 172.145 111.288 172.828C109.441 173.453 109.14 175.937 110.783 176.986C112.577 178.131 112.014 180.885 109.915 181.235C107.993 181.556 107.296 183.959 108.75 185.258C110.337 186.676 109.34 189.304 107.212 189.313C105.263 189.321 104.19 191.582 105.417 193.097C106.756 194.751 105.35 197.185 103.248 196.853C101.323 196.548 99.9014 198.607 100.869 200.3C101.925 202.147 100.148 204.324 98.1262 203.659C96.2747 203.049 94.5411 204.854 95.2247 206.68C95.971 208.673 93.8672 210.536 91.9787 209.555C90.2489 208.657 88.2483 210.16 88.6302 212.072C89.0471 214.159 86.6716 215.661 84.9649 214.389C83.4017 213.225 81.1858 214.388 81.2562 216.336C81.3329 218.463 78.7472 219.564 77.2665 218.036C75.9103 216.636 73.5366 217.428 73.2936 219.362C73.0282 221.474 70.2992 222.146 69.0829 220.4C67.9689 218.8 65.4988 219.202 64.9486 221.072C64.348 223.113 61.5464 223.34 60.6261 221.421C59.783 219.663 57.2806 219.663 56.4375 221.421C55.5172 223.34 52.7156 223.113 52.1149 221.072C51.5648 219.202 49.0947 218.8 47.9806 220.4C46.7644 222.146 44.0354 221.474 43.77 219.362C43.5269 217.428 41.1533 216.636 39.797 218.036C38.3164 219.564 35.7307 218.463 35.8074 216.336C35.8777 214.388 33.6619 213.225 32.0987 214.389C30.392 215.661 28.0165 214.159 28.4334 212.072C28.8153 210.16 26.8147 208.657 25.0849 209.555C23.1964 210.536 21.0926 208.673 21.8389 206.68C22.5224 204.854 20.7889 203.049 18.9374 203.659C16.916 204.324 15.1384 202.147 16.1947 200.3C17.1622 198.607 15.7407 196.548 13.8153 196.853C11.7133 197.185 10.308 194.751 11.647 193.097C12.8735 191.582 11.8007 189.321 9.85139 189.313C7.72331 189.304 6.72663 186.676 8.3136 185.258C9.76725 183.959 9.07102 181.556 7.14827 181.235C5.04918 180.885 4.48698 178.131 6.28084 176.986C7.92399 175.937 7.62236 173.453 5.77596 172.828C3.76023 172.145 3.64705 169.337 5.60135 168.495C7.39145 167.723 7.49222 165.223 5.77 164.31C3.88983 163.313 4.22862 160.523 6.29272 160.005C8.18342 159.53 8.68398 157.078 7.13054 155.901C5.43463 154.615 6.2166 151.915 8.33706 151.735C10.2794 151.57 11.1668 149.23 9.82234 147.819C8.35461 146.278 9.55952 143.739 11.6814 143.901C13.6251 144.05 14.8763 141.882 13.7757 140.274C12.5742 138.517 14.1708 136.204 16.2392 136.705C18.1338 137.163 19.7165 135.225 18.8882 133.46C17.984 131.534 19.931 129.507 21.8923 130.333C23.6888 131.089 25.5619 129.43 25.0275 127.555C24.444 125.508 26.691 123.82 28.4944 124.95C30.1463 125.985 32.2613 124.647 32.0345 122.711C31.7868 120.598 34.2756 119.291 35.8744 120.696C37.3389 121.982 39.6411 121.001 39.7278 119.054C39.8224 116.928 42.4884 116.038 43.8412 117.681C45.0804 119.186 47.5101 118.587 47.908 116.678C48.3425 114.595 51.1167 114.144 52.1885 115.983C53.1702 117.667 55.6646 117.465 56.3635 115.646Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M49.6664 125.106C50.0314 123.362 52.3547 122.986 53.251 124.526C54.0721 125.937 56.1609 125.77 56.7471 124.246C57.3872 122.583 59.7407 122.585 60.3784 124.249C60.9626 125.773 63.0511 125.943 63.8741 124.534C64.7727 122.995 67.0954 123.374 67.458 125.119C67.7901 126.717 69.8243 127.22 70.8628 125.96C71.9965 124.586 74.2284 125.332 74.3063 127.113C74.3778 128.743 76.3049 129.566 77.532 128.49C78.8716 127.315 80.9548 128.41 80.7462 130.179C80.5551 131.8 82.3253 132.922 83.7092 132.056C85.2199 131.111 87.1004 132.526 86.6106 134.239C86.162 135.809 87.7295 137.2 89.2342 136.567C90.877 135.877 92.5061 137.575 91.7479 139.188C91.0533 140.665 92.3774 142.289 93.9641 141.906C95.6964 141.488 97.032 143.426 96.0248 144.896C95.1023 146.243 96.1488 148.058 97.7764 147.935C99.5532 147.8 100.561 149.927 99.3308 151.216C98.2042 152.397 98.9459 154.357 100.572 154.497C102.348 154.649 103.001 156.91 101.58 157.985C100.279 158.97 100.696 161.024 102.279 161.422C104.007 161.857 104.289 164.194 102.714 165.027C101.272 165.791 101.355 167.885 102.853 168.532C104.489 169.238 104.393 171.59 102.704 172.16C101.158 172.682 100.904 174.762 102.279 175.641C103.781 176.601 103.308 178.907 101.55 179.199C99.9401 179.466 99.3557 181.478 100.572 182.567C101.9 183.755 101.064 185.955 99.2821 185.961C97.6499 185.967 96.7503 187.859 97.7764 189.129C98.8966 190.515 97.7184 192.552 95.9586 192.272C94.3465 192.016 93.155 193.74 93.9642 195.157C94.8476 196.705 93.3578 198.527 91.6656 197.969C90.1156 197.457 88.663 198.967 89.2343 200.496C89.858 202.166 88.0953 203.725 86.5146 202.902C85.0666 202.149 83.3905 203.407 83.7092 205.007C84.0571 206.755 82.0671 208.012 80.6387 206.946C79.3304 205.97 77.4743 206.943 77.5321 208.574C77.5951 210.355 75.4293 211.276 74.1904 209.995C73.0555 208.822 71.0675 209.484 70.8628 211.103C70.6394 212.871 68.3538 213.433 67.3364 211.97C66.4045 210.63 64.336 210.964 63.8742 212.53C63.37 214.239 61.024 214.427 60.2545 212.82C59.5496 211.347 57.4542 211.346 56.7472 212.817C55.9754 214.423 53.6297 214.232 53.1279 212.522C52.6683 210.956 50.6003 210.619 49.6665 211.957C48.647 213.419 46.3623 212.854 46.1413 211.086C45.9389 209.466 43.9518 208.801 42.8153 209.973C41.5746 211.252 39.4101 210.328 39.4756 208.547C39.5356 206.916 37.6809 205.941 36.3712 206.915C34.9414 207.979 32.9531 206.719 33.3034 204.972C33.6243 203.372 31.95 202.112 30.5011 202.863C28.9192 203.684 27.1586 202.122 27.7847 200.453C28.3582 198.925 26.9077 197.413 25.3569 197.922C23.6639 198.478 22.1767 196.654 23.0623 195.108C23.8734 193.691 22.6843 191.966 21.0719 192.22C19.3117 192.497 18.1363 190.458 19.2585 189.074C20.2864 187.806 19.3894 185.912 17.7572 185.904C15.9752 185.895 15.1422 183.694 16.4719 182.508C17.6898 181.421 17.1083 179.408 15.4984 179.139C13.741 178.844 13.2718 176.538 14.7746 175.58C16.1511 174.703 15.9 172.623 14.3543 172.098C12.6668 171.526 12.5737 169.174 14.2106 168.47C15.71 167.825 15.7958 165.731 14.3543 164.965C12.7805 164.13 13.0658 161.793 14.7945 161.361C16.3779 160.965 16.7985 158.912 15.4984 157.925C14.0791 156.848 14.7355 154.587 16.5111 154.438C18.1376 154.301 18.8821 152.342 17.7571 151.159C16.529 149.868 17.5395 147.743 19.3161 147.88C20.9435 148.005 21.9925 146.191 21.0719 144.844C20.0668 143.372 21.4051 141.436 23.1368 141.856C24.723 142.242 26.0493 140.619 25.3568 139.141C24.6008 137.528 26.2323 135.831 27.8741 136.524C29.378 137.159 30.9474 135.77 30.501 134.2C30.0136 132.486 31.8961 131.074 33.4055 132.021C34.7881 132.888 36.56 131.77 36.3712 130.148C36.165 128.378 38.2497 127.286 39.5877 128.463C40.8132 129.541 42.7415 128.721 42.8152 127.091C42.8957 125.31 45.1286 124.567 46.2604 125.943C47.2972 127.204 49.3321 126.704 49.6664 125.106Z\"\r\n        fill=\"#E15D85\"\r\n      />\r\n      <path\r\n        d=\"M56.3277 132.75C56.8167 131.394 58.72 131.355 59.2643 132.689C59.7629 133.912 61.4548 134.014 62.0961 132.86C62.7963 131.6 64.6812 131.866 65.0044 133.271C65.3004 134.558 66.954 134.929 67.7722 133.893C68.6654 132.762 70.4831 133.328 70.5768 134.766C70.6626 136.083 72.2352 136.716 73.209 135.824C74.2721 134.851 75.9755 135.701 75.8373 137.135C75.7106 138.45 77.1614 139.326 78.2656 138.602C79.4711 137.812 81.0162 138.924 80.6495 140.318C80.3137 141.595 81.6052 142.692 82.8112 142.155C84.1278 141.569 85.4745 142.914 84.8889 144.231C84.3526 145.438 85.4513 146.728 86.7279 146.391C88.1216 146.024 89.2349 147.568 88.4457 148.774C87.7228 149.879 88.6003 151.329 89.9144 151.201C91.349 151.062 92.2002 152.764 91.2278 153.828C90.337 154.803 90.9705 156.375 92.288 156.46C93.7264 156.552 94.2935 158.369 93.163 159.263C92.1275 160.082 92.5005 161.736 93.7874 162.031C95.1924 162.353 95.4606 164.238 94.2013 164.939C93.0478 165.581 93.1508 167.273 94.3737 167.77C95.7088 168.314 95.6713 170.217 94.3158 170.707C93.0742 171.156 92.9045 172.842 94.0317 173.53C95.2624 174.28 94.92 176.153 93.5035 176.419C92.2059 176.663 91.7679 178.3 92.7703 179.16C93.8647 180.098 93.2263 181.891 91.7854 181.927C90.4655 181.959 89.7705 183.505 90.6222 184.514C91.5519 185.616 90.6341 187.283 89.2061 187.088C87.8981 186.908 86.9641 188.322 87.6429 189.455C88.3838 190.691 87.2104 192.19 85.8324 191.768C84.5701 191.381 83.4213 192.627 83.9096 193.854C84.4427 195.193 83.044 196.484 81.7515 195.846C80.5677 195.262 79.2339 196.308 79.5191 197.597C79.8304 199.004 78.2427 200.054 77.0693 199.217C75.9945 198.45 74.5103 199.269 74.585 200.587C74.6665 202.026 72.9309 202.808 71.907 201.793C70.9691 200.864 69.3728 201.434 69.2351 202.747C69.0848 204.18 67.2462 204.674 66.3983 203.508C65.6216 202.441 63.9546 202.747 63.608 204.021C63.2297 205.412 61.3358 205.604 60.6858 204.317C60.0905 203.139 58.3959 203.174 57.8495 204.375C57.253 205.688 55.3527 205.573 54.9176 204.199C54.519 202.941 52.8408 202.703 52.1086 203.802C51.3093 205.001 49.452 204.584 49.2429 203.158C49.0514 201.851 47.433 201.348 46.5341 202.315C45.5528 203.37 43.7865 202.66 43.8089 201.219C43.8294 199.899 42.3127 199.142 41.2704 199.953C40.1324 200.837 38.5028 199.853 38.7561 198.434C38.9881 197.134 37.6125 196.144 36.4536 196.777C35.1885 197.467 33.7379 196.235 34.2156 194.875C34.6531 193.629 33.4541 192.431 32.2087 192.869C30.8492 193.348 29.6152 191.899 30.3048 190.633C30.9364 189.474 29.9451 188.099 28.6456 188.332C27.2269 188.586 26.2414 186.958 27.125 185.819C27.9345 184.776 27.1766 183.26 25.8565 183.281C24.4153 183.305 23.7038 181.539 24.7587 180.557C25.725 179.657 25.2201 178.039 23.9137 177.849C22.4874 177.641 22.0683 175.784 23.2671 174.984C24.3652 174.251 24.1264 172.573 22.8674 172.175C21.4929 171.741 21.3772 169.841 22.6889 169.243C23.8903 168.696 23.9238 167.001 22.7449 166.407C21.4578 165.758 21.6484 163.864 23.0389 163.484C24.3126 163.137 24.6175 161.47 23.5492 160.694C22.3829 159.847 22.8748 158.008 24.3082 157.856C25.6212 157.718 26.1895 156.121 25.2595 155.184C24.2442 154.161 25.0248 152.424 26.4639 152.505C27.7821 152.578 28.5993 151.093 27.8316 150.019C26.9935 148.847 28.0425 147.258 29.4501 147.568C30.7395 147.852 31.7842 146.518 31.1988 145.334C30.5597 144.042 31.8499 142.643 33.1895 143.175C34.4166 143.662 35.6619 142.512 35.2739 141.25C34.8503 139.872 36.3484 138.698 37.5853 139.438C38.7183 140.116 40.1319 139.181 39.9514 137.873C39.7543 136.445 41.4214 135.526 42.5236 136.455C43.5332 137.305 45.0785 136.609 45.1101 135.289C45.1446 133.848 46.9375 133.208 47.8764 134.302C48.7365 135.304 50.3735 134.864 50.6164 133.567C50.8816 132.15 52.7539 131.806 53.5053 133.036C54.1935 134.163 55.8798 133.992 56.3277 132.75Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M47.199 141.9C47.2052 140.737 48.6428 140.193 49.4172 141.062C50.1264 141.858 51.4412 141.478 51.6178 140.427C51.8105 139.28 53.3167 138.974 53.9416 139.956C54.5141 140.855 55.8726 140.691 56.2156 139.682C56.5899 138.58 58.1256 138.52 58.585 139.589C59.0058 140.569 60.373 140.625 60.8734 139.684C61.4196 138.657 62.9451 138.844 63.227 139.973C63.4853 141.007 64.8257 141.282 65.4705 140.433C66.1745 139.507 67.6502 139.936 67.7474 141.096C67.8365 142.158 69.1153 142.644 69.888 141.91C70.7315 141.109 72.1192 141.769 72.0292 142.929C71.9466 143.992 73.1309 144.677 74.0113 144.077C74.9725 143.421 76.2363 144.295 75.9613 145.426C75.7094 146.462 76.7683 147.328 77.7337 146.876C78.7877 146.383 79.8949 147.449 79.4421 148.521C79.0273 149.503 79.9335 150.528 80.9589 150.237C82.0783 149.919 83.0001 151.149 82.3812 152.134C81.8143 153.037 82.5443 154.194 83.6031 154.071C84.759 153.937 85.4717 155.299 84.7027 156.172C83.9984 156.972 84.5333 158.232 85.5981 158.28C86.7605 158.333 87.2455 159.792 86.3464 160.531C85.5228 161.207 85.8488 162.536 86.892 162.755C88.0309 162.994 88.2757 164.511 87.2697 165.096C86.3483 165.632 86.4568 166.996 87.4514 167.379C88.5372 167.797 88.5355 169.334 87.4487 169.75C86.4533 170.131 86.3416 171.495 87.2618 172.033C88.2665 172.62 88.0182 174.137 86.8788 174.373C85.8351 174.589 85.5061 175.918 86.3282 176.596C87.2256 177.337 86.7373 178.794 85.5747 178.845C84.5098 178.891 83.972 180.149 84.6746 180.951C85.4416 181.826 84.7258 183.186 83.5702 183.049C82.5117 182.924 81.7791 184.079 82.3439 184.983C82.9606 185.97 82.036 187.198 80.9173 186.877C79.8925 186.584 78.984 187.607 79.3966 188.59C79.847 189.663 78.7373 190.726 77.6845 190.231C76.7202 189.777 75.6592 190.641 75.9088 191.677C76.1813 192.809 74.9154 193.68 73.9558 193.022C73.0767 192.419 71.8909 193.102 71.971 194.165C72.0584 195.325 70.6692 195.983 69.8275 195.179C69.0565 194.443 67.7765 194.927 67.6851 195.989C67.5853 197.148 66.1086 197.574 65.4067 196.646C64.7638 195.796 63.4228 196.068 63.1622 197.101C62.8777 198.23 61.3518 198.413 60.8079 197.385C60.3096 196.442 58.9423 196.496 58.5193 197.474C58.0575 198.542 56.5219 198.479 56.1501 197.376C55.8094 196.366 54.4512 196.2 53.8768 197.097C53.2496 198.078 51.7441 197.768 51.554 196.62C51.3797 195.569 50.0659 195.187 49.3548 195.981C48.5785 196.848 47.1421 196.301 47.1386 195.137C47.1353 194.072 45.8997 193.484 45.0705 194.153C44.1652 194.884 42.8351 194.114 43.0183 192.965C43.186 191.913 42.0608 191.134 41.1349 191.662C40.124 192.238 38.9347 191.265 39.2998 190.16C39.6342 189.148 38.6484 188.199 37.6498 188.572C36.5596 188.979 35.5417 187.827 36.0794 186.795C36.5718 185.85 35.751 184.755 34.7056 184.963C33.5642 185.189 32.7443 183.889 33.4405 182.957C34.0782 182.103 33.4437 180.891 32.3784 180.928C31.2155 180.968 30.6147 179.554 31.4514 178.745C32.2179 178.005 31.786 176.706 30.7286 176.572C29.5742 176.426 29.2081 174.933 30.1638 174.269C31.0391 173.661 30.8211 172.31 29.7989 172.008C28.683 171.678 28.561 170.146 29.6108 169.644C30.5724 169.184 30.5739 167.816 29.6134 167.354C28.5648 166.849 28.6902 165.318 29.8069 164.99C30.8298 164.691 31.0508 163.34 30.1769 162.73C29.2227 162.064 29.5922 160.572 30.747 160.428C31.8047 160.297 32.2395 158.999 31.4747 158.257C30.6398 157.446 31.2438 156.033 32.4066 156.076C33.4718 156.116 34.1091 154.905 33.4733 154.05C32.7792 153.116 33.6021 151.818 34.7429 152.047C35.7879 152.257 36.6112 151.164 36.1209 150.217C35.5856 149.184 36.6061 148.035 37.6954 148.444C38.6931 148.819 39.6811 147.872 39.3489 146.86C38.9863 145.754 40.1779 144.783 41.1874 145.362C42.1122 145.892 43.2392 145.116 43.0738 144.063C42.8933 142.914 44.2251 142.147 45.1287 142.88C45.9564 143.551 47.1933 142.966 47.199 141.9Z\"\r\n        fill=\"#E15D85\"\r\n      />\r\n      <path\r\n        d=\"M47.5609 151.277C47.431 150.465 48.3704 149.92 49.0102 150.437C49.5963 150.909 50.4689 150.494 50.4708 149.74C50.4729 148.918 51.4874 148.532 52.0362 149.144C52.5388 149.704 53.4669 149.434 53.5895 148.691C53.7234 147.88 54.7868 147.661 55.2303 148.353C55.6365 148.987 56.596 148.869 56.8362 148.155C57.0985 147.376 58.1832 147.331 58.5099 148.085C58.8092 148.776 59.7752 148.813 60.1267 148.147C60.5106 147.42 61.5887 147.549 61.7901 148.346C61.9746 149.076 62.9221 149.268 63.376 148.667C63.8715 148.011 64.9149 148.312 64.9858 149.131C65.0509 149.881 65.9553 150.222 66.4997 149.702C67.094 149.134 68.0757 149.598 68.0144 150.417C67.9582 151.168 68.7963 151.65 69.417 151.224C70.0947 150.759 70.9894 151.374 70.7973 152.173C70.6215 152.905 71.3713 153.516 72.0524 153.194C72.796 152.844 73.5803 153.595 73.2626 154.353C72.9715 155.047 73.6138 155.77 74.3376 155.562C75.1278 155.335 75.7815 156.202 75.3463 156.9C74.9476 157.538 75.4656 158.355 76.2134 158.266C77.0297 158.169 77.5359 159.129 76.9944 159.748C76.4984 160.314 76.8789 161.203 77.6312 161.235C78.4525 161.27 78.7981 162.3 78.1644 162.823C77.5839 163.303 77.8169 164.241 78.5543 164.394C79.3593 164.56 79.5353 165.631 78.8258 166.047C78.176 166.427 78.2554 167.39 78.9588 167.659C79.7267 167.953 79.7286 169.038 78.9617 169.334C78.2592 169.606 78.183 170.569 78.8342 170.947C79.5452 171.36 79.3728 172.432 78.5683 172.601C77.8315 172.756 77.6017 173.695 78.1838 174.173C78.8193 174.695 78.4773 175.725 77.656 175.763C76.9038 175.798 76.5265 176.688 77.0244 177.253C77.568 177.869 77.0651 178.831 76.2484 178.737C75.5004 178.651 74.9851 179.469 75.386 180.106C75.8236 180.802 75.1729 181.671 74.3819 181.447C73.6574 181.242 73.0176 181.967 73.311 182.66C73.6314 183.417 72.8496 184.171 72.1049 183.823C71.4226 183.504 70.6749 184.117 70.8533 184.848C71.048 185.647 70.1555 186.265 69.4762 185.802C68.854 185.378 68.0176 185.863 68.0764 186.614C68.1405 187.433 67.1604 187.9 66.5641 187.334C66.018 186.816 65.1147 187.16 65.0522 187.911C64.9841 188.73 63.9417 189.034 63.444 188.379C62.988 187.78 62.0412 187.975 61.8592 188.706C61.6605 189.503 60.5829 189.636 60.1965 188.911C59.8427 188.246 58.8768 188.286 58.5799 188.978C58.2558 189.734 57.1709 189.692 56.906 188.914C56.6633 188.201 55.7035 188.086 55.2994 188.722C54.8583 189.415 53.7941 189.2 53.6575 188.389C53.5323 187.647 52.6033 187.379 52.1026 187.942C51.5559 188.556 50.5401 188.173 50.5352 187.35C50.5308 186.597 49.6567 186.185 49.0722 186.659C48.4341 187.178 47.4929 186.636 47.62 185.824C47.7364 185.08 46.9399 184.532 46.2868 184.907C45.5739 185.317 44.7317 184.631 44.9874 183.85C45.2216 183.134 44.5233 182.466 43.8185 182.731C43.0492 183.021 42.3278 182.209 42.7055 181.479C43.0515 180.81 42.4695 180.039 41.7313 180.187C40.9254 180.35 40.3436 179.433 40.8335 178.773C41.2823 178.168 40.8316 177.313 40.0791 177.342C39.2577 177.373 38.8304 176.375 39.4199 175.802C39.9599 175.277 39.6522 174.36 38.9049 174.268C38.089 174.167 37.8274 173.113 38.5012 172.642C39.1184 172.21 38.9617 171.257 38.2389 171.045C37.4499 170.815 37.3606 169.733 38.1012 169.376C38.7796 169.049 38.778 168.082 38.0985 167.758C37.3567 167.403 37.4422 166.321 38.2304 166.088C38.9524 165.874 39.1059 164.919 38.4872 164.49C37.8118 164.022 38.0699 162.967 38.8854 162.863C39.6323 162.768 39.9369 161.85 39.3951 161.327C38.8036 160.756 39.2275 159.757 40.0491 159.785C40.8017 159.811 41.2494 158.954 40.7986 158.351C40.3063 157.693 40.8851 156.774 41.6915 156.934C42.4302 157.08 43.0096 156.306 42.6613 155.638C42.2811 154.91 42.9996 154.096 43.77 154.383C44.4757 154.646 45.1717 153.975 44.935 153.26C44.6766 152.479 45.5165 151.791 46.2308 152.198C46.8852 152.571 47.6798 152.02 47.5609 151.277Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M55.9658 154.582C56.0934 154.027 56.8391 153.921 57.1163 154.419C57.3702 154.876 58.0396 154.835 58.2366 154.351C58.4518 153.823 59.2048 153.838 59.3985 154.375C59.5759 154.866 60.243 154.934 60.5151 154.488C60.8122 154.001 61.553 154.137 61.6582 154.697C61.7545 155.211 62.4022 155.384 62.7423 154.988C63.1136 154.555 63.823 154.808 63.8369 155.378C63.8496 155.9 64.4611 156.175 64.8604 155.838C65.2963 155.471 65.956 155.834 65.8782 156.399C65.807 156.917 66.3664 157.286 66.8145 157.018C67.3038 156.725 67.8966 157.19 67.7293 157.735C67.5759 158.234 68.0688 158.689 68.5542 158.496C69.0841 158.285 69.5948 158.839 69.3421 159.35C69.1107 159.818 69.5242 160.346 70.0343 160.233C70.5911 160.11 71.0064 160.739 70.675 161.203C70.3714 161.628 70.6949 162.215 71.2164 162.186C71.7858 162.154 72.0949 162.841 71.6933 163.246C71.3255 163.617 71.5506 164.248 72.0701 164.303C72.6372 164.363 72.8321 165.09 72.3708 165.425C71.9483 165.732 72.0692 166.392 72.5731 166.529C73.1233 166.679 73.199 167.429 72.6899 167.685C72.2236 167.921 72.2371 168.591 72.7125 168.808C73.2315 169.044 73.186 169.796 72.6423 169.968C72.1443 170.125 72.05 170.789 72.4846 171.079C72.959 171.395 72.7935 172.13 72.2292 172.212C71.7124 172.288 71.5129 172.928 71.8953 173.284C72.3128 173.672 72.0316 174.371 71.4614 174.362C70.9391 174.354 70.6395 174.954 70.9599 175.366C71.3097 175.816 70.92 176.461 70.3587 176.361C69.8445 176.269 69.4526 176.813 69.7026 177.271C69.9756 177.772 69.4876 178.346 68.9497 178.156C68.4569 177.983 67.9828 178.457 68.156 178.95C68.3452 179.488 67.7715 179.976 67.2709 179.703C66.8123 179.453 66.2682 179.845 66.3602 180.359C66.4606 180.92 65.8161 181.31 65.3657 180.96C64.9532 180.64 64.3533 180.939 64.3616 181.461C64.3707 182.032 63.672 182.313 63.2836 181.895C62.9278 181.513 62.2876 181.712 62.212 182.229C62.1295 182.793 61.3948 182.959 61.0784 182.484C60.7885 182.05 60.1246 182.144 59.9671 182.642C59.7952 183.186 59.0434 183.231 58.8072 182.712C58.5908 182.237 57.9204 182.223 57.685 182.69C57.4281 183.199 56.6788 183.123 56.5289 182.573C56.3916 182.069 55.732 181.948 55.4249 182.37C55.0896 182.832 54.3621 182.637 54.3025 182.07C54.2478 181.55 53.6161 181.325 53.2452 181.693C52.8403 182.094 52.1535 181.785 52.1856 181.216C52.2149 180.694 51.6276 180.371 51.2025 180.674C50.7384 181.006 50.1101 180.59 50.233 180.034C50.3457 179.524 49.8178 179.11 49.3496 179.341C48.8383 179.594 48.2848 179.083 48.4955 178.553C48.6885 178.068 48.2338 177.575 47.7344 177.729C47.1893 177.896 46.7248 177.303 47.0178 176.814C47.2862 176.366 46.9164 175.806 46.399 175.877C45.8341 175.955 45.4707 175.295 45.8384 174.86C46.1751 174.46 45.8999 173.849 45.3778 173.836C44.8077 173.822 44.5549 173.113 44.9877 172.741C45.3841 172.401 45.2106 171.754 44.6972 171.657C44.1367 171.552 44.001 170.811 44.4878 170.514C44.9337 170.242 44.8663 169.575 44.375 169.398C43.8386 169.204 43.8235 168.451 44.3516 168.236C44.8354 168.039 44.8759 167.369 44.4194 167.115C43.9211 166.838 44.0269 166.093 44.5827 165.965C45.0918 165.848 45.2391 165.194 44.8293 164.87C44.3819 164.516 44.606 163.797 45.1751 163.761C45.6963 163.727 45.9467 163.105 45.5941 162.719C45.2093 162.299 45.5458 161.625 46.1134 161.68C46.6333 161.73 46.9802 161.156 46.694 160.719C46.3816 160.242 46.8219 159.631 47.3733 159.776C47.8784 159.909 48.3129 159.399 48.1005 158.921C47.8687 158.401 48.4013 157.868 48.9222 158.1C49.3994 158.312 49.9102 157.878 49.7772 157.373C49.6319 156.821 50.243 156.381 50.7201 156.693C51.157 156.98 51.7309 156.633 51.6806 156.113C51.6256 155.545 52.2994 155.209 52.7202 155.594C53.1056 155.946 53.7277 155.696 53.7614 155.175C53.7982 154.606 54.5173 154.381 54.8708 154.829C55.1947 155.239 55.8489 155.091 55.9658 154.582Z\"\r\n        fill=\"#E15D85\"\r\n      />\r\n      <path d=\"M136 133V0\" stroke=\"#F2F2F2\" />\r\n      <path\r\n        d=\"M126.584 87.3393C132.12 83.0243 139.88 83.0243 145.416 87.3393C147.958 89.3203 151.06 90.4493 154.28 90.5655C161.295 90.8185 167.239 95.8069 168.707 102.671C169.38 105.822 171.031 108.681 173.423 110.84C178.634 115.542 179.981 123.185 176.693 129.386C175.184 132.233 174.611 135.484 175.055 138.676C176.024 145.627 172.144 152.348 165.639 154.985C162.653 156.196 160.124 158.317 158.413 161.048C154.687 166.996 147.394 169.651 140.716 167.489C137.65 166.497 134.35 166.497 131.284 167.489C124.606 169.651 117.313 166.996 113.587 161.048C111.876 158.317 109.347 156.196 106.361 154.985C99.8561 152.348 95.9759 145.627 96.9447 138.676C97.3895 135.484 96.8163 132.233 95.3067 129.386C92.0186 123.185 93.3662 115.542 98.5769 110.84C100.969 108.681 102.62 105.822 103.293 102.671C104.761 95.8069 110.705 90.8185 117.72 90.5655C120.94 90.4493 124.042 89.3203 126.584 87.3393Z\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <path\r\n        d=\"M122.913 95.4758C126.912 91.1687 133.326 90.1308 138.479 92.9571C140.845 94.2547 143.56 94.773 146.238 94.4384C152.07 93.7094 157.651 97.0377 159.782 102.515C160.76 105.03 162.507 107.172 164.773 108.637C169.709 111.827 171.845 117.964 169.957 123.53C169.089 126.085 169.05 128.849 169.845 131.428C171.576 137.044 169.267 143.119 164.243 146.168C161.936 147.569 160.13 149.661 159.081 152.147C156.796 157.562 151.123 160.731 145.314 159.838C142.647 159.428 139.919 159.869 137.517 161.099C132.286 163.779 125.903 162.56 122.027 158.142C120.248 156.113 117.874 154.698 115.243 154.096C109.514 152.787 105.408 147.75 105.279 141.874C105.22 139.177 104.311 136.566 102.682 134.415C99.1351 129.729 99.2269 123.231 102.905 118.647C104.594 116.542 105.576 113.959 105.711 111.264C106.006 105.394 110.253 100.475 116.017 99.328C118.664 98.8013 121.077 97.4532 122.913 95.4758Z\"\r\n        fill=\"#F29C16\"\r\n      />\r\n      <path\r\n        d=\"M129.072 100.274C132.761 97.2754 138.016 97.1675 141.824 100.012C143.573 101.318 145.689 102.04 147.872 102.074C152.625 102.147 156.72 105.443 157.809 110.07C158.309 112.195 159.467 114.108 161.117 115.536C164.711 118.648 165.729 123.805 163.589 128.05C162.606 129.999 162.264 132.208 162.609 134.363C163.362 139.057 160.828 143.662 156.46 145.538C154.454 146.399 152.772 147.871 151.651 149.744C149.21 153.824 144.309 155.723 139.757 154.352C137.667 153.723 135.432 153.769 133.37 154.484C128.878 156.04 123.903 154.344 121.296 150.368C120.1 148.543 118.358 147.141 116.319 146.363C111.877 144.668 109.156 140.171 109.716 135.45C109.973 133.282 109.539 131.089 108.477 129.182C106.164 125.029 106.971 119.835 110.434 116.578C112.024 115.082 113.102 113.124 113.514 110.98C114.412 106.312 118.368 102.851 123.114 102.582C125.294 102.459 127.378 101.651 129.072 100.274Z\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <path\r\n        d=\"M123.517 108.534C125.514 105.257 129.483 103.757 133.149 104.894C134.832 105.416 136.637 105.393 138.307 104.83C141.943 103.604 145.948 105.006 148.026 108.233C148.98 109.715 150.376 110.858 152.017 111.5C155.592 112.898 157.758 116.546 157.275 120.354C157.054 122.102 157.389 123.875 158.233 125.422C160.073 128.79 159.387 132.978 156.57 135.584C155.276 136.781 154.393 138.355 154.046 140.082C153.29 143.845 150.073 146.613 146.24 146.798C144.48 146.883 142.791 147.521 141.415 148.622C138.417 151.018 134.174 151.07 131.118 148.748C129.715 147.682 128.011 147.086 126.25 147.044C122.413 146.953 119.129 144.265 118.281 140.522C117.891 138.804 116.97 137.252 115.647 136.087C112.766 133.551 111.978 129.381 113.734 125.969C114.541 124.402 114.832 122.621 114.568 120.879C113.991 117.084 116.068 113.383 119.606 111.898C121.231 111.216 122.599 110.039 123.517 108.534Z\"\r\n        fill=\"#F29C16\"\r\n      />\r\n      <path\r\n        d=\"M125.17 115.569C126.184 113.055 128.778 111.551 131.464 111.921C132.697 112.091 133.953 111.867 135.052 111.282C137.445 110.008 140.398 110.523 142.218 112.533C143.054 113.456 144.159 114.091 145.377 114.35C148.029 114.912 149.96 117.205 150.063 119.914C150.11 121.158 150.548 122.356 151.315 123.336C152.985 125.472 152.99 128.47 151.327 130.611C150.564 131.594 150.13 132.793 150.087 134.037C149.994 136.747 148.071 139.047 145.42 139.618C144.203 139.881 143.1 140.52 142.268 141.446C140.454 143.462 137.503 143.987 135.105 142.721C134.005 142.14 132.748 141.921 131.516 142.095C128.831 142.473 126.232 140.979 125.209 138.468C124.74 137.315 123.918 136.34 122.862 135.681C120.562 134.245 119.532 131.43 120.363 128.849C120.744 127.664 120.742 126.389 120.356 125.205C119.517 122.627 120.537 119.808 122.833 118.364C123.887 117.702 124.704 116.724 125.17 115.569Z\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <path\r\n        d=\"M132.008 116.832C133.314 115.479 135.373 115.187 137.004 116.123C137.753 116.553 138.619 116.736 139.478 116.646C141.348 116.449 143.113 117.548 143.761 119.314C144.058 120.125 144.603 120.821 145.319 121.304C146.879 122.355 147.524 124.332 146.885 126.101C146.592 126.913 146.562 127.797 146.8 128.627C147.319 130.435 146.543 132.364 144.916 133.309C144.169 133.742 143.578 134.4 143.227 135.189C142.463 136.908 140.628 137.886 138.775 137.564C137.924 137.417 137.048 137.541 136.272 137.919C134.582 138.744 132.547 138.315 131.335 136.877C130.778 136.217 130.027 135.749 129.189 135.54C127.364 135.085 126.082 133.448 126.077 131.568C126.075 130.704 125.801 129.863 125.293 129.165C124.187 127.643 124.257 125.565 125.462 124.121C126.016 123.458 126.346 122.638 126.406 121.776C126.537 119.9 127.927 118.353 129.778 118.022C130.628 117.87 131.408 117.453 132.008 116.832Z\"\r\n        fill=\"#F29C16\"\r\n      />\r\n      <path d=\"M102 198L102 4\" stroke=\"#F2F2F2\" />\r\n      <path\r\n        d=\"M90.3197 194.104C97.1868 188.752 106.813 188.752 113.68 194.104L118.415 197.794C121.568 200.252 125.416 201.652 129.41 201.796L135.41 202.013C144.111 202.327 151.485 208.514 153.305 217.029L154.56 222.899C155.395 226.808 157.443 230.354 160.41 233.032L164.867 237.054C171.33 242.888 173.002 252.368 168.923 260.06L166.111 265.364C164.238 268.895 163.527 272.928 164.079 276.887L164.908 282.833C166.11 291.456 161.296 299.793 153.228 303.063L147.664 305.319C143.96 306.82 140.823 309.452 138.701 312.84L135.514 317.927C130.891 325.305 121.845 328.598 113.562 325.917L107.85 324.068C104.047 322.838 99.9527 322.838 96.1496 324.068L90.4381 325.917C82.1545 328.598 73.1087 325.305 68.4864 317.927L65.2993 312.84C63.1771 309.452 60.0405 306.82 56.3359 305.319L50.7725 303.063C42.7036 299.793 37.8904 291.456 39.0922 282.833L39.9208 276.887C40.4726 272.928 39.7616 268.895 37.889 265.364L35.0768 260.06C30.9982 252.368 32.6698 242.888 39.1333 237.054L43.5899 233.032C46.5574 230.354 48.6047 226.808 49.4403 222.899L50.6952 217.029C52.5152 208.514 59.8895 202.327 68.5904 202.013L74.5897 201.796C78.5845 201.652 82.4321 200.252 85.5849 197.794L90.3197 194.104Z\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <path\r\n        d=\"M81.8933 208.857C87.8174 202.477 97.3202 200.939 104.954 205.126L106.372 205.904C109.877 207.827 113.899 208.594 117.866 208.099L119.471 207.898C128.111 206.818 136.378 211.749 139.535 219.863L140.122 221.371C141.571 225.096 144.158 228.27 147.515 230.439L148.874 231.318C156.186 236.044 159.351 245.135 156.553 253.38L156.033 254.912C154.749 258.697 154.691 262.792 155.868 266.612L156.344 268.158C158.908 276.479 155.488 285.477 148.045 289.995L146.662 290.834C143.245 292.908 140.569 296.007 139.015 299.69L138.386 301.181C135.002 309.203 126.598 313.898 117.992 312.574L116.393 312.328C112.442 311.721 108.401 312.375 104.843 314.197L103.403 314.935C95.6538 318.904 86.1983 317.099 80.4568 310.554L79.3899 309.338C76.7539 306.332 73.2372 304.235 69.3403 303.345L67.7631 302.984C59.2755 301.044 53.1925 293.583 53.0015 284.879L52.966 283.261C52.8784 279.265 51.5324 275.398 49.1198 272.21L48.1434 270.92C42.8885 263.978 43.0245 254.353 48.4733 247.562L49.4858 246.3C51.9875 243.183 53.4421 239.355 53.6427 235.363L53.7238 233.747C54.1606 225.051 60.4518 217.765 68.9909 216.066L70.5776 215.75C74.4982 214.97 78.0727 212.973 80.7926 210.043L81.8933 208.857Z\"\r\n        fill=\"#849970\"\r\n      />\r\n      <path\r\n        d=\"M90.944 217.353C96.8303 212.567 105.216 212.395 111.294 216.935C114.084 219.019 117.461 220.17 120.944 220.224C128.529 220.342 135.064 225.6 136.801 232.984C137.599 236.375 139.446 239.427 142.079 241.707C147.814 246.673 149.44 254.901 146.025 261.675C144.457 264.785 143.909 268.31 144.461 271.749C145.662 279.24 141.619 286.588 134.648 289.582C131.448 290.957 128.763 293.305 126.974 296.294C123.08 302.804 115.259 305.834 107.995 303.647C104.66 302.643 101.093 302.716 97.802 303.857C90.6339 306.34 82.695 303.634 78.5363 297.29C76.627 294.377 73.8475 292.14 70.5935 290.898C63.506 288.193 59.1639 281.017 60.0565 273.484C60.4663 270.025 59.7747 266.525 58.0803 263.482C54.3896 256.854 55.6761 248.566 61.2022 243.369C63.7394 240.983 65.4593 237.857 66.1173 234.437C67.5504 226.987 73.8635 221.465 81.4374 221.036C84.9148 220.839 88.2415 219.55 90.944 217.353Z\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <path\r\n        d=\"M82.0788 230.534C85.2662 225.304 91.6003 222.91 97.4499 224.724C100.136 225.557 103.016 225.521 105.68 224.623C111.483 222.666 117.874 224.903 121.189 230.053C122.711 232.417 124.94 234.241 127.559 235.266C133.263 237.496 136.72 243.319 135.949 249.394C135.595 252.184 136.13 255.014 137.478 257.482C140.413 262.857 139.32 269.539 134.824 273.698C132.76 275.608 131.35 278.12 130.796 280.876C129.59 286.881 124.456 291.297 118.339 291.593C115.531 291.729 112.836 292.747 110.64 294.503C105.856 298.327 99.0853 298.41 94.2089 294.705C91.9701 293.003 89.2517 292.052 86.4406 291.985C80.3179 291.839 75.0776 287.551 73.7238 281.578C73.1023 278.836 71.6316 276.359 69.5212 274.501C64.9245 270.454 63.6668 263.8 66.469 258.355C67.7556 255.854 68.2209 253.012 67.7986 250.232C66.8787 244.177 70.1921 238.272 75.8392 235.901C78.432 234.813 80.6154 232.935 82.0788 230.534Z\"\r\n        fill=\"#849970\"\r\n      />\r\n      <path\r\n        d=\"M84.7171 241.759C86.3356 237.747 90.4744 235.348 94.7607 235.938C96.7286 236.208 98.7318 235.852 100.485 234.918C104.304 232.885 109.017 233.707 111.921 236.914C113.255 238.387 115.019 239.401 116.962 239.813C121.194 240.71 124.276 244.37 124.439 248.693C124.514 250.678 125.213 252.589 126.437 254.154C129.103 257.562 129.111 262.346 126.457 265.763C125.239 267.331 124.546 269.245 124.478 271.23C124.329 275.554 121.26 279.224 117.031 280.136C115.089 280.554 113.329 281.575 112 283.052C109.107 286.269 104.397 287.107 100.571 285.087C98.8145 284.16 96.8101 283.81 94.8431 284.087C90.5589 284.692 86.4119 282.307 84.7796 278.3C84.0302 276.46 82.7196 274.904 81.0344 273.852C77.3639 271.561 75.72 267.069 77.0453 262.95C77.6537 261.059 77.6502 259.024 77.0353 257.135C75.696 253.021 77.3244 248.523 80.9871 246.22C82.6687 245.162 83.9739 243.601 84.7171 241.759Z\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <path\r\n        d=\"M95.6306 243.775C97.7151 241.616 101.001 241.149 103.603 242.644C104.798 243.33 106.179 243.621 107.55 243.477C110.535 243.163 113.351 244.918 114.385 247.735C114.859 249.029 115.729 250.14 116.872 250.91C119.36 252.588 120.39 255.743 119.371 258.566C118.902 259.862 118.855 261.272 119.235 262.597C120.063 265.482 118.824 268.56 116.228 270.067C115.037 270.759 114.094 271.809 113.533 273.068C112.313 275.81 109.385 277.372 106.428 276.858C105.071 276.622 103.673 276.82 102.435 277.425C99.7374 278.741 96.4907 278.055 94.5558 275.761C93.6675 274.707 92.4695 273.961 91.1324 273.628C88.2202 272.902 86.1737 270.29 86.1663 267.289C86.1629 265.911 85.725 264.569 84.9148 263.454C83.1503 261.027 83.2618 257.71 85.1853 255.406C86.0684 254.349 86.5954 253.039 86.6913 251.665C86.9002 248.671 89.1173 246.202 92.0717 245.673C93.4282 245.43 94.6735 244.766 95.6306 243.775Z\"\r\n        fill=\"#849970\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Pompon;\r\n","function Rubans() {\r\n  return (\r\n    <svg\r\n      width=\"412\"\r\n      height=\"291\"\r\n      viewBox=\"0 0 412 291\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"rubans-accueil\"\r\n    >\r\n      <mask\r\n        id=\"mask0_608_129\"\r\n        // style=\"mask-type:alpha\"\r\n        maskUnits=\"userSpaceOnUse\"\r\n        x=\"-1\"\r\n        y=\"0\"\r\n        width=\"413\"\r\n        height=\"291\"\r\n      >\r\n        <rect x=\"-1\" width=\"413\" height=\"291\" fill=\"#D9D9D9\" />\r\n      </mask>\r\n      <g mask=\"url(#mask0_608_129)\">\r\n        <path\r\n          d=\"M28.7682 -9.74058L25.016 -3.64387C26.7947 3.52447 27.8261 9.90507 28.194 16.8771C24.4157 35.9458 20.3348 46.2813 11.1204 60.4882C9.2409 63.386 7.51322 66.7991 6.29044 71.1672C3.8483 79.891 2.92537 87.3632 2.32144 99.9509C2.58878 108.102 2.79107 113.268 4.24755 121.751C4.81871 125.077 5.92757 127.943 7.34247 129.549C16.0632 139.452 27.0566 140.905 29.8938 165.169C26.8495 188.613 17.5529 210.698 11.1206 211.248L7.57877 229.456C25.8861 227.89 39.233 173.034 30.0587 142.052C26.0262 132 9.91653 123.56 8.96404 111.512C7.72162 98.6044 8.07248 92.8114 9.77939 84.0204C16.9478 72.1547 24.7308 64.9975 26.1994 52.2799C33.2023 28.2893 33.4227 14.6884 28.7682 -9.74058Z\"\r\n          fill=\"#97AC83\"\r\n        />\r\n        <path\r\n          d=\"M26.1994 52.2799C27.9605 37.0307 28.6965 26.402 28.194 16.8771C24.4157 35.9458 20.3348 46.2813 11.1204 60.4882C9.2409 63.386 7.51322 66.7991 6.29044 71.1672C3.8483 79.891 2.92537 87.3632 2.32144 99.9509C4.47482 93.6107 7.08364 88.4826 9.77939 84.0204C16.9478 72.1547 24.735 64.9608 26.1994 52.2799Z\"\r\n          fill=\"#7A8C69\"\r\n        />\r\n        <path\r\n          d=\"M30.0587 142.052L29.8938 165.169C26.8495 188.613 17.5529 210.698 11.1206 211.248L7.57877 229.456C25.8861 227.89 39.233 173.034 30.0587 142.052Z\"\r\n          fill=\"#7A8C69\"\r\n        />\r\n        <path\r\n          d=\"M224.44 -20.6322L220.632 -15.2406C222.34 -8.96604 223.309 -3.37522 223.61 2.74175C219.65 19.5218 215.473 28.638 206.129 41.2067C204.223 43.7703 202.464 46.7848 201.2 50.6323C198.676 58.3166 197.681 64.8861 196.957 75.9433C197.145 83.0964 197.297 87.6295 198.671 95.0615C199.209 97.976 200.29 100.48 201.688 101.876C210.306 110.478 221.276 111.639 223.877 132.911C220.609 153.525 211.107 173.01 204.674 173.561L200.96 189.582C219.267 188.017 233.132 139.718 224.265 112.615C220.332 103.832 204.318 96.5902 203.482 86.0234C202.365 74.7048 202.772 69.6154 204.562 61.8798C211.839 51.388 219.685 45.0233 221.275 33.8431C228.504 12.7084 228.855 0.765703 224.44 -20.6322Z\"\r\n          fill=\"#97AC83\"\r\n        />\r\n        <path\r\n          d=\"M221.275 33.8431C223.182 20.4373 224.02 11.0985 223.61 2.74175C219.65 19.5218 215.473 28.638 206.129 41.2067C204.223 43.7703 202.464 46.7848 201.2 50.6323C198.676 58.3166 197.681 64.8861 196.957 75.9433C199.169 70.3547 201.826 65.8254 204.562 61.8798C211.839 51.388 219.689 44.991 221.275 33.8431Z\"\r\n          fill=\"#7A8C69\"\r\n        />\r\n        <path\r\n          d=\"M224.265 112.615L223.877 132.911C220.609 153.525 211.107 173.01 204.674 173.561L200.96 189.582C219.267 188.017 233.132 139.718 224.265 112.615Z\"\r\n          fill=\"#7A8C69\"\r\n        />\r\n        <path\r\n          d=\"M388.94 -55.4285H380.332C379.959 -55.4285 379.718 -54.7255 379.886 -54.1343C388.675 -23.2337 394.043 5.47109 390.367 23.9663C384.915 20.5893 381.757 19.4768 376.022 18.6437C371.944 18.6017 369.693 19.7647 365.986 23.7495C365.86 23.8855 365.773 24.1161 365.752 24.376C363.414 53.997 376.952 87.8695 362.04 94.9336C367.201 101.099 370.292 100.428 376.022 94.9336C382.875 84.4982 377.904 54.9671 376.284 33.7243C379.758 34.5042 381.617 35.2481 384.76 37.2727H395.23C395.396 37.2727 395.554 37.1203 395.646 36.8733C404.669 12.5969 401.733 -9.23487 389.392 -54.9176C389.309 -55.2251 389.132 -55.4285 388.94 -55.4285Z\"\r\n          fill=\"#F9A626\"\r\n        />\r\n        <path\r\n          d=\"M368.781 91.3853C366.105 94.0598 364.64 94.5606 362.04 94.9336C367.201 101.099 370.292 100.428 376.022 94.9336C372.373 97.1879 371.049 95.252 368.781 91.3853Z\"\r\n          fill=\"#C78E35\"\r\n        />\r\n        <path\r\n          d=\"M384.972 36.9985C387.434 33.77 389.138 29.6537 390.193 24.8018C390.292 24.3435 390.154 23.8343 389.892 23.6748C384.87 20.6118 381.765 19.5135 376.481 18.7118C376.222 18.6725 375.988 18.9932 375.955 19.4506C375.683 23.1891 375.851 27.8582 376.233 33.0482C376.262 33.4468 376.44 33.7592 376.665 33.8113C379.809 34.5406 381.631 35.2815 384.512 37.1142C384.667 37.2127 384.84 37.1719 384.972 36.9985Z\"\r\n          fill=\"#C78E35\"\r\n        />\r\n        <path\r\n          d=\"M156.905 -10.3928H148.297C147.924 -10.3928 147.683 -9.30693 147.852 -8.39357C156.64 39.3408 162.008 83.6833 158.332 112.254C152.88 107.038 149.722 105.319 143.987 104.032C139.909 103.967 137.658 105.764 133.951 111.919C133.825 112.129 133.738 112.486 133.717 112.887C131.379 158.645 144.917 210.97 130.005 221.883C135.166 231.408 138.257 230.37 143.987 221.883C150.84 205.763 145.87 160.144 144.249 127.328C147.723 128.533 149.582 129.682 152.725 132.81H163.195C163.361 132.81 163.519 132.574 163.611 132.193C172.634 94.6911 169.698 60.9659 157.358 -9.60372C157.274 -10.0786 157.097 -10.3928 156.905 -10.3928Z\"\r\n          fill=\"#F9A626\"\r\n        />\r\n        <path\r\n          d=\"M136.747 216.402C134.071 220.533 132.606 221.307 130.005 221.883C135.166 231.408 138.257 230.37 143.987 221.883C140.338 225.365 139.014 222.375 136.747 216.402Z\"\r\n          fill=\"#C78E35\"\r\n        />\r\n        <path\r\n          d=\"M152.937 132.386C155.399 127.399 157.103 121.04 158.158 113.545C158.257 112.837 158.119 112.05 157.857 111.804C152.836 107.072 149.73 105.376 144.446 104.137C144.187 104.077 143.954 104.572 143.92 105.279C143.648 111.054 143.816 118.266 144.198 126.284C144.227 126.9 144.405 127.382 144.63 127.463C147.774 128.589 149.596 129.734 152.477 132.565C152.632 132.717 152.805 132.654 152.937 132.386Z\"\r\n          fill=\"#C78E35\"\r\n        />\r\n        <path\r\n          d=\"M50.7517 -3.4646H41.6512C41.257 -3.4646 41.0027 -2.4574 41.1805 -1.61022C50.4714 42.6652 56.1455 83.7945 52.2594 110.295C46.4959 105.456 43.158 103.862 37.0956 102.669C32.7846 102.608 30.4042 104.275 26.4857 109.984C26.352 110.179 26.2602 110.51 26.2385 110.882C23.767 153.324 38.0787 201.858 22.3145 211.98C27.7701 220.814 31.0378 219.852 37.0956 211.98C44.3396 197.027 39.0852 154.714 37.3717 124.277C41.0449 125.394 43.0096 126.46 46.3326 129.361H57.4004C57.5766 129.361 57.7432 129.143 57.8403 128.789C67.3789 94.0046 64.2752 62.7232 51.2296 -2.73268C51.1419 -3.17315 50.9546 -3.4646 50.7517 -3.4646Z\"\r\n          fill=\"#EF6B93\"\r\n        />\r\n        <path\r\n          d=\"M29.4409 206.895C26.612 210.728 25.0633 211.445 22.3145 211.98C27.7701 220.814 31.0378 219.852 37.0956 211.98C33.2371 215.21 31.8376 212.436 29.4409 206.895Z\"\r\n          fill=\"#C04A6E\"\r\n        />\r\n        <path\r\n          d=\"M46.557 128.968C49.1589 124.342 50.9608 118.444 52.0755 111.492C52.1808 110.836 52.0345 110.106 51.758 109.877C46.4492 105.489 43.166 103.915 37.5801 102.766C37.3067 102.71 37.0598 103.169 37.0246 103.825C36.737 109.181 36.9148 115.871 37.318 123.308C37.349 123.879 37.5374 124.327 37.7746 124.401C41.0986 125.446 43.025 126.508 46.0707 129.134C46.2343 129.275 46.4173 129.217 46.557 128.968Z\"\r\n          fill=\"#C04A6E\"\r\n        />\r\n        <path\r\n          d=\"M57.4307 -6.56114L61.3208 -2.20808C59.7167 2.75029 58.8397 7.17802 58.6391 12.0358C62.8647 25.4454 67.184 32.766 76.7187 42.922C78.6635 44.9935 80.4691 47.4208 81.7936 50.5018C84.439 56.6551 85.5384 61.8953 86.4415 70.6985C86.3693 76.382 86.2907 79.9831 85.0396 85.8675C84.549 88.1751 83.5108 90.1467 82.1372 91.2318C73.6706 97.9199 62.7343 98.6506 60.482 115.516C64.0797 131.961 73.8844 147.619 80.3167 148.169L84.2859 160.972C65.9786 159.406 51.3496 120.765 59.7657 99.3735C63.5501 92.4605 79.4254 86.9838 80.0884 78.5978C81.0202 69.6191 80.5318 65.5658 78.6186 59.3847C71.1816 50.916 63.2437 45.7185 61.4745 36.8023C53.9133 19.8734 53.3688 10.3728 57.4307 -6.56114Z\"\r\n          fill=\"#F9A626\"\r\n        />\r\n        <path\r\n          d=\"M61.4745 36.8023C59.3531 26.1113 58.3649 18.6722 58.6391 12.0358C62.8647 25.4454 67.184 32.766 76.7187 42.922C78.6635 44.9935 80.4691 47.4208 81.7936 50.5018C84.439 56.6551 85.5384 61.8953 86.4415 70.6985C84.1412 66.2168 81.4153 62.5694 78.6186 59.3847C71.1816 50.916 63.2386 45.6928 61.4745 36.8023Z\"\r\n          fill=\"#C78E35\"\r\n        />\r\n        <path\r\n          d=\"M59.7657 99.3735L60.482 115.516C64.0797 131.961 73.8844 147.619 80.3167 148.169L84.2859 160.972C65.9786 159.406 51.3496 120.765 59.7657 99.3735Z\"\r\n          fill=\"#C78E35\"\r\n        />\r\n        <path\r\n          d=\"M230.333 -5.56846L234.281 -1.951C232.75 2.07503 231.939 5.6789 231.808 9.64468C236.223 20.6669 240.643 26.7157 250.312 35.1626C252.285 36.8855 254.123 38.897 255.491 41.4349C258.222 46.5038 259.396 50.8024 260.425 58.009C260.435 62.6514 260.409 65.5924 259.244 70.3806C258.788 72.2583 257.779 73.8529 256.423 74.718C248.064 80.0499 237.152 80.4757 235.146 94.2201C238.977 107.713 248.996 120.659 255.428 121.209L259.578 131.731C241.271 130.165 226.101 98.366 234.197 81.0198C237.877 75.431 253.653 71.2048 254.194 64.3636C254.995 57.0423 254.448 53.723 252.448 48.6428C244.898 41.6073 236.895 37.2366 234.999 29.9241C227.202 15.9743 226.521 8.20353 230.333 -5.56846Z\"\r\n          fill=\"#F9A626\"\r\n        />\r\n        <path\r\n          d=\"M234.999 29.9241C232.725 21.156 231.631 15.0626 231.808 9.64468C236.223 20.6669 240.643 26.7157 250.312 35.1626C252.285 36.8855 254.123 38.897 255.491 41.4349C258.222 46.5038 259.396 50.8024 260.425 58.009C258.063 54.3113 255.287 51.2886 252.448 48.6428C244.898 41.6073 236.889 37.2155 234.999 29.9241Z\"\r\n          fill=\"#C78E35\"\r\n        />\r\n        <path\r\n          d=\"M234.197 81.0198L235.146 94.2201C238.977 107.713 248.996 120.659 255.428 121.209L259.578 131.731C241.271 130.165 226.101 98.366 234.197 81.0198Z\"\r\n          fill=\"#C78E35\"\r\n        />\r\n        <path\r\n          d=\"M334.264 -37.4674L338.162 -33.2183C336.569 -28.3916 335.701 -24.0803 335.51 -19.3486C339.763 -6.27629 344.096 0.86467 353.65 10.7791C355.598 12.8014 357.409 15.17 358.739 18.1742C361.397 24.1743 362.507 29.2815 363.428 37.8591C363.367 43.3954 363.296 46.9033 362.057 52.6328C361.571 54.8797 360.537 56.798 359.166 57.852C350.715 64.3485 339.782 65.0361 337.564 81.4606C341.195 97.4887 351.03 112.763 357.462 113.313L361.457 125.794C343.15 124.228 328.444 86.5541 336.815 65.7337C340.585 59.0079 356.446 53.7078 357.092 45.5401C358.005 36.7956 357.509 32.846 355.583 26.8204C348.13 18.5543 340.183 13.4736 338.396 4.78399C330.801 -11.724 330.237 -20.9802 334.264 -37.4674Z\"\r\n          fill=\"#64688D\"\r\n        />\r\n        <path\r\n          d=\"M338.396 4.78399C336.253 -5.6354 335.25 -12.8843 335.51 -19.3486C339.763 -6.27629 344.096 0.86467 353.65 10.7791C355.598 12.8014 357.409 15.17 358.739 18.1742C361.397 24.1743 362.507 29.2815 363.428 37.8591C361.119 33.4881 358.386 29.929 355.583 26.8204C348.13 18.5543 340.178 13.4485 338.396 4.78399Z\"\r\n          fill=\"#294069\"\r\n        />\r\n        <path\r\n          d=\"M336.815 65.7337L337.564 81.4606C341.195 97.4887 351.03 112.763 357.462 113.313L361.457 125.794C343.15 124.228 328.444 86.5541 336.815 65.7337Z\"\r\n          fill=\"#294069\"\r\n        />\r\n        <path\r\n          d=\"M93.1104 -6.92847H82.5342C82.0761 -6.92847 81.7806 -5.60651 81.9872 -4.49459C92.7846 53.6169 99.3788 107.599 94.8627 142.381C88.1646 136.03 84.2854 133.938 77.2399 132.371C72.2297 132.292 69.4634 134.48 64.9094 141.973C64.7541 142.229 64.6473 142.663 64.6221 143.152C61.7498 198.857 78.3823 262.557 60.0618 275.842C66.4021 287.437 70.1996 286.174 77.2399 275.842C85.6586 256.217 79.552 200.681 77.5608 160.732C81.8296 162.199 84.1129 163.598 87.9747 167.405H100.837C101.042 167.405 101.236 167.119 101.349 166.654C112.434 121 108.827 79.9431 93.6659 -5.96782C93.5639 -6.54594 93.3462 -6.92847 93.1104 -6.92847Z\"\r\n          fill=\"#64688D\"\r\n        />\r\n        <path\r\n          d=\"M68.3438 269.169C65.0562 274.199 63.2563 275.141 60.0618 275.842C66.4021 287.437 70.1996 286.174 77.2399 275.842C72.7557 280.081 71.1292 276.441 68.3438 269.169Z\"\r\n          fill=\"#294069\"\r\n        />\r\n        <path\r\n          d=\"M88.2356 166.889C91.2594 160.818 93.3534 153.077 94.649 143.952C94.7713 143.09 94.6013 142.133 94.2799 141.833C88.1103 136.073 84.2946 134.007 77.803 132.499C77.4851 132.426 77.1982 133.029 77.1573 133.889C76.8231 140.919 77.0298 149.7 77.4983 159.46C77.5343 160.21 77.7533 160.798 78.0289 160.895C81.892 162.267 84.1308 163.66 87.6704 167.107C87.8605 167.292 88.0731 167.215 88.2356 166.889Z\"\r\n          fill=\"#294069\"\r\n        />\r\n        <path\r\n          d=\"M309.602 -26.5596H299.026C298.568 -26.5596 298.272 -25.8356 298.479 -25.2267C309.277 6.59621 315.871 36.1579 311.355 55.2052C304.656 51.7274 300.777 50.5817 293.732 49.7237C288.722 49.6804 285.955 50.8782 281.401 54.982C281.246 55.1219 281.139 55.3594 281.114 55.6271C278.242 86.1323 294.874 121.016 276.554 128.291C282.894 134.641 286.692 133.949 293.732 128.291C302.15 117.544 296.044 87.1314 294.053 65.2545C298.322 66.0576 300.605 66.8238 304.467 68.9088H317.329C317.534 68.9088 317.728 68.7519 317.84 68.4974C328.926 43.4964 325.319 21.0129 310.158 -26.0335C310.056 -26.3501 309.838 -26.5596 309.602 -26.5596Z\"\r\n          fill=\"#97AC83\"\r\n        />\r\n        <path\r\n          d=\"M284.836 124.637C281.548 127.391 279.748 127.907 276.554 128.291C282.894 134.641 286.692 133.949 293.732 128.291C289.248 130.613 287.621 128.619 284.836 124.637Z\"\r\n          fill=\"#7A8C69\"\r\n        />\r\n        <path\r\n          d=\"M304.727 68.6264C307.751 65.3016 309.845 61.0624 311.141 56.0657C311.263 55.5937 311.093 55.0693 310.772 54.905C304.602 51.7505 300.787 50.6195 294.295 49.7938C293.977 49.7534 293.69 50.0836 293.649 50.5547C293.315 54.4048 293.522 59.2132 293.99 64.5582C294.026 64.9687 294.245 65.2904 294.521 65.344C298.384 66.0952 300.623 66.8581 304.162 68.7456C304.352 68.847 304.565 68.805 304.727 68.6264Z\"\r\n          fill=\"#7A8C69\"\r\n        />\r\n        <path\r\n          d=\"M327.083 -52.5311L323.161 -48.578C324.725 -44.1266 325.567 -40.1468 325.729 -35.774C321.401 -23.6625 317.027 -17.0333 307.419 -7.80662C305.459 -5.92464 303.635 -3.7234 302.287 -0.93768C299.595 4.62596 298.456 9.35423 297.484 17.2893C297.511 22.4068 297.561 25.649 298.765 30.9373C299.237 33.0112 300.259 34.7779 301.624 35.7433C310.032 41.694 320.955 42.259 323.073 57.4274C319.349 72.2673 309.427 86.4507 302.995 87.0009L298.928 98.5635C317.235 96.9977 332.158 62.0769 323.916 42.8846C320.189 36.6916 304.367 31.8948 303.77 24.3487C302.91 16.2712 303.43 12.617 305.39 7.03449C312.889 -0.654963 320.862 -5.40292 322.701 -13.4472C330.39 -28.7563 331.009 -37.3164 327.083 -52.5311Z\"\r\n          fill=\"#EF6B93\"\r\n        />\r\n        <path\r\n          d=\"M322.701 -13.4472C324.905 -23.0927 325.951 -29.8001 325.729 -35.774C321.401 -23.6625 317.027 -17.0333 307.419 -7.80662C305.459 -5.92464 303.635 -3.7234 302.287 -0.93768C299.595 4.62596 298.456 9.35423 297.484 17.2893C299.818 13.2339 302.571 9.9262 305.39 7.03449C312.889 -0.654959 320.868 -5.42615 322.701 -13.4472Z\"\r\n          fill=\"#C04A6E\"\r\n        />\r\n        <path\r\n          d=\"M323.916 42.8846L323.073 57.4274C319.349 72.2673 309.427 86.4507 302.995 87.0009L298.928 98.5635C317.235 96.9977 332.158 62.0769 323.916 42.8846Z\"\r\n          fill=\"#C04A6E\"\r\n        />\r\n        <path\r\n          d=\"M148.079 -9.98472L144.257 -4.77297C145.947 1.27374 146.9 6.66319 147.183 12.5621C143.178 28.7587 138.976 37.564 129.599 49.7149C127.686 52.1934 125.919 55.1062 124.644 58.821C122.099 66.2402 121.087 72.5796 120.331 83.2465C120.499 90.1452 120.639 94.5169 121.991 101.681C122.521 104.49 123.594 106.902 124.988 108.244C133.58 116.515 144.544 117.602 147.085 138.111C143.76 158.003 134.205 176.826 127.773 177.376L124.014 192.84C142.321 191.274 156.319 144.648 147.529 118.533C143.623 110.075 127.632 103.138 126.827 92.9491C125.742 82.0356 126.162 77.1255 127.974 69.6591C135.279 59.5175 143.14 53.355 144.762 42.5667C152.048 22.1602 152.433 10.6403 148.079 -9.98472Z\"\r\n          fill=\"#EF6B93\"\r\n        />\r\n        <path\r\n          d=\"M144.762 42.5667C146.706 29.6309 147.57 20.6211 147.183 12.5621C143.178 28.7587 138.976 37.564 129.599 49.7149C127.686 52.1934 125.919 55.1062 124.644 58.821C122.099 66.2402 121.087 72.5796 120.331 83.2465C122.559 77.8496 125.227 73.473 127.974 69.6591C135.279 59.5175 143.145 53.3238 144.762 42.5667Z\"\r\n          fill=\"#C04A6E\"\r\n        />\r\n        <path\r\n          d=\"M147.529 118.533L147.085 138.111C143.76 158.003 134.205 176.826 127.773 177.376L124.014 192.84C142.321 191.274 156.319 144.648 147.529 118.533Z\"\r\n          fill=\"#C04A6E\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Rubans;\r\n","function OrigamiOrange() {\r\n  return (\r\n    <svg\r\n      width=\"199\"\r\n      height=\"148\"\r\n      viewBox=\"0 0 199 148\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"origami-orange\"\r\n    >\r\n      <path\r\n        d=\"M188.556 115.837L171.116 86.5517L165.193 86.0581C173.911 55.6083 185.594 39.8273 197.769 8.89708C160.359 27.7445 139.056 38.0919 99.7134 55.6214L88.1969 81.2869L82.274 83.2612C55.4633 48.7632 41.6835 30.0332 26.0074 1C36.9461 31.7069 45.679 49.8443 62.5314 82.6443L55.2924 81.2869C31.8213 90.7018 20.0395 96.1814 0.999954 106.623C24.1584 116.036 50.1214 120.974 103.333 129.602L117.811 147.096L122.418 140.753L126.366 145.122L161.903 96.423L188.556 115.837Z\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <path\r\n        d=\"M188.556 116.166L165.851 91.4873L160.587 88.5259L122.418 141.082L126.366 145.451L161.903 96.7521L188.556 116.166Z\"\r\n        fill=\"#D58813\"\r\n      />\r\n      <path\r\n        d=\"M122.418 126.695L110.901 131.631L103.333 129.931L117.811 147.425L122.418 126.695Z\"\r\n        fill=\"#D58813\"\r\n      />\r\n      <path\r\n        d=\"M106.952 75.3641C108.264 87.0341 111.065 97.0342 117.295 113.533L128.927 104.978C125.828 100.317 123.215 96.4798 120.572 92.8035C116.657 87.3577 112.676 82.2642 106.952 75.3641Z\"\r\n        fill=\"#D58813\"\r\n      />\r\n      <path\r\n        d=\"M188.556 115.837L165.851 91.1583L160.587 88.1969M188.556 115.837L171.116 86.5517L165.193 86.0581M188.556 115.837L161.903 96.423M0.999961 106.623C20.0395 96.1814 31.8213 90.7018 55.2924 81.287L62.5314 82.6443M0.999961 106.623C24.1584 116.036 50.1214 120.974 103.333 129.602M0.999961 106.623C41.4725 103.662 60.5571 108.927 99.4605 108.927M122.418 126.366L110.901 131.302L103.333 129.602M122.418 126.366L117.811 147.096M122.418 126.366C120.493 121.526 118.794 117.177 117.295 113.204M122.418 126.366C113.302 119.969 106.175 114.715 99.4605 108.927M117.811 147.096L103.333 129.602M117.811 147.096L122.418 140.753M155.322 85.2355L160.587 88.1969M155.322 85.2355L128.927 104.649M155.322 85.2355L165.193 86.0581M160.587 88.1969L122.418 140.753M160.587 88.1969L161.903 96.423M122.418 140.753L126.366 145.122L161.903 96.423M117.295 113.204C111.065 96.7052 108.264 86.7051 106.952 75.0351M117.295 113.204L128.927 104.649M106.952 75.0351L88.1969 81.287M106.952 75.0351C112.676 81.9351 116.657 87.0287 120.572 92.4745M128.927 104.649C125.828 99.9876 123.215 96.1508 120.572 92.4745M99.4605 108.927C91.9712 102.47 84.9964 95.3495 76.3512 85.2355M76.3512 85.2355L82.274 83.2612M76.3512 85.2355L62.5314 82.6443M165.193 86.0581C173.911 55.6083 185.594 39.8273 197.769 8.89708M197.769 8.89708C160.359 27.7445 139.056 38.0919 99.7134 55.6214L88.1969 81.287M197.769 8.89708L120.572 92.4745M88.1969 81.287L82.274 83.2612M82.274 83.2612C55.4634 48.7632 41.6835 30.0332 26.0074 1C36.9461 31.7069 45.679 49.8443 62.5314 82.6443M160.587 88.5259L165.851 91.4873L188.556 116.166L161.903 96.7521M160.587 88.5259L122.418 141.082L126.366 145.451L161.903 96.7521M160.587 88.5259L161.903 96.7521M110.901 131.631L122.418 126.695L117.811 147.425L103.333 129.931L110.901 131.631ZM117.295 113.533C111.065 97.0342 108.264 87.0341 106.952 75.3641C112.676 82.2642 116.657 87.3577 120.572 92.8035C123.215 96.4798 125.828 100.317 128.927 104.978L117.295 113.533Z\"\r\n        stroke=\"#A3670C\"\r\n        stroke-opacity=\"0.2\"\r\n        stroke-width=\"0.5\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default OrigamiOrange;\r\n","function OrigamiRose() {\r\n  return (\r\n    <svg\r\n      width=\"169\"\r\n      height=\"143\"\r\n      viewBox=\"0 0 169 143\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"origami-rose\"\r\n    >\r\n      <path\r\n        d=\"M26.9984 117.527L34.483 93.1775L38.6965 91.7717C26.9815 71.2024 15.7069 61.8093 1.39655 41.5025C31.8948 48.5726 49.1933 52.3191 80.8618 58.0906L93.7633 74.6908L98.4132 75.077C111.781 45.2851 118.475 29.2475 124.724 5.39305C122.211 29.6251 119.077 44.3399 112.64 71.1376L117.657 68.8718C136.365 71.5576 145.889 73.453 161.561 77.6684C146.41 88.5988 128.43 96.7762 91.3166 112.451L83.8972 127.715L79.4304 123.923L77.3358 127.794L42.9188 98.7162L26.9984 117.527Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M27.0565 117.766L39.1788 95.8305L42.478 92.7491L79.4886 124.162L77.3939 128.033L42.977 98.9552L27.0565 117.766Z\"\r\n        fill=\"#D55D81\"\r\n      />\r\n      <path\r\n        d=\"M76.9443 113.715L86.1799 115.263L91.3748 112.69L83.9554 127.954L76.9443 113.715Z\"\r\n        fill=\"#D55D81\"\r\n      />\r\n      <path\r\n        d=\"M79.0966 73.7068C80.2076 82.4129 79.9423 90.1697 78.3367 103.252L68.3773 99.0968C69.8029 95.164 71.0218 91.9158 72.2909 88.7788C74.1709 84.132 76.1611 79.7293 79.0966 73.7068Z\"\r\n        fill=\"#D55D81\"\r\n      />\r\n      <path\r\n        d=\"M26.9984 117.527L39.1206 95.5916L42.4198 92.5101M26.9984 117.527L34.483 93.1775L38.6965 91.7717M26.9984 117.527L42.9188 98.7162M161.561 77.6684C145.889 73.453 136.365 71.5576 117.657 68.8718L112.64 71.1376M161.561 77.6684C146.41 88.5988 128.43 96.7762 91.3166 112.451M161.561 77.6684C131.649 82.6754 118.722 89.8733 90.4722 96.7532M76.8861 113.476L86.1217 115.024L91.3166 112.451M76.8861 113.476L83.8972 127.715M76.8861 113.476C77.4276 109.622 77.8919 106.163 78.2785 103.013M76.8861 113.476C82.3738 107.219 86.6204 102.143 90.4722 96.7532M83.8972 127.715L91.3166 112.451M83.8972 127.715L79.4304 123.923M45.719 89.4287L42.4198 92.5101M45.719 89.4287L68.3191 98.8579M45.719 89.4287L38.6965 91.7717M42.4198 92.5101L79.4304 123.923M42.4198 92.5101L42.9188 98.7162M79.4304 123.923L77.3358 127.794L42.9188 98.7162M78.2785 103.013C79.8841 89.9308 80.1495 82.174 79.0384 73.4679M78.2785 103.013L68.3191 98.8579M79.0384 73.4679L93.7633 74.6908M79.0384 73.4679C76.1029 79.4904 74.1127 83.8931 72.2327 88.5399M68.3191 98.8579C69.7447 94.925 70.9636 91.6768 72.2327 88.5399M90.4722 96.7532C94.7687 90.7405 98.5741 84.3362 103.063 75.4632M103.063 75.4632L98.4132 75.077M103.063 75.4632L112.64 71.1376M38.6965 91.7717C26.9815 71.2024 15.7069 61.8093 1.39655 41.5025M1.39655 41.5025C31.8948 48.5726 49.1933 52.3191 80.8618 58.0906L93.7633 74.6908M1.39655 41.5025L72.2327 88.5399M93.7633 74.6908L98.4132 75.077M98.4132 75.077C111.781 45.2851 118.475 29.2475 124.724 5.39305C122.211 29.6251 119.077 44.3399 112.64 71.1376M42.478 92.7491L39.1788 95.8305L27.0565 117.766L42.977 98.9552M42.478 92.7491L79.4886 124.162L77.3939 128.033L42.977 98.9552M42.478 92.7491L42.977 98.9552M86.1799 115.263L76.9443 113.715L83.9554 127.954L91.3748 112.69L86.1799 115.263ZM78.3367 103.252C79.9423 90.1697 80.2077 82.4129 79.0966 73.7068C76.1611 79.7293 74.1709 84.132 72.2909 88.7788C71.0218 91.9158 69.8029 95.164 68.3773 99.0968L78.3367 103.252Z\"\r\n        stroke=\"#692D3F\"\r\n        stroke-opacity=\"0.2\"\r\n        stroke-width=\"0.5\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default OrigamiRose;\r\n","import { useEffect } from \"react\";\r\n\r\n// Composants\r\nimport HeroBanner from \"../../components/Hero-banner\";\r\nimport Timer from \"../../components/Timer\";\r\nimport Introduction from \"../../components/Introduction\";\r\nimport EncartInfo from \"../../components/Encart-info\";\r\nimport Button from \"../../components/Button\";\r\nimport Slider from \"../../components/Slider\";\r\nimport DescriptionImg from \"../../components/Description-img\";\r\nimport BandeauCadre from \"../../components/Bandeau-cadre\";\r\nimport WaveShape from \"../../components/Wave-shape\";\r\nimport ActivitesAccueil from \"../../components/Activites-accueil\";\r\n\r\n// Assets\r\nimport accueilProgrammeGrande from \"../../assets/accueil/accueil-programme-grande.jpg\";\r\nimport accueilProgrammePetite from \"../../assets/accueil/accueil-programme-petite.jpg\";\r\nimport accueilRestaurationGrande from \"../../assets/accueil/accueil-restauration-grande.jpg\";\r\nimport accueilRestaurationPetite from \"../../assets/accueil/accueil-restauration-petite.jpg\";\r\nimport accueilHebergementGrande from \"../../assets/accueil/accueil-hebergement-grande.jpg\";\r\nimport accueilHebergementPetite from \"../../assets/accueil/accueil-hebergement-petite.jpg\";\r\nimport Pompon from \"../../assets/svg/Pompom\";\r\nimport Rubans from \"../../assets/svg/Rubans\";\r\nimport OrigamiOrange from \"../../assets/svg/Origami-orange\";\r\nimport OrigamiRose from \"../../assets/svg/Origami-rose\";\r\n\r\n//Styles\r\nimport \"../../styles/Home.css\"\r\n\r\n// Données\r\nimport { white, blue, green } from \"../../datas/colors\";\r\n\r\nfunction Home() {\r\n  useEffect(() => {\r\n    document.title = \"Accueil - Mariage Stéphie & Alain\";\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      <HeroBanner />\r\n      <Timer />\r\n      <WaveShape bgColor={white} />\r\n      <Introduction />\r\n      <EncartInfo />\r\n      <div className=\"text-button-center\">\r\n        <p>Des questions ? C'est bien normal, on a presque tout mis ici.</p>\r\n        <Button link=\"/informations\" color={blue} borderColor=\"button-blue\" />\r\n      </div>\r\n      <Slider />\r\n\r\n      <div className=\"sticky-stack-wrapper fade-in-section\">\r\n        <div className=\"sticky-slide\">\r\n          <DescriptionImg\r\n            title=\"Programmation du week-end !\"\r\n            imgPosition=\"img-right\"\r\n            link=\"/programmation\"\r\n            imgGrande={accueilProgrammeGrande}\r\n            imgPetite={accueilProgrammePetite}\r\n            bgColor=\"bg-pink\"\r\n            borderColor=\"border-pink\"\r\n          >\r\n            <Rubans />\r\n            <p>Envie de savoir ce qui vous attend lors de notre mariage ?</p>\r\n            <p>\r\n              Cliquez ici pour découvrir toute la programmation et les détails\r\n              du weekend.\r\n            </p>\r\n          </DescriptionImg>\r\n        </div>\r\n\r\n        <div className=\"sticky-slide\">\r\n          <DescriptionImg\r\n            title=\"Liste des stands !\"\r\n            imgPosition=\"img-left\"\r\n            link=\"/restauration\"\r\n            imgGrande={accueilRestaurationGrande}\r\n            imgPetite={accueilRestaurationPetite}\r\n            bgColor=\"bg-orange\"\r\n            borderColor=\"border-orange\"\r\n          >\r\n            <Pompon className=\"pompom-accueil\" />\r\n            <p>\r\n              Découvrez notre sélection de stand de restauration pour satisfaire\r\n              vos envies. De la cuisine locale aux saveurs exotiques, chaque\r\n              bouchée vous fera voyager.\r\n            </p>\r\n            <p>Cliquez ici pour exciter vos papilles.</p>\r\n          </DescriptionImg>\r\n        </div>\r\n\r\n        <div className=\"sticky-slide\">\r\n          <DescriptionImg\r\n            title=\"Votre hébergement sur place !\"\r\n            imgPosition=\"img-right\"\r\n            link=\"/hebergement\"\r\n            imgGrande={accueilHebergementGrande}\r\n            imgPetite={accueilHebergementPetite}\r\n            bgColor=\"bg-green\"\r\n            borderColor=\"border-green\"\r\n          >\r\n            <OrigamiRose />\r\n            <p>\r\n              Le domaine dispose de plus de 200 couchages, jouit d'un cadre\r\n              agréable et d'une proximité avec le Puy du Fou. Nous prenons en\r\n              charge la soirée du samedi, des prolongations sont possibles.\r\n            </p>\r\n            <p>Cliquez ici avant le 30 avril.</p>\r\n            <OrigamiOrange />\r\n          </DescriptionImg>\r\n        </div>\r\n      </div>\r\n  \r\n      <WaveShape bgColor={green} />\r\n\r\n      <ActivitesAccueil />\r\n\r\n      <BandeauCadre>\r\n        <div className=\"cadre-content cadre-accueil\">\r\n          <h2>Aidez-nous à capturer les moments de cette belle journée !</h2>\r\n          <Button link=\"/galerie\" color={blue} borderColor=\"button-blue\" />\r\n        </div>\r\n      </BandeauCadre>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","function WaveShapeHaut({className}) {\r\n  return (\r\n    <svg\r\n      width=\"100%\"\r\n      height=\"auto\"\r\n      viewBox=\"0 0 1440 109\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={`banner-haut fade-in-section ${className}`}\r\n    >\r\n      <path\r\n        d=\"M1440 109L0 109V37.3813C263.361 -12.0038 420.839 -12.915 720 37.3813C1003.44 87.8468 1161.07 87.4974 1440 37.3813V109Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default WaveShapeHaut;\r\n","function LegendItem({ bgColor, color, nombre, action }) {\r\n  return (\r\n    <div className=\"legend-item\" key={nombre}>\r\n      <span className={`numero white ${bgColor}`}>{nombre}</span>\r\n      <p className={color}>{action}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LegendItem;\r\n","function MinusBox() {\r\n  return (\r\n    <svg\r\n      width=\"30\"\r\n      height=\"30\"\r\n      viewBox=\"0 0 46 46\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"faq-icon\"\r\n    >\r\n      <g clip-path=\"url(#clip0_352_22)\">\r\n        <path\r\n          fill-rule=\"evenodd\"\r\n          clip-rule=\"evenodd\"\r\n          d=\"M9.58333 5.75H36.4167C38.525 5.75 40.25 7.475 40.25 9.58333V36.4167C40.25 38.525 38.525 40.25 36.4167 40.25H9.58333C7.45583 40.25 5.75 38.525 5.75 36.4167V9.58333C5.75 7.475 7.45583 5.75 9.58333 5.75ZM32.5833 24.9167H24.9167H21.0833H13.4167V21.0833H21.0833H24.9167H32.5833V24.9167Z\"\r\n          fill=\"#FEFEFC\"\r\n        />\r\n      </g>\r\n      <defs>\r\n        <clipPath id=\"clip0_352_22\">\r\n          <rect width=\"46\" height=\"46\" fill=\"white\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default MinusBox;\r\n","function AddBox() {\r\n  return (\r\n    <svg\r\n      width=\"30\"\r\n      height=\"30\"\r\n      viewBox=\"0 0 46 46\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"faq-icon\"\r\n    >\r\n      <g clip-path=\"url(#clip0_799_55)\">\r\n        <path\r\n          d=\"M36.4167 40.25H9.58333C7.45583 40.25 5.75 38.525 5.75 36.4167V9.58333C5.75 7.475 7.45583 5.75 9.58333 5.75H36.4167C38.525 5.75 40.25 7.475 40.25 9.58333V36.4167C40.25 38.525 38.525 40.25 36.4167 40.25ZM32.5833 21.0833H24.9167V13.4167H21.0833V21.0833H13.4167V24.9167H21.0833V32.5833H24.9167V24.9167H32.5833V21.0833Z\"\r\n          fill=\"#FEFEFC\"\r\n        />\r\n      </g>\r\n      <defs>\r\n        <clipPath id=\"clip0_799_55\">\r\n          <rect\r\n            width=\"46\"\r\n            height=\"46\"\r\n            fill=\"white\"\r\n            transform=\"matrix(1 0 0 -1 0 46)\"\r\n          />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default AddBox;\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MinusBox from \"../../assets/icons/Minus-box\";\r\nimport AddBox from \"../../assets/icons/Add-box\";\r\nimport \"../../styles/Faq-accordion.css\"\r\n\r\nfunction FaqAccordion({ id, question, answer, link, linkText, img, imgClass, bgColor }) {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return isOpen ? (\r\n    <div className={`faq-accordion ${bgColor}`} key={id}>\r\n      <div className=\"faq-box-question\" onClick={() => setIsOpen(false)}>\r\n        <h4 className=\"faq-question white\">{question}</h4>\r\n        <MinusBox />\r\n      </div>\r\n      <div className=\"faq-content\">\r\n        <p className=\"white\">{answer}</p>\r\n        <Link to={link} className=\"white link-faq\">{linkText}</Link>\r\n        <img src={img} alt=\"img\" className={imgClass} />\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className={`faq-accordion ${bgColor}`} key={id}>\r\n      <div className=\"faq-box-question\" onClick={() => setIsOpen(true)}>\r\n        <h4 className=\"faq-question white\">{question}</h4>\r\n        <AddBox />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaqAccordion;\r\n","import \"../../styles/Banner.css\";\r\nimport bannerBuisson from \"../../assets/banner/banner-buisson.png\";\r\nimport bannerLanterne from \"../../assets/banner/banner-lanterne.png\";\r\n\r\nfunction Banner() {\r\n  return (\r\n    <section className=\"banner\">\r\n      <img src={bannerLanterne} alt=\"\" className=\"img-banner1\" />\r\n      <img src={bannerBuisson} alt=\"\" className=\"img-banner2\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","function Guirlande() {\r\n  return (\r\n    <svg\r\n      width=\"542\"\r\n      height=\"414\"\r\n      viewBox=\"0 0 542 414\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"guirlande\"\r\n    >\r\n      <mask\r\n        id=\"mask0_1048_114\"\r\n        // style=\"mask-type:alpha\"\r\n        maskUnits=\"userSpaceOnUse\"\r\n        x=\"0\"\r\n        y=\"0\"\r\n        width=\"542\"\r\n        height=\"414\"\r\n      >\r\n        <rect width=\"542\" height=\"414\" fill=\"#D9D9D9\" />\r\n      </mask>\r\n      <g mask=\"url(#mask0_1048_114)\">\r\n        <path\r\n          d=\"M492.672 84.1217L497.142 90.2064C495.137 97.2877 494 103.597 493.648 110.501C498.295 129.438 503.199 139.726 514.167 153.911C516.404 156.804 518.469 160.206 519.953 164.548C522.916 173.221 524.083 180.635 524.934 193.114C524.713 201.186 524.534 206.302 522.922 214.69C522.29 217.979 521.022 220.805 519.38 222.38C509.264 232.089 496.387 233.399 493.334 257.406C497.17 280.669 508.324 302.66 515.875 303.281L520.235 321.363C498.745 319.596 482.469 265.088 492.879 234.5C497.494 224.588 516.294 216.415 517.274 204.49C518.585 191.716 518.108 185.972 516.006 177.242C507.464 165.401 498.255 158.218 496.388 145.601C487.903 121.749 487.49 108.271 492.672 84.1217Z\"\r\n          fill=\"#97AC83\"\r\n        />\r\n        <path\r\n          d=\"M496.388 145.601C494.15 130.471 493.166 119.932 493.648 110.501C498.295 129.438 503.199 139.726 514.167 153.911C516.404 156.804 518.469 160.206 519.953 164.548C522.916 173.221 524.083 180.635 524.934 193.114C522.337 186.806 519.219 181.695 516.006 177.242C507.464 165.401 498.249 158.182 496.388 145.601Z\"\r\n          fill=\"#7A8C69\"\r\n        />\r\n        <path\r\n          d=\"M492.879 234.5L493.334 257.406C497.17 280.669 508.324 302.66 515.875 303.281L520.235 321.363C498.745 319.596 482.469 265.088 492.879 234.5Z\"\r\n          fill=\"#7A8C69\"\r\n        />\r\n        <path\r\n          d=\"M265.672 39.1217L270.142 45.2064C268.137 52.2877 267 58.5973 266.648 65.5007C271.295 84.4382 276.199 94.7264 287.167 108.911C289.404 111.804 291.469 115.206 292.953 119.548C295.916 128.221 297.083 135.635 297.934 148.114C297.713 156.186 297.534 161.302 295.922 169.69C295.29 172.979 294.022 175.805 292.38 177.38C282.264 187.089 269.387 188.399 266.334 212.406C270.17 235.669 281.324 257.66 288.875 258.281L293.235 276.363C271.745 274.596 255.469 220.088 265.879 189.5C270.494 179.588 289.294 171.415 290.274 159.49C291.585 146.716 291.108 140.972 289.006 132.242C280.464 120.401 271.255 113.218 269.388 100.601C260.903 76.7487 260.49 63.2706 265.672 39.1217Z\"\r\n          fill=\"#97AC83\"\r\n        />\r\n        <path\r\n          d=\"M269.388 100.601C267.15 85.4713 266.166 74.9319 266.648 65.5007C271.295 84.4382 276.199 94.7264 287.167 108.911C289.404 111.804 291.469 115.206 292.953 119.548C295.916 128.221 297.083 135.635 297.934 148.114C295.337 141.806 292.219 136.695 289.006 132.242C280.464 120.401 271.249 113.182 269.388 100.601Z\"\r\n          fill=\"#7A8C69\"\r\n        />\r\n        <path\r\n          d=\"M265.879 189.5L266.334 212.406C270.17 235.669 281.324 257.66 288.875 258.281L293.235 276.363C271.745 274.596 255.469 220.088 265.879 189.5Z\"\r\n          fill=\"#7A8C69\"\r\n        />\r\n        <path\r\n          d=\"M72.8477 0H82.8171C83.2489 0 83.5275 0.790445 83.3327 1.45531C73.1548 36.2024 66.939 68.4804 71.196 89.2778C77.5098 85.4805 81.1664 84.2295 87.8076 83.2927C92.5303 83.2455 95.1379 84.5533 99.4306 89.0341C99.577 89.187 99.6777 89.4463 99.7014 89.7386C102.409 123.047 86.7307 161.136 104 169.079C98.0235 176.012 94.4439 175.257 87.8076 169.079C79.872 157.345 85.6281 124.138 87.5051 100.251C83.4813 101.128 81.329 101.964 77.6887 104.241H65.5642C65.3712 104.241 65.1886 104.069 65.0823 103.791C54.633 76.4932 58.033 51.9438 72.3241 0.574405C72.4203 0.228725 72.6254 0 72.8477 0Z\"\r\n          fill=\"#F9A626\"\r\n        />\r\n        <path\r\n          d=\"M96.1932 165.089C99.2922 168.097 100.989 168.66 104 169.079C98.0235 176.012 94.4439 175.257 87.8076 169.079C92.0345 171.614 93.5677 169.437 96.1932 165.089Z\"\r\n          fill=\"#C78E35\"\r\n        />\r\n        <path\r\n          d=\"M77.4429 103.932C74.5925 100.302 72.6186 95.6733 71.3975 90.2174C71.2821 89.7021 71.4424 89.1295 71.7453 88.9501C77.561 85.5058 81.1577 84.2709 87.2768 83.3693C87.5764 83.3251 87.8469 83.6857 87.8855 84.2001C88.2004 88.4039 88.0057 93.6542 87.564 99.4903C87.5301 99.9385 87.3237 100.29 87.0638 100.348C83.4224 101.169 81.3121 102.002 77.9756 104.062C77.7964 104.173 77.596 104.127 77.4429 103.932Z\"\r\n          fill=\"#C78E35\"\r\n        />\r\n        <path\r\n          d=\"M344.848 107H354.817C355.249 107 355.527 107.972 355.333 108.79C345.155 151.525 338.939 191.223 343.196 216.801C349.51 212.131 353.166 210.593 359.808 209.44C364.53 209.382 367.138 210.991 371.431 216.502C371.577 216.69 371.678 217.009 371.701 217.368C374.409 258.333 358.731 305.178 376 314.948C370.024 323.475 366.444 322.546 359.808 314.948C351.872 300.516 357.628 259.675 359.505 230.297C355.481 231.375 353.329 232.404 349.689 235.204H337.564C337.371 235.204 337.189 234.993 337.082 234.652C326.633 201.078 330.033 170.885 344.324 107.706C344.42 107.281 344.625 107 344.848 107Z\"\r\n          fill=\"#F9A626\"\r\n        />\r\n        <path\r\n          d=\"M368.193 310.041C371.292 313.74 372.989 314.432 376 314.948C370.024 323.475 366.444 322.546 359.808 314.948C364.035 318.066 365.568 315.388 368.193 310.041Z\"\r\n          fill=\"#C78E35\"\r\n        />\r\n        <path\r\n          d=\"M349.443 234.825C346.593 230.36 344.619 224.667 343.397 217.957C343.282 217.323 343.442 216.619 343.745 216.398C349.561 212.162 353.158 210.643 359.277 209.535C359.576 209.48 359.847 209.924 359.885 210.556C360.2 215.727 360.006 222.184 359.564 229.362C359.53 229.913 359.324 230.345 359.064 230.417C355.422 231.426 353.312 232.45 349.976 234.985C349.796 235.121 349.596 235.065 349.443 234.825Z\"\r\n          fill=\"#C78E35\"\r\n        />\r\n        <path\r\n          d=\"M469.771 58H480.405C480.865 58 481.163 59.1402 480.955 60.0993C470.098 110.223 463.468 156.785 468.009 186.786C474.744 181.308 478.644 179.504 485.728 178.152C490.766 178.084 493.547 179.97 498.126 186.434C498.282 186.655 498.389 187.029 498.415 187.451C501.303 235.499 484.579 290.443 503 301.902C496.625 311.903 492.807 310.813 485.728 301.902C477.263 284.974 483.403 237.072 485.405 202.614C481.113 203.879 478.818 205.086 474.935 208.37H462.002C461.796 208.37 461.601 208.123 461.488 207.722C450.342 168.344 453.969 132.93 469.212 58.8286C469.315 58.3299 469.534 58 469.771 58Z\"\r\n          fill=\"#EF6B93\"\r\n        />\r\n        <path\r\n          d=\"M494.673 296.146C497.978 300.484 499.788 301.297 503 301.902C496.625 311.903 492.807 310.813 485.728 301.902C490.237 305.558 491.872 302.418 494.673 296.146Z\"\r\n          fill=\"#C04A6E\"\r\n        />\r\n        <path\r\n          d=\"M474.672 207.925C471.632 202.688 469.527 196.011 468.224 188.141C468.101 187.398 468.272 186.572 468.595 186.313C474.798 181.345 478.635 179.563 485.162 178.263C485.482 178.199 485.77 178.719 485.811 179.461C486.147 185.525 485.939 193.099 485.468 201.518C485.432 202.164 485.212 202.671 484.935 202.755C481.051 203.938 478.8 205.14 475.241 208.113C475.049 208.273 474.836 208.207 474.672 207.925Z\"\r\n          fill=\"#C04A6E\"\r\n        />\r\n        <path\r\n          d=\"M464.522 89.1217L459.888 93.2042C461.684 97.7479 462.637 101.815 462.79 106.291C457.608 118.73 452.42 125.556 441.069 135.089C438.754 137.034 436.596 139.304 434.99 142.168C431.784 147.889 430.407 152.74 429.198 160.873C429.186 166.112 429.217 169.432 430.584 174.835C431.12 176.954 432.304 178.754 433.896 179.73C443.709 185.748 456.518 186.228 458.872 201.74C454.375 216.967 442.614 231.578 435.064 232.199L430.193 244.074C451.683 242.306 469.49 206.419 459.986 186.842C455.667 180.535 437.147 175.765 436.513 168.045C435.573 159.782 436.214 156.036 438.562 150.303C447.425 142.363 456.82 137.43 459.045 129.177C468.197 113.434 468.997 104.664 464.522 89.1217Z\"\r\n          fill=\"#F9A626\"\r\n        />\r\n        <path\r\n          d=\"M459.045 129.177C461.714 119.282 462.999 112.405 462.79 106.291C457.608 118.73 452.42 125.556 441.069 135.089C438.754 137.034 436.596 139.304 434.99 142.168C431.784 147.889 430.407 152.74 429.198 160.873C431.971 156.7 435.229 153.289 438.562 150.303C447.425 142.363 456.826 137.406 459.045 129.177Z\"\r\n          fill=\"#C78E35\"\r\n        />\r\n        <path\r\n          d=\"M459.986 186.842L458.872 201.74C454.375 216.967 442.614 231.578 435.064 232.199L430.193 244.074C451.683 242.306 469.49 206.419 459.986 186.842Z\"\r\n          fill=\"#C78E35\"\r\n        />\r\n        <path\r\n          d=\"M258.756 56.1217L254.121 60.2042C255.918 64.7479 256.871 68.8151 257.023 73.2907C251.842 85.73 246.653 92.5565 235.302 102.089C232.987 104.034 230.829 106.304 229.224 109.168C226.018 114.889 224.64 119.74 223.432 127.873C223.42 133.112 223.451 136.432 224.818 141.835C225.354 143.954 226.537 145.754 228.129 146.73C237.942 152.748 250.751 153.228 253.106 168.74C248.608 183.967 236.847 198.578 229.297 199.199L224.426 211.074C245.916 209.306 263.723 173.419 254.219 153.842C249.9 147.535 231.381 142.765 230.746 135.045C229.806 126.782 230.447 123.036 232.795 117.303C241.658 109.363 251.053 104.43 253.279 96.1774C262.431 80.4341 263.23 71.6643 258.756 56.1217Z\"\r\n          fill=\"#F9A626\"\r\n        />\r\n        <path\r\n          d=\"M253.279 96.1774C255.947 86.282 257.232 79.4052 257.023 73.2907C251.842 85.73 246.653 92.5565 235.302 102.089C232.987 104.034 230.829 106.304 229.224 109.168C226.018 114.889 224.64 119.74 223.432 127.873C226.205 123.7 229.462 120.289 232.795 117.303C241.658 109.363 251.059 104.406 253.279 96.1774Z\"\r\n          fill=\"#C78E35\"\r\n        />\r\n        <path\r\n          d=\"M254.219 153.842L253.106 168.74C248.608 183.967 236.847 198.578 229.297 199.199L224.426 211.074C245.916 209.306 263.723 173.419 254.219 153.842Z\"\r\n          fill=\"#C78E35\"\r\n        />\r\n        <path\r\n          d=\"M136.756 20.1217L132.18 24.9171C134.05 30.3643 135.069 35.2299 135.293 40.5699C130.301 55.3229 125.215 63.382 114 74.5711C111.712 76.8533 109.587 79.5265 108.025 82.9169C104.906 89.6884 103.603 95.4522 102.522 105.133C102.593 111.381 102.677 115.34 104.131 121.806C104.701 124.341 105.915 126.506 107.525 127.696C117.445 135.028 130.279 135.804 132.882 154.34C128.62 172.429 117.075 189.667 109.525 190.288L104.835 204.373C126.325 202.606 143.587 160.088 133.761 136.591C129.336 129 110.717 123.019 109.959 113.801C108.887 103.932 109.47 99.475 111.731 92.6748C120.479 83.3458 129.808 77.612 131.906 67.8052C140.821 49.1748 141.482 38.7286 136.756 20.1217Z\"\r\n          fill=\"#64688D\"\r\n        />\r\n        <path\r\n          d=\"M131.906 67.8052C134.421 56.0462 135.599 47.8653 135.293 40.5699C130.301 55.3229 125.215 63.382 114 74.5711C111.712 76.8533 109.587 79.5265 108.025 82.9169C104.906 89.6884 103.603 95.4522 102.522 105.133C105.233 100.2 108.441 96.183 111.731 92.6748C120.479 83.3458 129.814 77.5837 131.906 67.8052Z\"\r\n          fill=\"#294069\"\r\n        />\r\n        <path\r\n          d=\"M133.761 136.591L132.882 154.34C128.62 172.429 117.075 189.667 109.525 190.288L104.835 204.373C126.325 202.606 143.587 160.088 133.761 136.591Z\"\r\n          fill=\"#294069\"\r\n        />\r\n        <path\r\n          d=\"M420.233 82H432.639C433.176 82 433.523 83.3674 433.281 84.5175C420.615 144.626 412.88 200.463 418.177 236.44C426.034 229.871 430.585 227.707 438.85 226.087C444.727 226.005 447.972 228.267 453.314 236.019C453.496 236.283 453.621 236.732 453.651 237.237C457.02 294.857 437.509 360.746 459 374.488C451.563 386.481 447.108 385.175 438.85 374.488C428.974 354.189 436.137 296.744 438.473 255.422C433.466 256.939 430.787 258.386 426.257 262.324H411.169C410.929 262.324 410.701 262.028 410.569 261.547C397.565 214.324 401.797 171.857 419.581 82.9937C419.701 82.3957 419.956 82 420.233 82Z\"\r\n          fill=\"#64688D\"\r\n        />\r\n        <path\r\n          d=\"M449.285 367.585C453.141 372.788 455.253 373.762 459 374.488C451.563 386.481 447.108 385.175 438.85 374.488C444.11 378.873 446.018 375.107 449.285 367.585Z\"\r\n          fill=\"#294069\"\r\n        />\r\n        <path\r\n          d=\"M425.951 261.791C422.404 255.511 419.948 247.504 418.428 238.066C418.284 237.174 418.484 236.184 418.861 235.873C426.098 229.915 430.574 227.779 438.189 226.219C438.562 226.143 438.898 226.767 438.946 227.656C439.338 234.929 439.096 244.011 438.546 254.107C438.504 254.882 438.247 255.49 437.924 255.591C433.392 257.01 430.766 258.451 426.614 262.016C426.391 262.208 426.142 262.128 425.951 261.791Z\"\r\n          fill=\"#294069\"\r\n        />\r\n        <path\r\n          d=\"M166.233 -21H178.639C179.176 -21 179.523 -19.9415 179.281 -19.0512C166.615 27.4779 158.88 70.7007 164.177 98.5502C172.034 93.4652 176.585 91.7901 184.85 90.5357C190.727 90.4724 193.972 92.2236 199.314 98.2239C199.496 98.4285 199.621 98.7758 199.651 99.1672C203.02 143.77 183.509 194.774 205 205.411C197.563 214.695 193.108 213.683 184.85 205.411C174.974 189.697 182.137 145.23 184.473 113.244C179.466 114.418 176.787 115.538 172.257 118.587H157.169C156.929 118.587 156.701 118.357 156.569 117.985C143.565 81.4305 147.797 48.5569 165.581 -20.2308C165.701 -20.6937 165.956 -21 166.233 -21Z\"\r\n          fill=\"#97AC83\"\r\n        />\r\n        <path\r\n          d=\"M195.285 200.068C199.141 204.095 201.253 204.849 205 205.411C197.563 214.695 193.108 213.683 184.85 205.411C190.11 208.805 192.018 205.89 195.285 200.068Z\"\r\n          fill=\"#7A8C69\"\r\n        />\r\n        <path\r\n          d=\"M171.951 118.174C168.404 113.312 165.948 107.114 164.428 99.8084C164.284 99.1183 164.484 98.3515 164.861 98.1113C172.098 93.4991 176.574 91.8455 184.189 90.6382C184.562 90.5791 184.898 91.0619 184.946 91.7506C185.338 97.3799 185.096 104.411 184.546 112.226C184.504 112.826 184.247 113.296 183.924 113.374C179.392 114.473 176.766 115.588 172.614 118.348C172.391 118.496 172.142 118.435 171.951 118.174Z\"\r\n          fill=\"#7A8C69\"\r\n        />\r\n        <path\r\n          d=\"M145.186 3.12167L149.789 7.58301C147.953 12.6068 146.965 17.0982 146.775 22.0332C151.855 35.7019 156.99 43.1833 168.268 53.5962C170.569 55.7202 172.709 58.2044 174.292 61.3483C177.452 67.6272 178.79 72.9634 179.93 81.9187C179.898 87.6941 179.839 91.3531 178.426 97.3214C177.872 99.6619 176.672 101.656 175.071 102.745C165.201 109.461 152.378 110.099 149.892 127.217C154.264 143.965 165.91 159.972 173.461 160.593L178.235 173.642C156.745 171.875 139.228 132.464 148.903 110.805C153.278 103.815 171.85 98.402 172.551 89.8857C173.561 80.7696 172.951 76.6456 170.649 70.3454C161.847 61.6674 152.487 56.309 150.33 47.2305C141.304 29.9532 140.577 20.2925 145.186 3.12167Z\"\r\n          fill=\"#EF6B93\"\r\n        />\r\n        <path\r\n          d=\"M150.33 47.2305C147.742 36.3449 146.514 28.7751 146.775 22.0332C151.855 35.7019 156.99 43.1833 168.268 53.5962C170.569 55.7202 172.709 58.2044 174.292 61.3483C177.452 67.6272 178.79 72.9634 179.93 81.9187C177.191 77.3419 173.959 73.6089 170.649 70.3454C161.847 61.6674 152.481 56.2828 150.33 47.2305Z\"\r\n          fill=\"#C04A6E\"\r\n        />\r\n        <path\r\n          d=\"M148.903 110.805L149.892 127.217C154.264 143.965 165.91 159.972 173.461 160.593L178.235 173.642C156.745 171.875 139.228 132.464 148.903 110.805Z\"\r\n          fill=\"#C04A6E\"\r\n        />\r\n        <path\r\n          d=\"M352.186 89.1217L356.748 94.0793C354.861 99.7321 353.827 104.779 353.587 110.316C358.535 125.595 363.599 133.935 374.783 145.501C377.064 147.86 379.181 150.625 380.734 154.135C383.833 161.146 385.119 167.117 386.171 177.15C386.081 183.627 385.986 187.732 384.512 194.44C383.934 197.07 382.713 199.318 381.099 200.556C371.154 208.187 358.315 209.03 355.655 228.255C359.864 246.994 371.359 264.831 378.91 265.452L383.558 280.039C362.068 278.272 344.93 234.246 354.829 209.857C359.278 201.974 377.92 195.717 378.706 186.159C379.808 175.925 379.238 171.305 376.998 164.262C368.275 154.617 358.962 148.701 356.893 138.541C348.032 119.253 347.402 108.426 352.186 89.1217Z\"\r\n          fill=\"#EF6B93\"\r\n        />\r\n        <path\r\n          d=\"M356.893 138.541C354.412 126.358 353.259 117.88 353.587 110.316C358.535 125.595 363.599 133.935 374.783 145.501C377.064 147.86 379.181 150.625 380.734 154.135C383.833 161.146 385.119 167.117 386.171 177.15C383.475 172.044 380.278 167.889 376.998 164.262C368.275 154.617 358.956 148.672 356.893 138.541Z\"\r\n          fill=\"#C04A6E\"\r\n        />\r\n        <path\r\n          d=\"M354.829 209.857L355.655 228.255C359.864 246.994 371.359 264.831 378.91 265.452L383.558 280.039C362.068 278.272 344.93 234.246 354.829 209.857Z\"\r\n          fill=\"#C04A6E\"\r\n        />\r\n        <path\r\n          d=\"M56.8143 -62.3091C57.5834 -64.3116 60.4166 -64.3116 61.1857 -62.3091C61.8901 -60.4748 64.4044 -60.2718 65.394 -61.9693C66.4744 -63.8226 69.2708 -63.3681 69.7087 -61.2681C70.1098 -59.3446 72.559 -58.7409 73.8081 -60.2577C75.1717 -61.9136 77.8591 -61.0165 77.9545 -58.8735C78.0418 -56.9105 80.3624 -55.9218 81.8387 -57.2186C83.4503 -58.6343 85.9589 -57.3177 85.7093 -55.1871C85.4806 -53.2356 87.6126 -51.8874 89.2777 -52.9306C91.0955 -54.0694 93.3605 -52.3675 92.7723 -50.3045C92.2336 -48.4149 94.1217 -46.7422 95.9326 -47.5048C97.9096 -48.3373 99.8722 -46.2941 98.9607 -44.3522C98.1258 -42.5735 99.7211 -40.6196 101.631 -41.0818C103.716 -41.5864 105.325 -39.2547 104.114 -37.4842C103.005 -35.8625 104.266 -33.678 106.225 -33.8278C108.364 -33.9915 109.579 -31.4319 108.099 -29.8786C106.744 -28.4558 107.638 -26.0972 109.596 -25.9309C111.734 -25.7493 112.522 -23.028 110.812 -21.7322C109.247 -20.5452 109.751 -18.0737 111.657 -17.5954C113.738 -17.0733 114.079 -14.2608 112.184 -13.256C110.448 -12.3355 110.549 -9.81511 112.354 -9.03735C114.324 -8.18825 114.21 -5.3574 112.178 -4.66957C110.317 -4.03953 110.013 -1.53545 111.669 -0.478302C113.477 0.675797 112.91 3.45168 110.795 3.80467C108.856 4.12801 108.155 6.55089 109.62 7.86003C111.22 9.28925 110.215 11.9383 108.07 11.9473C106.105 11.9555 105.024 14.2345 106.26 15.7617C107.61 17.429 106.193 19.8826 104.074 19.5474C102.133 19.2403 100.7 21.3163 101.676 23.0221C102.741 24.8843 100.949 27.0788 98.9112 26.4081C97.0448 25.7937 95.2974 27.6129 95.9865 29.4531C96.7387 31.462 94.618 33.3407 92.7145 32.3518C90.9708 31.446 88.9542 32.9613 89.3392 34.8881C89.7594 36.9917 87.3649 38.5059 85.6446 37.2245C84.0688 36.0507 81.8353 37.2229 81.9061 39.1865C81.9835 41.3303 79.3771 42.4408 77.8846 40.9C76.5175 39.4886 74.1249 40.2874 73.8798 42.2369C73.6123 44.3653 70.8615 45.0434 69.6356 43.2831C68.5126 41.6707 66.0228 42.0753 65.4682 43.9603C64.8627 46.0182 62.0388 46.2462 61.111 44.3121C60.2612 42.5404 57.7388 42.5404 56.889 44.3121C55.9612 46.2462 53.1373 46.0182 52.5318 43.9603C51.9772 42.0753 49.4874 41.6707 48.3645 43.2831C47.1385 45.0433 44.3877 44.3653 44.1202 42.237C43.8751 40.2874 41.4825 39.4886 40.1154 40.9C38.6229 42.4408 36.0165 41.3303 36.0939 39.1865C36.1647 37.2229 33.9312 36.0507 32.3554 37.2245C30.6351 38.5059 28.2406 36.9917 28.6608 34.8881C29.0458 32.9613 27.0292 31.446 25.2855 32.3518C23.382 33.3407 21.2613 31.462 22.0136 29.4531C22.7026 27.6129 20.9552 25.7937 19.0888 26.4081C17.0513 27.0788 15.2595 24.8843 16.3242 23.0221C17.2995 21.3163 15.8666 19.2403 13.9258 19.5474C11.807 19.8826 10.3905 17.429 11.7402 15.7617C12.9765 14.2345 11.8951 11.9555 9.93019 11.9473C7.78509 11.9383 6.78044 9.28925 8.3801 7.86003C9.84538 6.55089 9.14358 4.12801 7.20545 3.80467C5.08957 3.45168 4.52287 0.675797 6.33108 -0.478302C7.98738 -1.53545 7.68333 -4.03953 5.82217 -4.66957C3.79031 -5.3574 3.67623 -8.18825 5.64615 -9.03735C7.45058 -9.81511 7.55215 -12.3355 5.81615 -13.256C3.92094 -14.2608 4.26244 -17.0733 6.34306 -17.5954C8.24888 -18.0737 8.75344 -20.5452 7.18758 -21.7322C5.4781 -23.028 6.26633 -25.7493 8.40376 -25.9309C10.3616 -26.0972 11.2561 -28.4558 9.90092 -29.8786C8.42144 -31.4319 9.63599 -33.9915 11.7749 -33.8278C13.7341 -33.678 14.9953 -35.8625 13.8859 -37.4842C12.6747 -39.2547 14.2842 -41.5864 16.3691 -41.0818C18.2789 -40.6196 19.8742 -42.5735 19.0393 -44.3522C18.1278 -46.2941 20.0904 -48.3373 22.0674 -47.5048C23.8783 -46.7422 25.7664 -48.4149 25.2277 -50.3045C24.6395 -52.3675 26.9045 -54.0694 28.7223 -52.9306C30.3874 -51.8874 32.5194 -53.2356 32.2907 -55.1871C32.0411 -57.3177 34.5497 -58.6343 36.1613 -57.2186C37.6376 -55.9218 39.9582 -56.9105 40.0455 -58.8735C40.1409 -61.0165 42.8283 -61.9136 44.1919 -60.2577C45.441 -58.7409 47.8902 -59.3446 48.2913 -61.2681C48.7292 -63.3681 51.5256 -63.8226 52.606 -61.9693C53.5956 -60.2718 56.1099 -60.4748 56.8143 -62.3091Z\"\r\n          fill=\"#64688D\"\r\n        />\r\n        <path\r\n          d=\"M50.0637 -52.773C50.4316 -54.5312 52.7735 -54.9101 53.677 -53.3577C54.5046 -51.9357 56.6101 -52.1041 57.2011 -53.6397C57.8462 -55.316 60.2186 -55.3144 60.8614 -53.6371C61.4502 -52.1008 63.5554 -51.9293 64.3851 -53.3502C65.2908 -54.9013 67.6321 -54.5191 67.9976 -52.7605C68.3323 -51.1496 70.3828 -50.6427 71.4296 -51.912C72.5724 -53.2978 74.8221 -52.545 74.9007 -50.7505C74.9727 -49.1067 76.9153 -48.2775 78.1522 -49.3625C79.5025 -50.547 81.6023 -49.4431 81.3921 -47.6592C81.1994 -46.0252 82.9839 -44.895 84.3788 -45.7676C85.9016 -46.7201 87.7971 -45.2937 87.3034 -43.5666C86.8512 -41.9847 88.4312 -40.5829 89.948 -41.2204C91.6039 -41.9164 93.2461 -40.2043 92.4818 -38.5788C91.7817 -37.0899 93.1163 -35.4528 94.7158 -35.8388C96.4619 -36.2601 97.8082 -34.3067 96.793 -32.8249C95.8631 -31.4676 96.9179 -29.6376 98.5585 -29.762C100.35 -29.8978 101.365 -27.7538 100.125 -26.454C98.9897 -25.2634 99.7373 -23.2879 101.377 -23.1475C103.166 -22.9942 103.825 -20.7151 102.393 -19.631C101.081 -18.638 101.502 -16.5682 103.097 -16.1666C104.839 -15.7282 105.124 -13.373 103.536 -12.5327C102.082 -11.763 102.165 -9.65242 103.676 -9.0001C105.325 -8.28796 105.228 -5.91762 103.526 -5.34286C101.967 -4.81638 101.711 -2.71977 103.097 -1.8336C104.611 -0.86616 104.135 1.4579 102.363 1.75223C100.74 2.02184 100.15 4.05023 101.377 5.1473C102.715 6.34499 101.873 8.56256 100.076 8.56885C98.431 8.57461 97.5242 10.4822 98.5585 11.7618C99.6877 13.1587 98.5001 15.2124 96.7261 14.9304C95.1012 14.6722 93.9001 16.4097 94.7158 17.8386C95.6063 19.3985 94.1046 21.2351 92.3989 20.6722C90.8364 20.1567 89.3722 21.679 89.9481 23.2202C90.5768 24.9028 88.8 26.4747 87.2066 25.6455C85.7471 24.886 84.0576 26.1537 84.3788 27.7674C84.7295 29.529 82.7235 30.7956 81.2838 29.7215C79.965 28.7377 78.094 29.718 78.1522 31.3623C78.2158 33.1574 76.0326 34.0858 74.7838 32.7947C73.6399 31.6121 71.636 32.2795 71.4296 33.9119C71.2044 35.6939 68.9006 36.26 67.8751 34.7853C66.9357 33.4346 64.8506 33.7719 64.3851 35.35C63.8769 37.0728 61.5122 37.2621 60.7365 35.642C60.0259 34.158 57.9137 34.1565 57.2011 35.6395C56.4232 37.2585 54.0587 37.066 53.5529 35.3424C53.0896 33.7637 51.005 33.4234 50.0637 34.7729C49.0361 36.2461 46.7331 35.6768 46.5104 33.8944C46.3064 32.2618 44.3033 31.5915 43.1578 32.7726C41.9072 34.0619 39.7253 33.1305 39.7914 31.3355C39.8519 29.6913 37.9823 28.7084 36.6621 29.6903C35.2209 30.7624 33.2167 29.493 33.5698 27.7319C33.8933 26.1187 32.2056 24.8486 30.745 25.6061C29.1505 26.433 27.3759 24.8586 28.0069 23.1769C28.585 21.6365 27.1229 20.1121 25.5597 20.6255C23.8532 21.186 22.3541 19.3473 23.2467 17.7886C24.0644 16.3608 22.8658 14.6217 21.2405 14.8776C19.4661 15.1571 18.2814 13.1018 19.4125 11.7064C20.4486 10.4283 19.5445 8.51944 17.8992 8.51138C16.103 8.50259 15.2633 6.28383 16.6036 5.08802C17.8313 3.99267 17.2451 1.96346 15.6224 1.69158C13.8509 1.39477 13.378 -0.929954 14.8927 -1.89528C16.2803 -2.77951 16.0271 -4.87648 14.4691 -5.40513C12.7681 -5.98228 12.6742 -8.35275 14.3242 -9.06259C15.8356 -9.71279 15.9222 -11.8232 14.4691 -12.595C12.8827 -13.4375 13.1703 -15.7923 14.9128 -16.2283C16.5089 -16.6276 16.9329 -18.6968 15.6224 -19.6917C14.1917 -20.7778 14.8533 -23.056 16.6432 -23.2068C18.2827 -23.3449 19.0331 -25.3193 17.8992 -26.5115C16.6612 -27.813 17.6797 -29.9556 19.4706 -29.8173C21.1111 -29.6906 22.1684 -31.5191 21.2404 -32.8778C20.2273 -34.361 21.5763 -36.3124 23.3218 -35.8887C24.9207 -35.5005 26.2577 -37.1357 25.5597 -38.6256C24.7976 -40.2522 26.4422 -41.9619 28.0971 -41.2637C29.613 -40.6241 31.195 -42.0236 30.745 -43.6062C30.2537 -45.3339 32.1512 -46.7577 33.6727 -45.803C35.0664 -44.9285 36.8524 -46.0562 36.6621 -47.6905C36.4543 -49.4746 38.5557 -50.5756 39.9043 -49.3892C41.1397 -48.3025 43.0834 -49.129 43.1577 -50.7727C43.2388 -52.5671 45.4896 -53.3167 46.6305 -51.9294C47.6755 -50.6585 49.7267 -51.1626 50.0637 -52.773Z\"\r\n          fill=\"#294069\"\r\n        />\r\n        <path\r\n          d=\"M56.7782 -45.0684C57.2711 -46.4351 59.1896 -46.4745 59.7383 -45.1292C60.2408 -43.8969 61.9462 -43.7944 62.5927 -44.9577C63.2985 -46.2277 65.1985 -45.9588 65.5242 -44.5429C65.8226 -43.2459 67.4895 -42.8712 68.3142 -43.9157C69.2146 -45.056 71.0468 -44.4859 71.1412 -43.036C71.2277 -41.708 72.8129 -41.0708 73.7945 -41.9695C74.8661 -42.9506 76.5832 -42.0939 76.4438 -40.6477C76.3161 -39.323 77.7785 -38.4397 78.8916 -39.1693C80.1067 -39.9658 81.6641 -38.8448 81.2945 -37.4397C80.956 -36.1526 82.2578 -35.0462 83.4735 -35.5878C84.8006 -36.179 86.1581 -34.8227 85.5679 -33.4951C85.0273 -32.279 86.1348 -30.978 87.4215 -31.3176C88.8264 -31.6883 89.9486 -30.1318 89.1531 -28.9161C88.4244 -27.8024 89.3089 -26.3407 90.6335 -26.4695C92.0796 -26.61 92.9376 -24.8937 91.9574 -23.8212C91.0595 -22.8389 91.6981 -21.2542 93.0262 -21.1688C94.4761 -21.0756 95.0477 -19.2438 93.9081 -18.3426C92.8643 -17.517 93.2403 -15.8504 94.5375 -15.5531C95.9537 -15.2285 96.2241 -13.3287 94.9547 -12.6219C93.792 -11.9745 93.8958 -10.2691 95.1285 -9.76758C96.4743 -9.22001 96.4364 -7.30149 95.0701 -6.80744C93.8186 -6.35491 93.6475 -4.65501 94.7838 -3.9622C96.0243 -3.20585 95.6792 -1.31824 94.2513 -1.04977C92.9434 -0.803853 92.5019 0.84659 93.5123 1.7127C94.6154 2.65825 93.972 4.46605 92.5195 4.502C91.1891 4.53492 90.4885 6.09317 91.3469 7.11015C92.2841 8.22041 91.359 9.90158 89.9196 9.70407C88.6011 9.52315 87.6596 10.9488 88.3438 12.0904C89.0907 13.3366 87.9079 14.8476 86.5188 14.4217C85.2464 14.0316 84.0885 15.2879 84.5807 16.5243C85.118 17.8742 83.7081 19.1759 82.4054 18.5328C81.212 17.9436 79.8676 18.9978 80.155 20.2972C80.4689 21.7158 78.8685 22.7745 77.6857 21.9307C76.6023 21.1578 75.1062 21.9827 75.1815 23.3114C75.2637 24.7619 73.5142 25.5502 72.4821 24.5276C71.5367 23.5909 69.9276 24.1651 69.7888 25.4887C69.6373 26.9336 67.784 27.431 66.9293 26.2561C66.1464 25.1799 64.4661 25.4885 64.1167 26.7727C63.7354 28.1747 61.8263 28.3683 61.1712 27.0715C60.5711 25.8836 58.8629 25.9187 58.3121 27.1302C57.7108 28.4529 55.7954 28.3378 55.3568 26.9527C54.955 25.6839 53.2634 25.4446 52.5254 26.5521C51.7197 27.7611 49.8475 27.3402 49.6367 25.9027C49.4437 24.5859 47.8124 24.0783 46.9063 25.0531C45.9171 26.1172 44.1366 25.4015 44.1592 23.9488C44.1799 22.6181 42.6511 21.8554 41.6004 22.6721C40.4533 23.5638 38.8107 22.5718 39.066 21.1415C39.2999 19.8313 37.9133 18.8332 36.7451 19.4709C35.4699 20.167 34.0077 18.9243 34.4891 17.5535C34.9301 16.2979 33.7216 15.0903 32.4663 15.5323C31.0959 16.0148 29.852 14.5537 30.5471 13.2779C31.1838 12.1092 30.1846 10.7234 28.8746 10.9583C27.4445 11.2148 26.4512 9.57302 27.3419 8.42521C28.1578 7.37382 27.3939 5.84567 26.0632 5.86742C24.6105 5.89116 23.8933 4.11132 24.9567 3.12125C25.9307 2.21437 25.4218 0.583455 24.1048 0.391468C22.6671 0.181875 22.2448 -1.68996 23.4532 -2.49663C24.56 -3.23553 24.3193 -4.92697 23.0502 -5.32771C21.6648 -5.76522 21.5481 -7.68057 22.8703 -8.28295C24.0813 -8.83473 24.115 -10.5429 22.9267 -11.142C21.6293 -11.7961 21.8215 -13.7053 23.2231 -14.0878C24.507 -14.4382 24.8143 -16.1188 23.7374 -16.9008C22.5618 -17.7545 23.0577 -19.6083 24.5026 -19.761C25.826 -19.9008 26.3989 -21.5104 25.4615 -22.455C24.438 -23.4863 25.2248 -25.2364 26.6755 -25.1554C28.0042 -25.0811 28.8279 -26.578 28.0541 -27.6607C27.2093 -28.8428 28.2667 -30.4441 29.6856 -30.1314C30.9852 -29.8449 32.0383 -31.1903 31.4482 -32.3831C30.804 -33.6854 32.1046 -35.0963 33.4549 -34.5601C34.6918 -34.0689 35.9471 -35.2278 35.556 -36.4999C35.129 -37.8887 36.639 -39.0727 37.8858 -38.3268C39.0279 -37.6435 40.4528 -38.5861 40.2708 -39.9045C40.0722 -41.3437 41.7526 -42.2702 42.8636 -41.3339C43.8813 -40.4763 45.439 -41.1782 45.4708 -42.5086C45.5056 -43.9611 47.3129 -44.606 48.2593 -43.5037C49.1262 -42.4939 50.7763 -42.9368 51.0212 -44.2449C51.2885 -45.673 53.1758 -46.0197 53.9332 -44.7798C54.6269 -43.644 56.3267 -43.8165 56.7782 -45.0684Z\"\r\n          fill=\"#64688D\"\r\n        />\r\n        <path\r\n          d=\"M47.5761 -35.8445C47.5823 -37.0174 49.0314 -37.5651 49.8119 -36.6895C50.5269 -35.8875 51.8521 -36.2698 52.0301 -37.3293C52.2245 -38.4861 53.7427 -38.7942 54.3726 -37.8048C54.9496 -36.8985 56.3191 -37.0632 56.6647 -38.0804C57.0421 -39.191 58.5901 -39.2517 59.0531 -38.174C59.4773 -37.1868 60.8554 -37.1297 61.3598 -38.0784C61.9104 -39.1141 63.4481 -38.9256 63.7323 -37.7876C63.9926 -36.7452 65.3437 -36.4678 65.9937 -37.3232C66.7034 -38.2572 68.1909 -37.8245 68.2888 -36.6556C68.3786 -35.585 69.6677 -35.0944 70.4465 -35.8345C71.2968 -36.6425 72.6956 -35.9768 72.6048 -34.8074C72.5216 -33.7362 73.7154 -33.0452 74.6028 -33.6508C75.5717 -34.312 76.8456 -33.4305 76.5684 -32.2908C76.3145 -31.2468 77.3819 -30.3732 78.355 -30.8287C79.4174 -31.3258 80.5335 -30.2514 80.077 -29.1709C79.6589 -28.1812 80.5724 -27.1477 81.606 -27.4412C82.7343 -27.7615 83.6636 -26.5219 83.0397 -25.5287C82.4683 -24.6188 83.2041 -23.4522 84.2714 -23.576C85.4365 -23.7112 86.1549 -22.3387 85.3798 -21.4583C84.6698 -20.6519 85.209 -19.3824 86.2823 -19.3334C87.454 -19.2799 87.9429 -17.8099 87.0366 -17.0653C86.2064 -16.3832 86.535 -15.0437 87.5865 -14.8231C88.7345 -14.5824 88.9813 -13.053 87.9673 -12.4634C87.0385 -11.9234 87.1479 -10.5484 88.1504 -10.1621C89.2449 -9.74028 89.2432 -8.19111 88.1477 -7.77182C87.1443 -7.38775 87.0318 -6.01305 87.9594 -5.47089C88.972 -4.879 88.7218 -3.35017 87.5733 -3.11203C86.5212 -2.8939 86.1896 -1.55506 87.0182 -0.87112C87.9228 -0.124452 87.4306 1.34443 86.2587 1.39525C85.1853 1.44181 84.6432 2.71011 85.3514 3.51811C86.1245 4.40022 85.403 5.77113 84.2382 5.63331C83.1712 5.50707 82.4327 6.672 83.0021 7.58313C83.6237 8.57784 82.6917 9.81525 81.564 9.49237C80.5311 9.19661 79.6153 10.228 80.0312 11.2187C80.4852 12.3002 79.3667 13.3721 78.3054 12.8725C77.3333 12.4149 76.2639 13.286 76.5155 14.3305C76.7901 15.4709 75.5142 16.3495 74.5468 15.6861C73.6607 15.0785 72.4654 15.7668 72.5462 16.8382C72.6343 18.0078 71.234 18.6703 70.3856 17.8604C69.6084 17.1185 68.3182 17.6061 68.226 18.6766C68.1254 19.8452 66.6369 20.2745 65.9294 19.339C65.2813 18.482 63.9296 18.7564 63.6669 19.7982C63.3801 20.9356 61.842 21.1205 61.2938 20.0836C60.7915 19.1338 59.4133 19.1878 58.9869 20.174C58.5214 21.2506 56.9735 21.1865 56.5987 20.075C56.2553 19.0569 54.8863 18.8891 54.3072 19.7941C53.675 20.7821 52.1575 20.4705 51.9658 19.3134C51.7902 18.2534 50.4658 17.8681 49.7491 18.6685C48.9666 19.5423 47.5187 18.9914 47.5151 17.8184C47.5118 16.744 46.2664 16.1513 45.4305 16.8263C44.518 17.5633 43.1773 16.7872 43.3619 15.6289C43.531 14.5679 42.3967 13.783 41.4634 14.3153C40.4445 14.8963 39.2456 13.9152 39.6136 12.8015C39.9507 11.7813 38.9571 10.8247 37.9504 11.2003C36.8515 11.6104 35.8255 10.4497 36.3675 9.40941C36.8638 8.45654 36.0365 7.35294 34.9827 7.56223C33.8322 7.79072 33.0057 6.48043 33.7074 5.54057C34.3503 4.67966 33.7107 3.45763 32.6369 3.49516C31.4647 3.53614 30.8591 2.11025 31.7025 1.29512C32.4751 0.548477 32.0398 -0.760327 30.9739 -0.895522C29.8103 -1.04312 29.4413 -2.54769 30.4045 -3.21696C31.2869 -3.83 31.0672 -5.19169 30.0368 -5.49611C28.9119 -5.82845 28.789 -7.37274 29.8472 -7.87882C30.8164 -8.34239 30.818 -9.72168 29.8498 -10.1874C28.7928 -10.6959 28.9192 -12.2399 30.0448 -12.5697C31.0759 -12.8718 31.2987 -14.233 30.4177 -14.848C29.456 -15.5195 29.8284 -17.0232 30.9924 -17.1682C32.0586 -17.3009 32.4968 -18.6088 31.7259 -19.3572C30.8844 -20.1742 31.4932 -21.5987 32.6653 -21.5551C33.739 -21.5151 34.3814 -22.7357 33.7405 -23.598C33.0409 -24.5395 33.8704 -25.8479 35.0203 -25.6168C36.0737 -25.4051 36.9035 -26.5068 36.4093 -27.4608C35.8698 -28.5023 36.8984 -29.6607 37.9964 -29.2482C39.0021 -28.8702 39.998 -29.8246 39.6632 -30.8455C39.2977 -31.9601 40.4988 -32.9385 41.5164 -32.3551C42.4485 -31.8207 43.5845 -32.603 43.4178 -33.6644C43.2359 -34.8232 44.5784 -35.5962 45.4892 -34.8572C46.3235 -34.1802 47.5703 -34.7701 47.5761 -35.8445Z\"\r\n          fill=\"#294069\"\r\n        />\r\n        <path\r\n          d=\"M47.942 -26.3931C47.8111 -27.2113 48.7579 -27.7601 49.4029 -27.2399C49.9937 -26.7633 50.8733 -27.1825 50.8752 -27.9416C50.8773 -28.7702 51.8999 -29.1601 52.4531 -28.5431C52.9597 -27.9779 53.8952 -28.2506 54.0189 -28.9995C54.1538 -29.8171 55.2257 -30.0379 55.6728 -29.3401C56.0822 -28.701 57.0493 -28.8201 57.2915 -29.5395C57.5559 -30.3248 58.6493 -30.3708 58.9786 -29.6104C59.2803 -28.9138 60.254 -28.8763 60.6084 -29.5475C60.9953 -30.2803 62.082 -30.1502 62.285 -29.3468C62.471 -28.6109 63.4261 -28.4176 63.8836 -29.0233C64.383 -29.6845 65.4348 -29.3818 65.5063 -28.5563C65.5719 -27.8001 66.4836 -27.4561 67.0323 -27.9805C67.6314 -28.5531 68.6209 -28.0856 68.5591 -27.2593C68.5025 -26.5023 69.3472 -26.0166 69.973 -26.4462C70.6561 -26.9152 71.5579 -26.2951 71.3643 -25.4893C71.187 -24.7513 71.9429 -24.1363 72.6294 -24.46C73.379 -24.8134 74.1696 -24.0566 73.8493 -23.2923C73.5559 -22.5923 74.2033 -21.864 74.9329 -22.0734C75.7294 -22.302 76.3884 -21.4282 75.9496 -20.7252C75.5477 -20.0813 76.07 -19.2586 76.8237 -19.3482C77.6465 -19.446 78.1568 -18.4778 77.611 -17.8544C77.111 -17.2832 77.4945 -16.3875 78.2528 -16.355C79.0807 -16.3196 79.4291 -15.2821 78.7903 -14.7542C78.2052 -14.2707 78.44 -13.325 79.1833 -13.1713C79.9948 -13.0035 80.1722 -11.9236 79.4571 -11.505C78.802 -11.1216 78.882 -10.1505 79.5911 -9.87957C80.3651 -9.5838 80.367 -8.48937 79.594 -8.19095C78.8859 -7.91761 78.8091 -6.94621 79.4655 -6.56506C80.1821 -6.14895 80.0084 -5.06839 79.1975 -4.89784C78.4547 -4.74162 78.2231 -3.79512 78.8099 -3.31361C79.4505 -2.78794 79.1057 -1.74924 78.2779 -1.71098C77.5197 -1.67593 77.1393 -0.778834 77.6412 -0.209436C78.1891 0.412184 77.6822 1.38212 76.859 1.2871C76.105 1.20007 75.5856 2.02453 75.9897 2.66707C76.4308 3.36854 75.7748 4.24459 74.9776 4.01876C74.2473 3.81189 73.6023 4.54236 73.8981 5.2414C74.221 6.00455 73.433 6.76404 72.6823 6.41323C71.9946 6.0919 71.2409 6.70946 71.4207 7.44689C71.617 8.25195 70.7174 8.8752 70.0326 8.40851C69.4054 7.98103 68.5624 8.46968 68.6216 9.22641C68.6862 10.0525 67.6983 10.5234 67.0972 9.95292C66.5467 9.43036 65.6362 9.77745 65.5733 10.5339C65.5045 11.3597 64.4538 11.666 63.9521 11.0065C63.4926 10.4024 62.5382 10.5989 62.3547 11.3354C62.1544 12.1395 61.0681 12.2733 60.6787 11.5418C60.322 10.8718 59.3485 10.9127 59.0492 11.6103C58.7225 12.3718 57.6289 12.3296 57.3618 11.5452C57.1172 10.8266 56.1497 10.7109 55.7424 11.3514C55.2978 12.0506 54.2251 11.8336 54.0874 11.0164C53.9612 10.268 53.0248 9.99847 52.52 10.5654C51.969 11.1842 50.945 10.7979 50.9401 9.96927C50.9356 9.21025 50.0546 8.79403 49.4654 9.27261C48.8222 9.79509 47.8735 9.2495 48.0016 8.43081C48.1189 7.68089 47.316 7.12873 46.6577 7.50661C45.9391 7.91916 45.0902 7.22844 45.3479 6.4409C45.584 5.71951 44.8801 5.04571 44.1697 5.31311C43.3942 5.60502 42.667 4.78707 43.0478 4.05107C43.3966 3.3769 42.8099 2.59892 42.0658 2.74889C41.2535 2.91262 40.6669 1.98862 41.1608 1.32323C41.6132 0.713743 41.1589 -0.148288 40.4004 -0.11961C39.5724 -0.0883035 39.1416 -1.09442 39.7359 -1.67197C40.2802 -2.201 39.97 -3.12475 39.2167 -3.21811C38.3944 -3.32004 38.1307 -4.38222 38.8098 -4.85697C39.4319 -5.29184 39.274 -6.25337 38.5454 -6.46636C37.7501 -6.69888 37.6602 -7.78961 38.4067 -8.14927C39.0905 -8.47871 39.0888 -9.45313 38.4039 -9.78023C37.6561 -10.1373 37.7423 -11.2284 38.5369 -11.4636C39.2647 -11.6791 39.4194 -12.6412 38.7958 -13.0739C38.115 -13.5463 38.3751 -14.6094 39.1971 -14.7141C39.95 -14.8101 40.257 -15.7349 39.7109 -16.262C39.1147 -16.8376 39.542 -17.8451 40.3701 -17.8167C41.1287 -17.7906 41.5801 -18.6542 41.1256 -19.2621C40.6294 -19.9258 41.2128 -20.8518 42.0257 -20.6909C42.7702 -20.5434 43.3543 -21.3234 43.0032 -21.9964C42.6199 -22.7311 43.3443 -23.5515 44.1208 -23.2623C44.8321 -22.9973 45.5337 -23.6735 45.2951 -24.3941C45.0347 -25.1807 45.8812 -25.8744 46.6013 -25.4643C47.2609 -25.0886 48.0619 -25.6436 47.942 -26.3931Z\"\r\n          fill=\"#64688D\"\r\n        />\r\n        <path\r\n          d=\"M56.4128 -23.0611C56.5415 -23.6213 57.2931 -23.728 57.5725 -23.2256C57.8285 -22.7655 58.5032 -22.8063 58.7018 -23.2939C58.9187 -23.8262 59.6777 -23.8109 59.8729 -23.2703C60.0517 -22.7751 60.7242 -22.7071 60.9985 -23.1565C61.298 -23.6472 62.0447 -23.5103 62.1507 -22.9454C62.2478 -22.4279 62.9006 -22.2529 63.2435 -22.6525C63.6178 -23.0888 64.3329 -22.8339 64.3468 -22.2593C64.3596 -21.7329 64.976 -21.4555 65.3785 -21.7949C65.8179 -22.1655 66.4829 -21.7992 66.4045 -21.2298C66.3327 -20.7082 66.8966 -20.3355 67.3483 -20.606C67.8415 -20.9013 68.4391 -20.433 68.2704 -19.8835C68.1158 -19.3802 68.6126 -18.9219 69.1019 -19.1164C69.636 -19.3288 70.1508 -18.7708 69.8961 -18.2554C69.6628 -17.7834 70.0797 -17.2513 70.5938 -17.3648C71.1551 -17.4888 71.5737 -16.8554 71.2396 -16.3876C70.9337 -15.9591 71.2598 -15.3671 71.7854 -15.3966C72.3593 -15.4289 72.6709 -14.7366 72.2662 -14.3285C71.8954 -13.9546 72.1223 -13.3179 72.6459 -13.2628C73.2176 -13.2026 73.414 -12.4693 72.9491 -12.1313C72.5231 -11.8218 72.645 -11.1569 73.153 -11.0185C73.7076 -10.8674 73.7839 -10.1121 73.2707 -9.85311C72.8006 -9.61589 72.8142 -8.94011 73.2934 -8.72199C73.8166 -8.48387 73.7708 -7.72608 73.2227 -7.55278C72.7207 -7.39405 72.6257 -6.72483 73.0637 -6.43266C73.5419 -6.1137 73.3751 -5.37308 72.8063 -5.28995C72.2853 -5.21379 72.0842 -4.56848 72.4697 -4.20983C72.8905 -3.8183 72.6071 -3.11403 72.0323 -3.12321C71.5059 -3.13161 71.2039 -2.52691 71.5268 -2.11107C71.8794 -1.6571 71.4867 -1.00742 70.9208 -1.10867C70.4025 -1.20142 70.0074 -0.652997 70.2595 -0.190739C70.5347 0.313916 70.0428 0.892176 69.5006 0.70147C69.0039 0.526786 68.5259 1.00473 68.7006 1.50143C68.8912 2.0437 68.3129 2.53556 67.8083 2.26034C67.3461 2.00825 66.7976 2.40333 66.8903 2.92162C66.9916 3.48745 66.3419 3.88018 65.8879 3.52758C65.4721 3.2046 64.8674 3.50658 64.8758 4.03304C64.8849 4.60778 64.1806 4.8912 63.7891 4.47035C63.4305 4.08484 62.7852 4.28592 62.709 4.8069C62.6258 5.37566 61.8852 5.54245 61.5662 5.06423C61.2741 4.6262 60.6049 4.72115 60.4461 5.22316C60.2728 5.77122 59.515 5.81704 59.2769 5.29386C59.0588 4.81463 58.383 4.801 58.1458 5.27105C57.8868 5.78421 57.1315 5.70788 56.9804 5.15328C56.842 4.64527 56.1771 4.52341 55.8676 4.94932C55.5296 5.41428 54.7963 5.21778 54.7361 4.64612C54.681 4.1225 54.0443 3.89557 53.6705 4.2663C53.2623 4.67103 52.57 4.35944 52.6023 3.78554C52.6319 3.25985 52.0399 2.93373 51.6114 3.23969C51.1436 3.5737 50.5102 3.1551 50.6342 2.59381C50.7477 2.07968 50.2157 1.66281 49.7436 1.89606C49.2283 2.15072 48.6703 1.63594 48.8827 1.1018C49.0772 0.612539 48.6189 0.115718 48.1156 0.270234C47.5661 0.438925 47.0979 -0.158697 47.3932 -0.651846C47.6637 -1.10357 47.2911 -1.66747 46.7695 -1.59569C46.2 -1.51734 45.8338 -2.18232 46.2044 -2.62171C46.5438 -3.02419 46.2664 -3.64057 45.7401 -3.6534C45.1654 -3.6674 44.9106 -4.38252 45.3469 -4.75677C45.7465 -5.09959 45.5716 -5.75249 45.0541 -5.84958C44.4891 -5.95558 44.3523 -6.70232 44.843 -7.00174C45.2924 -7.27601 45.2245 -7.94851 44.7293 -8.12736C44.1886 -8.32262 44.1734 -9.08164 44.7057 -9.29847C45.1933 -9.49709 45.2341 -10.1718 44.774 -10.4278C44.2717 -10.7072 44.3784 -11.4588 44.9386 -11.5875C45.4518 -11.7053 45.6003 -12.3647 45.1872 -12.6912C44.7363 -13.0476 44.9621 -13.7724 45.5357 -13.8095C46.0612 -13.8435 46.3136 -14.4705 45.9582 -14.859C45.5702 -15.2831 45.9094 -15.9623 46.4816 -15.9069C47.0056 -15.8562 47.3553 -16.4346 47.0669 -16.8751C46.752 -17.356 47.1957 -17.9719 47.7516 -17.8255C48.2607 -17.6913 48.6987 -18.2062 48.4846 -18.6872C48.2509 -19.2124 48.7877 -19.7492 49.3129 -19.5155C49.7939 -19.3014 50.3088 -19.7393 50.1747 -20.2485C50.0282 -20.8043 50.6442 -21.248 51.1251 -20.9331C51.5656 -20.6446 52.144 -20.9943 52.0933 -21.5184C52.0379 -22.0905 52.7171 -22.4297 53.1412 -22.0417C53.5297 -21.6863 54.1568 -21.9387 54.1908 -22.4641C54.2279 -23.0377 54.9527 -23.2635 55.3091 -22.8125C55.6355 -22.3994 56.2949 -22.5479 56.4128 -23.0611Z\"\r\n          fill=\"#294069\"\r\n        />\r\n        <path\r\n          d=\"M517.814 47.6909C518.583 45.6884 521.417 45.6884 522.186 47.6909C522.89 49.5252 525.404 49.7282 526.394 48.0307C527.474 46.1774 530.271 46.6319 530.709 48.7319C531.11 50.6554 533.559 51.2591 534.808 49.7423C536.172 48.0864 538.859 48.9835 538.954 51.1265C539.042 53.0895 541.362 54.0782 542.839 52.7814C544.45 51.3657 546.959 52.6823 546.709 54.8129C546.481 56.7644 548.613 58.1126 550.278 57.0694C552.096 55.9306 554.36 57.6325 553.772 59.6955C553.234 61.5851 555.122 63.2578 556.933 62.4952C558.91 61.6627 560.872 63.7059 559.961 65.6478C559.126 67.4265 560.721 69.3804 562.631 68.9182C564.716 68.4136 566.325 70.7453 565.114 72.5158C564.005 74.1375 565.266 76.322 567.225 76.1722C569.364 76.0085 570.579 78.5681 569.099 80.1214C567.744 81.5442 568.638 83.9028 570.596 84.0691C572.734 84.2507 573.522 86.972 571.812 88.2678C570.247 89.4548 570.751 91.9263 572.657 92.4046C574.738 92.9267 575.079 95.7392 573.184 96.744C571.448 97.6645 571.549 100.185 573.354 100.963C575.324 101.812 575.21 104.643 573.178 105.33C571.317 105.96 571.013 108.465 572.669 109.522C574.477 110.676 573.91 113.452 571.795 113.805C569.856 114.128 569.155 116.551 570.62 117.86C572.22 119.289 571.215 121.938 569.07 121.947C567.105 121.956 566.024 124.234 567.26 125.762C568.61 127.429 567.193 129.883 565.074 129.547C563.133 129.24 561.7 131.316 562.676 133.022C563.741 134.884 561.949 137.079 559.911 136.408C558.045 135.794 556.297 137.613 556.986 139.453C557.739 141.462 555.618 143.341 553.714 142.352C551.971 141.446 549.954 142.961 550.339 144.888C550.759 146.992 548.365 148.506 546.645 147.224C545.069 146.051 542.835 147.223 542.906 149.187C542.984 151.33 540.377 152.441 538.885 150.9C537.518 149.489 535.125 150.287 534.88 152.237C534.612 154.365 531.862 155.043 530.636 153.283C529.513 151.671 527.023 152.075 526.468 153.96C525.863 156.018 523.039 156.246 522.111 154.312C521.261 152.54 518.739 152.54 517.889 154.312C516.961 156.246 514.137 156.018 513.532 153.96C512.977 152.075 510.487 151.671 509.364 153.283C508.138 155.043 505.388 154.365 505.12 152.237C504.875 150.287 502.482 149.489 501.115 150.9C499.623 152.441 497.016 151.33 497.094 149.187C497.165 147.223 494.931 146.051 493.355 147.224C491.635 148.506 489.241 146.992 489.661 144.888C490.046 142.961 488.029 141.446 486.286 142.352C484.382 143.341 482.261 141.462 483.014 139.453C483.703 137.613 481.955 135.794 480.089 136.408C478.051 137.079 476.259 134.884 477.324 133.022C478.3 131.316 476.867 129.24 474.926 129.547C472.807 129.883 471.39 127.429 472.74 125.762C473.976 124.234 472.895 121.956 470.93 121.947C468.785 121.938 467.78 119.289 469.38 117.86C470.845 116.551 470.144 114.128 468.205 113.805C466.09 113.452 465.523 110.676 467.331 109.522C468.987 108.465 468.683 105.96 466.822 105.33C464.79 104.643 464.676 101.812 466.646 100.963C468.451 100.185 468.552 97.6645 466.816 96.744C464.921 95.7392 465.262 92.9267 467.343 92.4046C469.249 91.9263 469.753 89.4548 468.188 88.2678C466.478 86.972 467.266 84.2507 469.404 84.0691C471.362 83.9028 472.256 81.5442 470.901 80.1214C469.421 78.5681 470.636 76.0085 472.775 76.1722C474.734 76.322 475.995 74.1375 474.886 72.5158C473.675 70.7453 475.284 68.4136 477.369 68.9182C479.279 69.3804 480.874 67.4265 480.039 65.6478C479.128 63.7059 481.09 61.6627 483.067 62.4952C484.878 63.2578 486.766 61.5851 486.228 59.6955C485.64 57.6325 487.904 55.9306 489.722 57.0694C491.387 58.1126 493.519 56.7644 493.291 54.8129C493.041 52.6823 495.55 51.3657 497.161 52.7814C498.638 54.0782 500.958 53.0895 501.046 51.1265C501.141 48.9835 503.828 48.0864 505.192 49.7423C506.441 51.2591 508.89 50.6554 509.291 48.7319C509.729 46.6319 512.526 46.1774 513.606 48.0307C514.596 49.7282 517.11 49.5252 517.814 47.6909Z\"\r\n          fill=\"#EF6B93\"\r\n        />\r\n        <path\r\n          d=\"M511.064 57.227C511.432 55.4688 513.773 55.0899 514.677 56.6423C515.505 58.0643 517.61 57.8959 518.201 56.3603C518.846 54.684 521.219 54.6856 521.861 56.3629C522.45 57.8992 524.555 58.0707 525.385 56.6498C526.291 55.0987 528.632 55.4809 528.998 57.2395C529.332 58.8504 531.383 59.3573 532.43 58.088C533.572 56.7022 535.822 57.455 535.901 59.2495C535.973 60.8933 537.915 61.7225 539.152 60.6375C540.502 59.453 542.602 60.5569 542.392 62.3408C542.199 63.9748 543.984 65.105 545.379 64.2324C546.902 63.2799 548.797 64.7063 548.303 66.4334C547.851 68.0153 549.431 69.4171 550.948 68.7796C552.604 68.0836 554.246 69.7957 553.482 71.4212C552.782 72.9101 554.116 74.5472 555.716 74.1612C557.462 73.7399 558.808 75.6933 557.793 77.1751C556.863 78.5324 557.918 80.3624 559.558 80.238C561.35 80.1022 562.365 82.2462 561.125 83.546C559.99 84.7366 560.737 86.7121 562.377 86.8525C564.166 87.0058 564.825 89.2849 563.393 90.369C562.081 91.362 562.502 93.4318 564.097 93.8334C565.839 94.2718 566.124 96.627 564.536 97.4673C563.082 98.237 563.165 100.348 564.676 101C566.325 101.712 566.228 104.082 564.526 104.657C562.967 105.184 562.711 107.28 564.097 108.166C565.611 109.134 565.135 111.458 563.363 111.752C561.74 112.022 561.15 114.05 562.377 115.147C563.715 116.345 562.873 118.563 561.076 118.569C559.431 118.575 558.524 120.482 559.559 121.762C560.688 123.159 559.5 125.212 557.726 124.93C556.101 124.672 554.9 126.41 555.716 127.839C556.606 129.399 555.105 131.235 553.399 130.672C551.836 130.157 550.372 131.679 550.948 133.22C551.577 134.903 549.8 136.475 548.207 135.646C546.747 134.886 545.058 136.154 545.379 137.767C545.729 139.529 543.724 140.796 542.284 139.722C540.965 138.738 539.094 139.718 539.152 141.362C539.216 143.157 537.033 144.086 535.784 142.795C534.64 141.612 532.636 142.28 532.43 143.912C532.204 145.694 529.901 146.26 528.875 144.785C527.936 143.435 525.851 143.772 525.385 145.35C524.877 147.073 522.512 147.262 521.736 145.642C521.026 144.158 518.914 144.157 518.201 145.64C517.423 147.259 515.059 147.066 514.553 145.342C514.09 143.764 512.005 143.423 511.064 144.773C510.036 146.246 507.733 145.677 507.51 143.894C507.306 142.262 505.303 141.592 504.158 142.773C502.907 144.062 500.725 143.13 500.791 141.335C500.852 139.691 498.982 138.708 497.662 139.69C496.221 140.762 494.217 139.493 494.57 137.732C494.893 136.119 493.206 134.849 491.745 135.606C490.15 136.433 488.376 134.859 489.007 133.177C489.585 131.636 488.123 130.112 486.56 130.626C484.853 131.186 483.354 129.347 484.247 127.789C485.064 126.361 483.866 124.622 482.24 124.878C480.466 125.157 479.281 123.102 480.413 121.706C481.449 120.428 480.544 118.519 478.899 118.511C477.103 118.503 476.263 116.284 477.604 115.088C478.831 113.993 478.245 111.963 476.622 111.692C474.851 111.395 474.378 109.07 475.893 108.105C477.28 107.22 477.027 105.124 475.469 104.595C473.768 104.018 473.674 101.647 475.324 100.937C476.836 100.287 476.922 98.1768 475.469 97.405C473.883 96.5625 474.17 94.2077 475.913 93.7717C477.509 93.3724 477.933 91.3032 476.622 90.3083C475.192 89.2222 475.853 86.944 477.643 86.7932C479.283 86.6551 480.033 84.6807 478.899 83.4885C477.661 82.187 478.68 80.0444 480.471 80.1827C482.111 80.3094 483.168 78.4809 482.24 77.1222C481.227 75.639 482.576 73.6876 484.322 74.1113C485.921 74.4995 487.258 72.8643 486.56 71.3744C485.798 69.7478 487.442 68.0381 489.097 68.7363C490.613 69.3759 492.195 67.9764 491.745 66.3938C491.254 64.6661 493.151 63.2423 494.673 64.197C496.066 65.0715 497.852 63.9438 497.662 62.3095C497.454 60.5254 499.556 59.4244 500.904 60.6108C502.14 61.6975 504.083 60.871 504.158 59.2273C504.239 57.4329 506.49 56.6833 507.63 58.0706C508.676 59.3415 510.727 58.8374 511.064 57.227Z\"\r\n          fill=\"#E15D85\"\r\n        />\r\n        <path\r\n          d=\"M517.778 64.9316C518.271 63.5649 520.19 63.5255 520.738 64.8708C521.241 66.1031 522.946 66.2056 523.593 65.0423C524.299 63.7723 526.198 64.0412 526.524 65.4571C526.823 66.7541 528.49 67.1288 529.314 66.0843C530.215 64.944 532.047 65.5141 532.141 66.964C532.228 68.292 533.813 68.9292 534.794 68.0305C535.866 67.0494 537.583 67.9061 537.444 69.3523C537.316 70.677 538.779 71.5603 539.892 70.8307C541.107 70.0342 542.664 71.1552 542.295 72.5603C541.956 73.8474 543.258 74.9538 544.473 74.4122C545.801 73.821 547.158 75.1773 546.568 76.5049C546.027 77.721 547.135 79.022 548.422 78.6824C549.826 78.3117 550.949 79.8682 550.153 81.0839C549.424 82.1976 550.309 83.6593 551.633 83.5305C553.08 83.39 553.938 85.1063 552.957 86.1788C552.06 87.1611 552.698 88.7458 554.026 88.8312C555.476 88.9244 556.048 90.7562 554.908 91.6574C553.864 92.483 554.24 94.1496 555.538 94.4469C556.954 94.7715 557.224 96.6713 555.955 97.3781C554.792 98.0255 554.896 99.7309 556.129 100.232C557.474 100.78 557.436 102.699 556.07 103.193C554.819 103.645 554.648 105.345 555.784 106.038C557.024 106.794 556.679 108.682 555.251 108.95C553.943 109.196 553.502 110.847 554.512 111.713C555.615 112.658 554.972 114.466 553.52 114.502C552.189 114.535 551.489 116.093 552.347 117.11C553.284 118.22 552.359 119.902 550.92 119.704C549.601 119.523 548.66 120.949 549.344 122.09C550.091 123.337 548.908 124.848 547.519 124.422C546.246 124.032 545.088 125.288 545.581 126.524C546.118 127.874 544.708 129.176 543.405 128.533C542.212 127.944 540.868 128.998 541.155 130.297C541.469 131.716 539.868 132.775 538.686 131.931C537.602 131.158 536.106 131.983 536.181 133.311C536.264 134.762 534.514 135.55 533.482 134.528C532.537 133.591 530.928 134.165 530.789 135.489C530.637 136.934 528.784 137.431 527.929 136.256C527.146 135.18 525.466 135.489 525.117 136.773C524.735 138.175 522.826 138.368 522.171 137.072C521.571 135.884 519.863 135.919 519.312 137.13C518.711 138.453 516.795 138.338 516.357 136.953C515.955 135.684 514.263 135.445 513.525 136.552C512.72 137.761 510.847 137.34 510.637 135.903C510.444 134.586 508.812 134.078 507.906 135.053C506.917 136.117 505.137 135.401 505.159 133.949C505.18 132.618 503.651 131.855 502.6 132.672C501.453 133.564 499.811 132.572 500.066 131.141C500.3 129.831 498.913 128.833 497.745 129.471C496.47 130.167 495.008 128.924 495.489 127.554C495.93 126.298 494.722 125.09 493.466 125.532C492.096 126.015 490.852 124.554 491.547 123.278C492.184 122.109 491.185 120.723 489.875 120.958C488.445 121.215 487.451 119.573 488.342 118.425C489.158 117.374 488.394 115.846 487.063 115.867C485.611 115.891 484.893 114.111 485.957 113.121C486.931 112.214 486.422 110.583 485.105 110.391C483.667 110.182 483.245 108.31 484.453 107.503C485.56 106.764 485.319 105.073 484.05 104.672C482.665 104.235 482.548 102.319 483.87 101.717C485.081 101.165 485.115 99.4571 483.927 98.858C482.629 98.2039 482.821 96.2947 484.223 95.9122C485.507 95.5618 485.814 93.8812 484.737 93.0992C483.562 92.2455 484.058 90.3917 485.503 90.239C486.826 90.0992 487.399 88.4896 486.461 87.545C485.438 86.5137 486.225 84.7636 487.675 84.8446C489.004 84.9189 489.828 83.422 489.054 82.3393C488.209 81.1572 489.267 79.5559 490.686 79.8686C491.985 80.1551 493.038 78.8097 492.448 77.6169C491.804 76.3146 493.105 74.9037 494.455 75.4399C495.692 75.9311 496.947 74.7722 496.556 73.5001C496.129 72.1113 497.639 70.9273 498.886 71.6732C500.028 72.3565 501.453 71.4139 501.271 70.0955C501.072 68.6563 502.753 67.7298 503.864 68.6661C504.881 69.5237 506.439 68.8218 506.471 67.4914C506.506 66.0389 508.313 65.394 509.259 66.4963C510.126 67.5061 511.776 67.0632 512.021 65.7551C512.288 64.327 514.176 63.9803 514.933 65.2202C515.627 66.356 517.327 66.1835 517.778 64.9316Z\"\r\n          fill=\"#EF6B93\"\r\n        />\r\n        <path\r\n          d=\"M508.576 74.1555C508.582 72.9826 510.031 72.4349 510.812 73.3105C511.527 74.1125 512.852 73.7302 513.03 72.6707C513.224 71.5139 514.743 71.2058 515.373 72.1952C515.95 73.1015 517.319 72.9368 517.665 71.9196C518.042 70.809 519.59 70.7483 520.053 71.826C520.477 72.8132 521.855 72.8703 522.36 71.9216C522.91 70.8859 524.448 71.0744 524.732 72.2124C524.993 73.2548 526.344 73.5322 526.994 72.6768C527.703 71.7428 529.191 72.1755 529.289 73.3444C529.379 74.415 530.668 74.9056 531.447 74.1655C532.297 73.3575 533.696 74.0232 533.605 75.1926C533.522 76.2638 534.715 76.9548 535.603 76.3492C536.572 75.688 537.846 76.5695 537.568 77.7092C537.315 78.7532 538.382 79.6268 539.355 79.1713C540.417 78.6742 541.533 79.7486 541.077 80.8291C540.659 81.8188 541.572 82.8523 542.606 82.5588C543.734 82.2385 544.664 83.4781 544.04 84.4713C543.468 85.3812 544.204 86.5478 545.271 86.424C546.437 86.2888 547.155 87.6613 546.38 88.5417C545.67 89.3481 546.209 90.6176 547.282 90.6666C548.454 90.7201 548.943 92.1901 548.037 92.9347C547.206 93.6168 547.535 94.9563 548.587 95.1769C549.735 95.4176 549.981 96.947 548.967 97.5366C548.038 98.0766 548.148 99.4516 549.15 99.8379C550.245 100.26 550.243 101.809 549.148 102.228C548.144 102.612 548.032 103.987 548.959 104.529C549.972 105.121 549.722 106.65 548.573 106.888C547.521 107.106 547.19 108.445 548.018 109.129C548.923 109.876 548.431 111.344 547.259 111.395C546.185 111.442 545.643 112.71 546.351 113.518C547.125 114.4 546.403 115.771 545.238 115.633C544.171 115.507 543.433 116.672 544.002 117.583C544.624 118.578 543.692 119.815 542.564 119.492C541.531 119.197 540.615 120.228 541.031 121.219C541.485 122.3 540.367 123.372 539.305 122.872C538.333 122.415 537.264 123.286 537.515 124.331C537.79 125.471 536.514 126.349 535.547 125.686C534.661 125.078 533.465 125.767 533.546 126.838C533.634 128.008 532.234 128.67 531.386 127.86C530.608 127.118 529.318 127.606 529.226 128.677C529.125 129.845 527.637 130.275 526.929 129.339C526.281 128.482 524.93 128.756 524.667 129.798C524.38 130.936 522.842 131.121 522.294 130.084C521.792 129.134 520.413 129.188 519.987 130.174C519.521 131.251 517.974 131.186 517.599 130.075C517.255 129.057 515.886 128.889 515.307 129.794C514.675 130.782 513.158 130.471 512.966 129.313C512.79 128.253 511.466 127.868 510.749 128.669C509.967 129.542 508.519 128.991 508.515 127.818C508.512 126.744 507.266 126.151 506.431 126.826C505.518 127.563 504.177 126.787 504.362 125.629C504.531 124.568 503.397 123.783 502.463 124.315C501.444 124.896 500.246 123.915 500.614 122.801C500.951 121.781 499.957 120.825 498.95 121.2C497.852 121.61 496.826 120.45 497.367 119.409C497.864 118.457 497.036 117.353 495.983 117.562C494.832 117.791 494.006 116.48 494.707 115.541C495.35 114.68 494.711 113.458 493.637 113.495C492.465 113.536 491.859 112.11 492.703 111.295C493.475 110.548 493.04 109.24 491.974 109.104C490.81 108.957 490.441 107.452 491.405 106.783C492.287 106.17 492.067 104.808 491.037 104.504C489.912 104.172 489.789 102.627 490.847 102.121C491.816 101.658 491.818 100.278 490.85 99.8126C489.793 99.3041 489.919 97.7601 491.045 97.4303C492.076 97.1282 492.299 95.767 491.418 95.152C490.456 94.4805 490.828 92.9768 491.992 92.8318C493.059 92.6991 493.497 91.3912 492.726 90.6428C491.884 89.8258 492.493 88.4013 493.665 88.4449C494.739 88.4849 495.381 87.2643 494.741 86.402C494.041 85.4605 494.87 84.1521 496.02 84.3832C497.074 84.5949 497.904 83.4932 497.409 82.5392C496.87 81.4977 497.898 80.3393 498.996 80.7518C500.002 81.1298 500.998 80.1754 500.663 79.1545C500.298 78.0399 501.499 77.0615 502.516 77.6449C503.448 78.1793 504.585 77.397 504.418 76.3356C504.236 75.1768 505.578 74.4038 506.489 75.1428C507.324 75.8198 508.57 75.2299 508.576 74.1555Z\"\r\n          fill=\"#E15D85\"\r\n        />\r\n        <path\r\n          d=\"M508.942 83.6069C508.811 82.7887 509.758 82.2399 510.403 82.7601C510.994 83.2367 511.873 82.8175 511.875 82.0584C511.877 81.2298 512.9 80.8399 513.453 81.4569C513.96 82.0221 514.895 81.7494 515.019 81.0005C515.154 80.1829 516.226 79.9621 516.673 80.6599C517.082 81.299 518.049 81.1799 518.291 80.4605C518.556 79.6752 519.649 79.6292 519.979 80.3896C520.28 81.0862 521.254 81.1237 521.608 80.4525C521.995 79.7197 523.082 79.8498 523.285 80.6532C523.471 81.3891 524.426 81.5824 524.884 80.9767C525.383 80.3155 526.435 80.6182 526.506 81.4437C526.572 82.1999 527.484 82.5439 528.032 82.0195C528.631 81.4469 529.621 81.9144 529.559 82.7407C529.503 83.4977 530.347 83.9834 530.973 83.5538C531.656 83.0848 532.558 83.7049 532.364 84.5107C532.187 85.2487 532.943 85.8637 533.629 85.54C534.379 85.1866 535.17 85.9434 534.849 86.7077C534.556 87.4077 535.203 88.136 535.933 87.9266C536.729 87.698 537.388 88.5718 536.95 89.2748C536.548 89.9187 537.07 90.7414 537.824 90.6518C538.647 90.554 539.157 91.5222 538.611 92.1456C538.111 92.7168 538.494 93.6125 539.253 93.645C540.081 93.6804 540.429 94.7179 539.79 95.2458C539.205 95.7293 539.44 96.675 540.183 96.8287C540.995 96.9965 541.172 98.0764 540.457 98.495C539.802 98.8784 539.882 99.8495 540.591 100.12C541.365 100.416 541.367 101.511 540.594 101.809C539.886 102.082 539.809 103.054 540.466 103.435C541.182 103.851 541.008 104.932 540.197 105.102C539.455 105.258 539.223 106.205 539.81 106.686C540.45 107.212 540.106 108.251 539.278 108.289C538.52 108.324 538.139 109.221 538.641 109.791C539.189 110.412 538.682 111.382 537.859 111.287C537.105 111.2 536.586 112.025 536.99 112.667C537.431 113.369 536.775 114.245 535.978 114.019C535.247 113.812 534.602 114.542 534.898 115.241C535.221 116.005 534.433 116.764 533.682 116.413C532.995 116.092 532.241 116.709 532.421 117.447C532.617 118.252 531.717 118.875 531.033 118.409C530.405 117.981 529.562 118.47 529.622 119.226C529.686 120.053 528.698 120.523 528.097 119.953C527.547 119.43 526.636 119.777 526.573 120.534C526.505 121.36 525.454 121.666 524.952 121.006C524.493 120.402 523.538 120.599 523.355 121.335C523.154 122.14 522.068 122.273 521.679 121.542C521.322 120.872 520.348 120.913 520.049 121.61C519.723 122.372 518.629 122.33 518.362 121.545C518.117 120.827 517.15 120.711 516.742 121.351C516.298 122.051 515.225 121.834 515.087 121.016C514.961 120.268 514.025 119.998 513.52 120.565C512.969 121.184 511.945 120.798 511.94 119.969C511.936 119.21 511.055 118.794 510.465 119.273C509.822 119.795 508.873 119.25 509.002 118.431C509.119 117.681 508.316 117.129 507.658 117.507C506.939 117.919 506.09 117.228 506.348 116.441C506.584 115.72 505.88 115.046 505.17 115.313C504.394 115.605 503.667 114.787 504.048 114.051C504.397 113.377 503.81 112.599 503.066 112.749C502.253 112.913 501.667 111.989 502.161 111.323C502.613 110.714 502.159 109.852 501.4 109.88C500.572 109.912 500.142 108.906 500.736 108.328C501.28 107.799 500.97 106.875 500.217 106.782C499.394 106.68 499.131 105.618 499.81 105.143C500.432 104.708 500.274 103.747 499.545 103.534C498.75 103.301 498.66 102.21 499.407 101.851C500.091 101.521 500.089 100.547 499.404 100.22C498.656 99.8627 498.742 98.7716 499.537 98.5364C500.265 98.3209 500.419 97.3588 499.796 96.9261C499.115 96.4537 499.375 95.3906 500.197 95.2859C500.95 95.1899 501.257 94.2651 500.711 93.738C500.115 93.1624 500.542 92.1549 501.37 92.1833C502.129 92.2094 502.58 91.3458 502.126 90.7379C501.629 90.0742 502.213 89.1482 503.026 89.3091C503.77 89.4566 504.354 88.6766 504.003 88.0036C503.62 87.2689 504.344 86.4485 505.121 86.7377C505.832 87.0027 506.534 86.3265 506.295 85.6059C506.035 84.8193 506.881 84.1256 507.601 84.5357C508.261 84.9114 509.062 84.3564 508.942 83.6069Z\"\r\n          fill=\"#EF6B93\"\r\n        />\r\n        <path\r\n          d=\"M517.413 86.9389C517.541 86.3787 518.293 86.272 518.573 86.7744C518.828 87.2345 519.503 87.1937 519.702 86.7061C519.919 86.1738 520.678 86.1891 520.873 86.7297C521.052 87.2249 521.724 87.2929 521.999 86.8435C522.298 86.3528 523.045 86.4897 523.151 87.0546C523.248 87.5721 523.901 87.7471 524.243 87.3475C524.618 86.9112 525.333 87.1661 525.347 87.7407C525.36 88.2671 525.976 88.5445 526.379 88.2051C526.818 87.8345 527.483 88.2008 527.404 88.7702C527.333 89.2918 527.897 89.6645 528.348 89.394C528.841 89.0987 529.439 89.567 529.27 90.1165C529.116 90.6198 529.613 91.0781 530.102 90.8836C530.636 90.6712 531.151 91.2292 530.896 91.7446C530.663 92.2166 531.08 92.7487 531.594 92.6352C532.155 92.5112 532.574 93.1446 532.24 93.6124C531.934 94.0409 532.26 94.6329 532.785 94.6034C533.359 94.5711 533.671 95.2634 533.266 95.6715C532.895 96.0454 533.122 96.6821 533.646 96.7372C534.218 96.7974 534.414 97.5307 533.949 97.8687C533.523 98.1782 533.645 98.8431 534.153 98.9815C534.708 99.1326 534.784 99.8879 534.271 100.147C533.801 100.384 533.814 101.06 534.293 101.278C534.817 101.516 534.771 102.274 534.223 102.447C533.721 102.606 533.626 103.275 534.064 103.567C534.542 103.886 534.375 104.627 533.806 104.71C533.285 104.786 533.084 105.432 533.47 105.79C533.891 106.182 533.607 106.886 533.032 106.877C532.506 106.868 532.204 107.473 532.527 107.889C532.879 108.343 532.487 108.993 531.921 108.891C531.403 108.799 531.007 109.347 531.26 109.809C531.535 110.314 531.043 110.892 530.501 110.701C530.004 110.527 529.526 111.005 529.701 111.501C529.891 112.044 529.313 112.536 528.808 112.26C528.346 112.008 527.798 112.403 527.89 112.922C527.992 113.487 527.342 113.88 526.888 113.528C526.472 113.205 525.867 113.507 525.876 114.033C525.885 114.608 525.181 114.891 524.789 114.47C524.43 114.085 523.785 114.286 523.709 114.807C523.626 115.376 522.885 115.542 522.566 115.064C522.274 114.626 521.605 114.721 521.446 115.223C521.273 115.771 520.515 115.817 520.277 115.294C520.059 114.815 519.383 114.801 519.146 115.271C518.887 115.784 518.131 115.708 517.98 115.153C517.842 114.645 517.177 114.523 516.868 114.949C516.53 115.414 515.796 115.218 515.736 114.646C515.681 114.122 515.044 113.896 514.67 114.266C514.262 114.671 513.57 114.359 513.602 113.786C513.632 113.26 513.04 112.934 512.611 113.24C512.144 113.574 511.51 113.155 511.634 112.594C511.748 112.08 511.216 111.663 510.744 111.896C510.228 112.151 509.67 111.636 509.883 111.102C510.077 110.613 509.619 110.116 509.116 110.27C508.566 110.439 508.098 109.841 508.393 109.348C508.664 108.896 508.291 108.333 507.769 108.404C507.2 108.483 506.834 107.818 507.204 107.378C507.544 106.976 507.266 106.359 506.74 106.347C506.165 106.333 505.911 105.617 506.347 105.243C506.746 104.9 506.572 104.248 506.054 104.15C505.489 104.044 505.352 103.298 505.843 102.998C506.292 102.724 506.224 102.051 505.729 101.873C505.189 101.677 505.173 100.918 505.706 100.702C506.193 100.503 506.234 99.8282 505.774 99.5722C505.272 99.2928 505.378 98.5412 505.939 98.4125C506.452 98.2947 506.6 97.6353 506.187 97.3088C505.736 96.9524 505.962 96.2276 506.536 96.1905C507.061 96.1565 507.314 95.5295 506.958 95.141C506.57 94.7169 506.909 94.0377 507.482 94.0931C508.006 94.1438 508.355 93.5654 508.067 93.1249C507.752 92.644 508.196 92.0281 508.752 92.1745C509.261 92.3087 509.699 91.7938 509.485 91.3128C509.251 90.7876 509.788 90.2508 510.313 90.4845C510.794 90.6986 511.309 90.2607 511.175 89.7515C511.028 89.1957 511.644 88.752 512.125 89.0669C512.566 89.3554 513.144 89.0057 513.093 88.4816C513.038 87.9095 513.717 87.5703 514.141 87.9583C514.53 88.3137 515.157 88.0613 515.191 87.5359C515.228 86.9623 515.953 86.7365 516.309 87.1875C516.636 87.6006 517.295 87.4521 517.413 86.9389Z\"\r\n          fill=\"#E15D85\"\r\n        />\r\n        <path\r\n          d=\"M257.666 -14.6211C258.663 -17.2176 262.337 -17.2176 263.334 -14.6211C264.247 -12.2427 267.507 -11.9796 268.791 -14.1806C270.191 -16.5835 273.817 -15.9942 274.385 -13.2714C274.905 -10.7773 278.081 -9.99459 279.7 -11.9613C281.468 -14.1084 284.953 -12.9451 285.077 -10.1665C285.19 -7.62125 288.199 -6.33926 290.113 -8.02069C292.202 -9.85633 295.455 -8.14918 295.132 -5.38668C294.835 -2.85627 297.599 -1.10821 299.758 -2.46083C302.115 -3.9375 305.052 -1.73069 304.29 0.944117C303.591 3.39421 306.039 5.56306 308.387 4.57429C310.951 3.49483 313.495 6.14416 312.313 8.66199C311.231 10.9683 313.299 13.5018 315.776 12.9025C318.479 12.2482 320.566 15.2714 318.995 17.567C317.557 19.6698 319.192 22.5023 321.733 22.308C324.506 22.0958 326.081 25.4146 324.162 27.4286C322.405 29.2735 323.565 32.3316 326.104 32.5472C328.875 32.7827 329.897 36.3111 327.681 37.9914C325.65 39.5304 326.304 42.735 328.776 43.3551C331.473 44.0321 331.916 47.6788 329.459 48.9817C327.208 50.1751 327.34 53.4431 329.679 54.4516C332.233 55.5525 332.085 59.223 329.451 60.1149C327.038 60.9318 326.643 64.1786 328.791 65.5493C331.136 67.0457 330.401 70.645 327.657 71.1027C325.144 71.5219 324.234 74.6634 326.134 76.3609C328.208 78.214 326.906 81.6488 324.124 81.6605C321.577 81.6712 320.175 84.626 321.778 86.6063C323.528 88.7681 321.691 91.9495 318.944 91.5148C316.427 91.1167 314.569 93.8084 315.834 96.0201C317.214 98.4347 314.891 101.28 312.249 100.41C309.829 99.6139 307.564 101.973 308.457 104.359C309.432 106.963 306.683 109.399 304.215 108.117C301.954 106.943 299.339 108.907 299.838 111.406C300.383 114.133 297.278 116.097 295.048 114.435C293.004 112.913 290.108 114.433 290.2 116.979C290.301 119.759 286.921 121.199 284.986 119.201C283.213 117.371 280.111 118.407 279.793 120.934C279.447 123.694 275.88 124.573 274.29 122.291C272.834 120.2 269.606 120.725 268.887 123.169C268.102 125.837 264.44 126.133 263.237 123.625C262.135 121.328 258.865 121.328 257.763 123.625C256.56 126.133 252.898 125.837 252.113 123.169C251.394 120.725 248.166 120.2 246.71 122.291C245.12 124.573 241.553 123.694 241.207 120.934C240.889 118.407 237.787 117.371 236.014 119.201C234.079 121.199 230.699 119.759 230.8 116.979C230.892 114.433 227.996 112.913 225.952 114.435C223.722 116.097 220.617 114.133 221.162 111.406C221.661 108.907 219.046 106.943 216.785 108.117C214.317 109.399 211.568 106.963 212.543 104.359C213.436 101.973 211.171 99.6139 208.751 100.41C206.109 101.28 203.786 98.4347 205.166 96.0201C206.431 93.8084 204.573 91.1167 202.056 91.5148C199.309 91.9495 197.472 88.7681 199.222 86.6063C200.825 84.626 199.423 81.6712 196.876 81.6605C194.094 81.6488 192.792 78.214 194.866 76.3609C196.766 74.6634 195.856 71.5219 193.343 71.1027C190.599 70.645 189.864 67.0457 192.209 65.5493C194.357 64.1786 193.962 60.9318 191.549 60.1149C188.915 59.223 188.767 55.5525 191.321 54.4516C193.66 53.4431 193.792 50.1751 191.541 48.9817C189.084 47.6788 189.527 44.0321 192.224 43.3551C194.696 42.735 195.35 39.5304 193.319 37.9914C191.103 36.3111 192.125 32.7827 194.896 32.5472C197.435 32.3316 198.595 29.2735 196.838 27.4286C194.919 25.4146 196.494 22.0958 199.267 22.308C201.808 22.5023 203.443 19.6698 202.005 17.567C200.434 15.2714 202.521 12.2482 205.224 12.9025C207.701 13.5018 209.769 10.9683 208.687 8.66199C207.505 6.14415 210.049 3.49483 212.613 4.57429C214.961 5.56306 217.409 3.39421 216.71 0.944117C215.948 -1.73069 218.885 -3.9375 221.242 -2.46083C223.401 -1.10821 226.165 -2.85627 225.868 -5.38668C225.545 -8.14918 228.798 -9.85633 230.887 -8.02069C232.801 -6.33926 235.81 -7.62125 235.923 -10.1665C236.047 -12.9451 239.532 -14.1084 241.3 -11.9613C242.919 -9.99459 246.095 -10.7773 246.615 -13.2714C247.183 -15.9942 250.809 -16.5835 252.209 -14.1806C253.493 -11.9796 256.753 -12.2427 257.666 -14.6211Z\"\r\n          fill=\"#EF6B93\"\r\n        />\r\n        <path\r\n          d=\"M248.913 -2.25652C249.39 -4.53615 252.426 -5.02744 253.598 -3.01456C254.671 -1.17078 257.401 -1.38925 258.167 -3.38022C259.004 -5.5538 262.08 -5.55165 262.913 -3.3769C263.677 -1.38486 266.406 -1.16258 267.482 -3.00486C268.657 -5.0161 271.692 -4.52055 272.166 -2.24026C272.6 -0.151547 275.259 0.505725 276.616 -1.14014C278.098 -2.93695 281.015 -1.96085 281.117 0.365919C281.21 2.49721 283.729 3.57245 285.333 2.16562C287.084 0.629768 289.806 2.06116 289.534 4.37414C289.284 6.49281 291.598 7.95816 293.406 6.82681C295.381 5.5917 297.838 7.4413 297.198 9.68059C296.612 11.7318 298.661 13.5493 300.627 12.7227C302.774 11.8203 304.904 14.0402 303.913 16.1478C303.005 18.0784 304.735 20.201 306.809 19.7006C309.073 19.1543 310.819 21.687 309.503 23.6084C308.297 25.3683 309.665 27.7411 311.792 27.5798C314.114 27.4038 315.431 30.1837 313.823 31.869C312.351 33.4128 313.32 35.9741 315.446 36.1562C317.766 36.355 318.62 39.3101 316.763 40.7158C315.062 42.0033 315.608 44.687 317.677 45.2077C319.935 45.7762 320.304 48.83 318.246 49.9195C316.36 50.9175 316.468 53.6541 318.427 54.4999C320.565 55.4233 320.439 58.4967 318.233 59.2419C316.211 59.9246 315.879 62.643 317.677 63.7921C319.639 65.0465 319.022 68.0599 316.724 68.4415C314.62 68.7911 313.856 71.4211 315.446 72.8436C317.182 74.3965 316.089 77.2718 313.76 77.28C311.626 77.2874 310.451 79.7609 311.792 81.42C313.256 83.2312 311.716 85.894 309.416 85.5285C307.309 85.1936 305.752 87.4465 306.809 89.2992C307.964 91.3218 306.017 93.7031 303.805 92.9734C301.779 92.3049 299.881 94.2787 300.627 96.2771C301.443 98.4588 299.139 100.497 297.073 99.4218C295.18 98.437 292.99 100.081 293.406 102.173C293.861 104.457 291.26 106.099 289.393 104.707C287.683 103.431 285.257 104.702 285.333 106.834C285.415 109.162 282.585 110.365 280.965 108.691C279.482 107.158 276.884 108.023 276.616 110.14C276.324 112.451 273.337 113.185 272.007 111.273C270.789 109.521 268.086 109.959 267.482 112.005C266.823 114.239 263.757 114.484 262.751 112.383C261.83 110.459 259.091 110.457 258.167 112.38C257.159 114.479 254.093 114.23 253.437 111.995C252.836 109.948 250.133 109.507 248.913 111.256C247.581 113.167 244.594 112.428 244.306 110.117C244.041 108.001 241.444 107.131 239.959 108.663C238.337 110.335 235.508 109.127 235.594 106.799C235.672 104.668 233.248 103.393 231.536 104.666C229.668 106.056 227.069 104.41 227.527 102.127C227.946 100.035 225.758 98.3885 223.864 99.3706C221.797 100.443 219.496 98.4015 220.314 96.2209C221.063 94.2236 219.168 92.2471 217.141 92.9128C214.928 93.6394 212.984 91.2554 214.142 89.2344C215.202 87.3831 213.648 85.1282 211.54 85.46C209.24 85.8224 207.704 83.1574 209.17 81.3482C210.514 79.691 209.341 77.2159 207.208 77.2055C204.879 77.1941 203.79 74.3172 205.528 72.7667C207.12 71.3465 206.36 68.7154 204.256 68.3628C201.959 67.978 201.346 64.9637 203.31 63.7121C205.109 62.5656 204.781 59.8466 202.761 59.1612C200.555 58.4128 200.433 55.3393 202.573 54.4189C204.532 53.5758 204.645 50.8394 202.761 49.8388C200.704 48.7463 201.077 45.693 203.336 45.1278C205.405 44.61 205.955 41.927 204.256 40.6371C202.401 39.2289 203.259 36.2749 205.58 36.0794C207.705 35.9003 208.678 33.3403 207.208 31.7945C205.603 30.1069 206.924 27.3288 209.246 27.5081C211.373 27.6723 212.744 25.3015 211.54 23.5399C210.227 21.6167 211.976 19.0864 214.239 19.6359C216.312 20.1392 218.046 18.019 217.141 16.0872C216.153 13.9782 218.285 11.7612 220.431 12.6666C222.396 13.496 224.448 11.6813 223.864 9.62931C223.227 7.38912 225.687 5.54297 227.66 6.78084C229.467 7.91472 231.783 6.4526 231.536 4.33358C231.267 2.02022 233.992 0.592638 235.74 2.13094C237.342 3.54001 239.862 2.46829 239.959 0.337134C240.064 -1.98949 242.982 -2.96151 244.461 -1.16263C245.816 0.485134 248.476 -0.168417 248.913 -2.25652Z\"\r\n          fill=\"#E15D85\"\r\n        />\r\n        <path\r\n          d=\"M257.619 7.73339C258.258 5.96128 260.746 5.91017 261.457 7.65453C262.109 9.25235 264.32 9.3852 265.158 7.8769C266.074 6.23027 268.537 6.57885 268.959 8.41474C269.346 10.0964 271.508 10.5822 272.577 9.22793C273.744 7.74942 276.12 8.48867 276.243 10.3685C276.355 12.0905 278.41 12.9167 279.683 11.7515C281.072 10.4794 283.299 11.5902 283.118 13.4653C282.952 15.1829 284.849 16.3282 286.292 15.3822C287.867 14.3495 289.887 15.803 289.407 17.6249C288.968 19.2937 290.656 20.7283 292.233 20.0261C293.953 19.2594 295.713 21.018 294.948 22.7395C294.247 24.3163 295.683 26.0031 297.352 25.5628C299.173 25.0821 300.628 27.1003 299.597 28.6766C298.652 30.1206 299.799 32.0159 301.516 31.8489C303.391 31.6667 304.504 33.8921 303.233 35.2826C302.069 36.5563 302.897 38.611 304.619 38.7218C306.499 38.8426 307.24 41.2177 305.762 42.3864C304.409 43.4568 304.896 45.6177 306.578 46.0032C308.415 46.4241 308.765 48.8874 307.119 49.8038C305.612 50.6433 305.746 52.8544 307.345 53.5048C309.09 54.2147 309.041 56.7023 307.269 57.3429C305.646 57.9297 305.424 60.1338 306.898 61.0321C308.506 62.0128 308.059 64.4603 306.207 64.8084C304.511 65.1272 303.939 67.2672 305.249 68.3902C306.679 69.6162 305.845 71.9602 303.962 72.0068C302.237 72.0495 301.328 74.07 302.441 75.3886C303.657 76.8282 302.457 79.008 300.591 78.7519C298.881 78.5173 297.66 80.3659 298.548 81.846C299.516 83.4618 297.982 85.421 296.181 84.8688C294.531 84.3631 293.03 85.9919 293.668 87.5951C294.365 89.3454 292.537 91.0332 290.848 90.1993C289.3 89.4354 287.557 90.8023 287.93 92.4871C288.337 94.3265 286.262 95.6992 284.728 94.6051C283.323 93.6029 281.383 94.6725 281.481 96.3953C281.588 98.2761 279.319 99.2981 277.981 97.9722C276.755 96.7577 274.669 97.5022 274.489 99.2184C274.292 101.092 271.889 101.737 270.781 100.213C269.766 98.818 267.587 99.2182 267.134 100.883C266.64 102.701 264.165 102.952 263.315 101.271C262.537 99.7305 260.322 99.776 259.608 101.347C258.829 103.062 256.345 102.913 255.776 101.117C255.255 99.4716 253.062 99.1612 252.105 100.597C251.06 102.165 248.633 101.619 248.36 99.7552C248.109 98.0479 245.994 97.3897 244.819 98.6536C243.537 100.033 241.228 99.1053 241.257 97.2217C241.284 95.4963 239.302 94.5074 237.94 95.5664C236.452 96.7226 234.322 95.4363 234.653 93.5817C234.957 91.883 233.159 90.5889 231.644 91.4157C229.991 92.3183 228.095 90.707 228.719 88.9296C229.291 87.3015 227.724 85.7357 226.096 86.3088C224.319 86.9345 222.706 85.04 223.608 83.3857C224.433 81.8704 223.138 80.0736 221.439 80.3782C219.585 80.7107 218.297 78.582 219.452 77.0937C220.51 75.7305 219.519 73.7491 217.794 73.7773C215.91 73.808 214.98 71.5003 216.359 70.2166C217.622 69.0407 216.962 66.926 215.255 66.6771C213.39 66.4053 212.843 63.9783 214.41 62.9324C215.845 61.9743 215.533 59.7812 213.887 59.2615C212.091 58.6943 211.94 56.2108 213.654 55.4298C215.224 54.7143 215.268 52.4995 213.727 51.7227C212.045 50.8746 212.294 48.399 214.111 47.9031C215.776 47.4488 216.175 45.2697 214.778 44.2557C213.254 43.1488 213.897 40.7452 215.77 40.5472C217.486 40.3659 218.229 38.2789 217.014 37.0541C215.687 35.717 216.707 33.4477 218.588 33.5528C220.311 33.6491 221.379 31.7083 220.375 30.3043C219.28 28.7717 220.651 26.6954 222.491 27.1009C224.176 27.4723 225.541 25.7279 224.776 24.1812C223.941 22.4927 225.627 20.6633 227.378 21.3586C228.982 21.9955 230.609 20.4927 230.102 18.8434C229.549 17.0427 231.507 15.5075 233.123 16.4746C234.604 17.3605 236.452 16.1383 236.216 14.429C235.958 12.5628 238.137 11.3615 239.577 12.5755C240.897 13.6875 242.917 12.7775 242.958 11.0524C243.003 9.16909 245.346 8.33289 246.574 9.7622C247.698 11.0714 249.837 10.4972 250.155 8.8011C250.501 6.94942 252.948 6.49994 253.93 8.1076C254.83 9.58019 257.034 9.35662 257.619 7.73339Z\"\r\n          fill=\"#EF6B93\"\r\n        />\r\n        <path\r\n          d=\"M245.687 19.6932C245.695 18.1723 247.574 17.4622 248.586 18.5975C249.513 19.6374 251.232 19.1418 251.463 17.7679C251.715 16.2681 253.683 15.8685 254.5 17.1514C255.248 18.3266 257.024 18.113 257.472 16.794C257.961 15.354 259.968 15.2754 260.569 16.6727C261.119 17.9527 262.906 18.0267 263.559 16.7966C264.273 15.4538 266.267 15.6982 266.636 17.1737C266.973 18.5253 268.725 18.885 269.568 17.7758C270.488 16.5648 272.417 17.1259 272.544 18.6414C272.66 20.0297 274.332 20.6657 275.341 19.7061C276.444 18.6584 278.258 19.5216 278.14 21.0379C278.032 22.4268 279.58 23.3227 280.731 22.5375C281.987 21.6802 283.639 22.8232 283.279 24.301C282.95 25.6546 284.334 26.7872 285.596 26.1967C286.973 25.5521 288.42 26.9452 287.828 28.3462C287.286 29.6295 288.471 30.9695 289.811 30.589C291.274 30.1737 292.479 31.7809 291.67 33.0688C290.929 34.2485 291.883 35.7611 293.267 35.6006C294.778 35.4253 295.709 37.205 294.704 38.3464C293.783 39.392 294.483 41.0381 295.874 41.1016C297.394 41.171 298.027 43.077 296.852 44.0424C295.776 44.9268 296.202 46.6637 297.565 46.9497C299.054 47.2618 299.374 49.2448 298.059 50.0093C296.855 50.7095 296.997 52.4923 298.297 52.9933C299.716 53.5401 299.713 55.5488 298.293 56.0925C296.992 56.5905 296.846 58.3729 298.049 59.0759C299.362 59.8433 299.037 61.8256 297.548 62.1344C296.184 62.4172 295.754 64.1532 296.828 65.04C298.001 66.0081 297.363 67.9127 295.844 67.9786C294.452 68.039 293.749 69.6835 294.667 70.7311C295.67 71.8749 294.734 73.6524 293.224 73.4737C291.84 73.31 290.883 74.8205 291.621 76.0019C292.427 77.2916 291.219 78.896 289.756 78.4774C288.417 78.0939 287.23 79.4312 287.769 80.7157C288.358 82.1181 286.907 83.5079 285.531 82.8601C284.271 82.2667 282.884 83.3962 283.211 84.7506C283.567 86.2292 281.912 87.3684 280.658 86.5083C279.509 85.7204 277.959 86.6129 278.064 88.002C278.178 89.5186 276.362 90.3776 275.262 89.3274C274.255 88.3655 272.582 88.9978 272.462 90.3857C272.332 91.901 270.402 92.4577 269.484 91.2446C268.644 90.1335 266.892 90.4892 266.551 91.84C266.179 93.3148 264.185 93.5546 263.474 92.2101C262.823 90.9786 261.036 91.0486 260.483 92.3273C259.879 93.7232 257.872 93.6401 257.386 92.1989C256.941 90.8789 255.166 90.6613 254.415 91.8348C253.595 93.1158 251.628 92.7118 251.379 91.2114C251.152 89.837 249.434 89.3375 248.505 90.3753C247.49 91.5083 245.613 90.7939 245.608 89.273C245.604 87.8799 243.989 87.1114 242.905 87.9867C241.722 88.9423 239.984 87.936 240.223 86.4341C240.442 85.0583 238.972 84.0407 237.762 84.7308C236.44 85.4842 234.886 84.2121 235.363 82.768C235.8 81.4453 234.512 80.2049 233.207 80.692C231.782 81.2237 230.452 79.7187 231.154 78.3698C231.798 77.1343 230.725 75.7034 229.359 75.9748C227.867 76.271 226.795 74.5721 227.705 73.3534C228.539 72.2372 227.709 70.6527 226.317 70.7014C224.797 70.7545 224.012 68.9057 225.106 67.8488C226.107 66.8807 225.543 65.1836 224.161 65.0083C222.652 64.817 222.174 62.8661 223.423 61.9984C224.567 61.2035 224.282 59.4379 222.946 59.0432C221.487 58.6123 221.328 56.6099 222.7 55.9537C223.957 55.3527 223.959 53.5643 222.703 52.9603C221.333 52.301 221.497 50.2991 222.956 49.8715C224.293 49.4798 224.582 47.7149 223.44 46.9174C222.193 46.0468 222.676 44.097 224.185 43.9091C225.567 43.7369 226.135 42.0412 225.136 41.0708C224.045 40.0114 224.834 38.1644 226.354 38.221C227.746 38.2728 228.579 36.6902 227.748 35.572C226.841 34.3513 227.916 32.6549 229.407 32.9545C230.773 33.229 231.849 31.8005 231.208 30.5635C230.509 29.2131 231.843 27.7111 233.266 28.246C234.57 28.736 235.862 27.4986 235.427 26.1749C234.954 24.7297 236.511 23.4611 237.83 24.2175C239.039 24.9104 240.512 23.8961 240.296 22.5199C240.06 21.0174 241.801 20.0151 242.982 20.9733C244.063 21.8511 245.68 21.0862 245.687 19.6932Z\"\r\n          fill=\"#E15D85\"\r\n        />\r\n        <path\r\n          d=\"M246.162 31.9479C245.993 30.887 247.22 30.1754 248.056 30.85C248.823 31.4679 249.963 30.9243 249.965 29.9401C249.968 28.8657 251.294 28.3602 252.011 29.1602C252.668 29.893 253.881 29.5394 254.042 28.5684C254.217 27.5083 255.606 27.2221 256.186 28.1268C256.717 28.9555 257.971 28.801 258.285 27.8683C258.628 26.85 260.045 26.7904 260.472 27.7764C260.864 28.6795 262.126 28.7282 262.586 27.8579C263.087 26.9078 264.496 27.0764 264.76 28.1181C265.001 29.0723 266.239 29.3229 266.832 28.5375C267.48 27.6802 268.844 28.0727 268.936 29.1431C269.021 30.1236 270.203 30.5696 270.915 29.8896C271.692 29.1472 272.975 29.7534 272.895 30.8248C272.821 31.8063 273.916 32.4361 274.728 31.879C275.614 31.2709 276.783 32.075 276.532 33.1197C276.302 34.0767 277.282 34.8741 278.172 34.4544C279.144 33.9962 280.169 34.9774 279.754 35.9684C279.373 36.8761 280.213 37.8203 281.159 37.5489C282.192 37.2525 283.046 38.3855 282.477 39.297C281.956 40.1319 282.633 41.1986 283.611 41.0824C284.677 40.9555 285.339 42.2109 284.631 43.0193C283.983 43.7598 284.48 44.9213 285.464 44.9634C286.537 45.0093 286.989 46.3546 286.16 47.039C285.402 47.6659 285.706 48.8922 286.67 49.0914C287.722 49.3089 287.952 50.7092 287.025 51.2519C286.176 51.7491 286.279 53.0082 287.199 53.3595C288.202 53.743 288.205 55.162 287.203 55.549C286.284 55.9034 286.185 57.1629 287.036 57.6571C287.965 58.1967 287.74 59.5977 286.688 59.8189C285.725 60.0214 285.425 61.2487 286.186 61.873C287.016 62.5546 286.569 63.9014 285.496 63.951C284.513 63.9964 284.02 65.1596 284.671 65.8979C285.381 66.7039 284.724 67.9615 283.656 67.8383C282.679 67.7255 282.005 68.7945 282.529 69.6276C283.101 70.5371 282.251 71.673 281.217 71.3802C280.27 71.112 279.434 72.0591 279.817 72.9655C280.236 73.955 279.214 74.9398 278.241 74.4849C277.349 74.0683 276.372 74.869 276.605 75.8252C276.86 76.869 275.693 77.6771 274.805 77.072C273.992 76.5177 272.899 77.1513 272.976 78.1325C273.059 79.2037 271.778 79.8142 270.999 79.0745C270.285 78.397 269.105 78.847 269.023 79.8278C268.934 80.8985 267.572 81.2957 266.921 80.4405C266.325 79.6573 265.088 79.9121 264.85 80.8671C264.59 81.9097 263.182 82.0831 262.677 81.1347C262.214 80.266 260.952 80.319 260.564 81.2235C260.14 82.2109 258.722 82.1562 258.376 81.1391C258.059 80.2074 256.804 80.0573 256.276 80.8878C255.7 81.7944 254.309 81.513 254.13 80.4535C253.967 79.483 252.753 79.1336 252.098 79.8686C251.384 80.6711 250.056 80.1701 250.05 79.0957C250.044 78.1116 248.901 77.5719 248.138 78.1924C247.304 78.8699 246.073 78.1625 246.24 77.1009C246.392 76.1286 245.351 75.4126 244.497 75.9026C243.565 76.4375 242.465 75.5419 242.799 74.5208C243.105 73.5854 242.192 72.7118 241.271 73.0585C240.266 73.437 239.323 72.3764 239.816 71.4221C240.269 70.548 239.508 69.5392 238.543 69.7337C237.49 69.946 236.729 68.7479 237.37 67.8852C237.956 67.0949 237.367 65.9772 236.384 66.0144C235.31 66.055 234.752 64.7504 235.522 64.0016C236.228 63.3156 235.826 62.1179 234.849 61.9968C233.783 61.8647 233.441 60.4874 234.321 59.8719C235.128 59.308 234.923 58.0613 233.979 57.7851C232.947 57.4836 232.831 56.0694 233.799 55.603C234.685 55.1759 234.683 53.9124 233.795 53.4883C232.826 53.0253 232.937 51.6107 233.968 51.3056C234.911 51.0262 235.112 49.7788 234.303 49.2177C233.42 48.6052 233.758 47.2268 234.823 47.091C235.8 46.9666 236.198 45.7675 235.49 45.0839C234.717 44.3377 235.271 43.0313 236.344 43.0682C237.328 43.102 237.913 41.9823 237.324 41.194C236.681 40.3335 237.437 39.1328 238.491 39.3415C239.456 39.5326 240.214 38.5213 239.759 37.6487C239.262 36.6961 240.201 35.6323 241.208 36.0074C242.13 36.3509 243.04 35.4741 242.73 34.5399C242.393 33.5199 243.49 32.6205 244.424 33.1522C245.279 33.6393 246.318 32.9198 246.162 31.9479Z\"\r\n          fill=\"#EF6B93\"\r\n        />\r\n        <path\r\n          d=\"M257.145 36.2683C257.312 35.5419 258.287 35.4036 258.649 36.0549C258.981 36.6515 259.856 36.5986 260.113 35.9664C260.395 35.2762 261.379 35.296 261.632 35.997C261.864 36.6391 262.736 36.7272 263.091 36.1445C263.48 35.5083 264.448 35.6858 264.585 36.4183C264.711 37.0893 265.558 37.3161 266.002 36.798C266.487 36.2323 267.415 36.5628 267.433 37.3079C267.449 37.9904 268.249 38.3501 268.77 37.91C269.34 37.4295 270.202 37.9044 270.101 38.6428C270.008 39.3191 270.739 39.8023 271.325 39.4516C271.964 39.0687 272.739 39.6758 272.52 40.3883C272.32 41.0409 272.964 41.6352 273.598 41.383C274.291 41.1076 274.958 41.8312 274.628 42.4993C274.326 43.1113 274.866 43.8013 275.533 43.6541C276.26 43.4934 276.803 44.3146 276.37 44.9211C275.973 45.4767 276.396 46.2444 277.078 46.2061C277.822 46.1642 278.226 47.0618 277.701 47.591C277.22 48.0758 277.515 48.9013 278.193 48.9728C278.935 49.0509 279.189 50.0017 278.586 50.4399C278.034 50.8412 278.192 51.7033 278.851 51.8828C279.57 52.0787 279.669 53.0581 279.004 53.3939C278.394 53.7014 278.412 54.5777 279.033 54.8605C279.711 55.1692 279.652 56.1518 278.941 56.3765C278.29 56.5823 278.167 57.45 278.735 57.8288C279.355 58.2424 279.139 59.2027 278.401 59.3105C277.726 59.4092 277.465 60.246 277.965 60.711C278.511 61.2187 278.143 62.1318 277.398 62.1199C276.715 62.109 276.324 62.8931 276.742 63.4323C277.2 64.0209 276.69 64.8633 275.957 64.732C275.285 64.6117 274.772 65.3228 275.099 65.9222C275.456 66.5765 274.818 67.3263 274.115 67.079C273.471 66.8525 272.851 67.4722 273.078 68.1163C273.325 68.8194 272.575 69.4571 271.921 69.1003C271.322 68.7734 270.61 69.2857 270.731 69.9577C270.862 70.6914 270.02 71.2006 269.431 70.7434C268.892 70.3246 268.108 70.7162 268.119 71.3988C268.13 72.144 267.217 72.5115 266.71 71.9658C266.245 71.466 265.408 71.7267 265.309 72.4022C265.201 73.1396 264.241 73.3559 263.827 72.7358C263.449 72.1679 262.581 72.291 262.375 72.9419C262.15 73.6525 261.168 73.7119 260.859 73.0336C260.576 72.4122 259.7 72.3945 259.392 73.004C259.057 73.6694 258.077 73.5704 257.881 72.8513C257.702 72.1926 256.84 72.0346 256.438 72.5868C256 73.1897 255.049 72.9349 254.971 72.1937C254.9 71.5148 254.074 71.2205 253.59 71.7012C253.06 72.226 252.163 71.822 252.205 71.0779C252.243 70.3963 251.475 69.9734 250.92 70.3701C250.313 70.8032 249.492 70.2604 249.653 69.5327C249.8 68.866 249.11 68.3255 248.498 68.628C247.83 68.9581 247.106 68.2907 247.382 67.5981C247.634 66.9637 247.04 66.3195 246.387 66.5199C245.675 66.7386 245.068 65.9637 245.451 65.3243C245.801 64.7386 245.318 64.0074 244.642 64.1005C243.903 64.2021 243.429 63.3399 243.909 62.7702C244.349 62.2483 243.99 61.4491 243.307 61.4325C242.562 61.4143 242.232 60.4871 242.797 60.0018C243.315 59.5573 243.089 58.7108 242.418 58.5849C241.685 58.4474 241.508 57.4792 242.144 57.091C242.727 56.7354 242.639 55.8634 241.996 55.6315C241.295 55.3783 241.276 54.3942 241.966 54.113C242.598 53.8555 242.651 52.9807 242.054 52.6488C241.403 52.2864 241.541 51.3119 242.268 51.1451C242.933 50.9923 243.126 50.1373 242.59 49.714C242.005 49.2519 242.298 48.3121 243.042 48.264C243.723 48.2199 244.051 47.4069 243.59 46.9032C243.087 46.3532 243.527 45.4726 244.268 45.5444C244.948 45.6102 245.401 44.8602 245.027 44.2891C244.619 43.6656 245.194 42.8669 245.915 43.0568C246.575 43.2308 247.143 42.5632 246.866 41.9395C246.563 41.2585 247.259 40.5625 247.94 40.8656C248.563 41.1431 249.231 40.5753 249.057 39.9152C248.867 39.1944 249.666 38.6191 250.289 39.0274C250.86 39.4015 251.61 38.9481 251.545 38.2686C251.473 37.5267 252.354 37.0869 252.903 37.59C253.407 38.0508 254.22 37.7236 254.264 37.0424C254.312 36.2986 255.252 36.0058 255.714 36.5905C256.138 37.1262 256.993 36.9336 257.145 36.2683Z\"\r\n          fill=\"#E15D85\"\r\n        />\r\n        <path\r\n          d=\"M295.444 80.0512C295.992 78.6256 298.008 78.6256 298.556 80.0512C299.057 81.3569 300.847 81.5014 301.552 80.293C302.321 78.9738 304.311 79.2973 304.623 80.7922C304.909 82.1615 306.652 82.5912 307.541 81.5114C308.512 80.3327 310.425 80.9713 310.493 82.4969C310.555 83.8942 312.207 84.5981 313.258 83.6749C314.405 82.6671 316.191 83.6044 316.013 85.121C315.851 86.5103 317.368 87.47 318.554 86.7274C319.848 85.9167 321.46 87.1283 321.041 88.5968C320.658 89.9419 322.002 91.1327 323.291 90.5898C324.698 89.9972 326.095 91.4517 325.447 92.834C324.852 94.1002 325.988 95.4912 327.347 95.1621C328.832 94.8029 329.977 96.4627 329.115 97.7231C328.325 98.8776 329.223 100.433 330.618 100.326C332.14 100.209 333.005 102.032 331.952 103.137C330.987 104.15 331.624 105.829 333.018 105.948C334.539 106.077 335.1 108.014 333.883 108.936C332.769 109.781 333.128 111.541 334.485 111.881C335.966 112.253 336.209 114.255 334.86 114.97C333.624 115.626 333.696 117.42 334.981 117.973C336.383 118.578 336.302 120.593 334.855 121.083C333.531 121.531 333.314 123.314 334.493 124.066C335.78 124.888 335.377 126.864 333.871 127.115C332.491 127.345 331.991 129.07 333.035 130.002C334.173 131.019 333.458 132.905 331.931 132.912C330.532 132.917 329.763 134.54 330.643 135.627C331.603 136.814 330.595 138.56 329.087 138.322C327.705 138.103 326.685 139.581 327.379 140.795C328.137 142.121 326.862 143.683 325.411 143.206C324.083 142.768 322.839 144.063 323.329 145.373C323.865 146.803 322.355 148.141 321 147.437C319.759 146.792 318.323 147.871 318.597 149.242C318.897 150.74 317.192 151.818 315.967 150.906C314.846 150.07 313.256 150.904 313.306 152.302C313.361 153.828 311.506 154.619 310.443 153.522C309.47 152.517 307.767 153.086 307.592 154.474C307.402 155.989 305.444 156.472 304.571 155.218C303.772 154.071 301.999 154.359 301.604 155.701C301.173 157.166 299.163 157.328 298.503 155.951C297.898 154.69 296.102 154.69 295.497 155.951C294.837 157.328 292.827 157.166 292.396 155.701C292.001 154.359 290.228 154.071 289.429 155.218C288.556 156.472 286.598 155.989 286.408 154.474C286.233 153.086 284.53 152.517 283.557 153.522C282.494 154.619 280.639 153.828 280.694 152.302C280.744 150.904 279.154 150.07 278.033 150.906C276.808 151.818 275.103 150.74 275.403 149.242C275.677 147.871 274.241 146.792 273 147.437C271.645 148.141 270.135 146.803 270.671 145.373C271.161 144.063 269.917 142.768 268.589 143.206C267.138 143.683 265.863 142.121 266.621 140.795C267.315 139.581 266.295 138.103 264.913 138.322C263.405 138.56 262.397 136.814 263.357 135.627C264.237 134.54 263.468 132.917 262.069 132.912C260.542 132.905 259.827 131.019 260.965 130.002C262.009 129.07 261.509 127.345 260.129 127.115C258.623 126.864 258.22 124.888 259.507 124.066C260.686 123.314 260.469 121.531 259.145 121.083C257.698 120.593 257.617 118.578 259.019 117.973C260.304 117.42 260.376 115.626 259.14 114.97C257.791 114.255 258.034 112.253 259.515 111.881C260.872 111.541 261.231 109.781 260.117 108.936C258.9 108.014 259.461 106.077 260.982 105.948C262.376 105.829 263.013 104.15 262.048 103.137C260.995 102.032 261.86 100.209 263.382 100.326C264.777 100.433 265.675 98.8776 264.885 97.7231C264.023 96.4627 265.168 94.8029 266.653 95.1621C268.012 95.4912 269.148 94.1002 268.553 92.834C267.905 91.4517 269.302 89.9972 270.709 90.5898C271.998 91.1327 273.342 89.9419 272.959 88.5968C272.54 87.1283 274.152 85.9167 275.446 86.7274C276.632 87.47 278.149 86.5103 277.987 85.121C277.809 83.6044 279.595 82.6671 280.742 83.6749C281.793 84.5981 283.445 83.8942 283.507 82.4968C283.575 80.9713 285.488 80.3327 286.459 81.5114C287.348 82.5912 289.091 82.1615 289.377 80.7922C289.689 79.2973 291.679 78.9738 292.448 80.293C293.153 81.5014 294.943 81.3569 295.444 80.0512Z\"\r\n          fill=\"#97AC83\"\r\n        />\r\n        <path\r\n          d=\"M290.638 86.8395C290.9 85.588 292.567 85.3182 293.211 86.4233C293.8 87.4356 295.299 87.3157 295.719 86.2226C296.179 85.0292 297.867 85.0304 298.325 86.2244C298.744 87.3181 300.243 87.4401 300.833 86.4287C301.478 85.3244 303.145 85.5965 303.405 86.8484C303.643 87.9952 305.103 88.356 305.848 87.4524C306.662 86.4659 308.263 87.0018 308.319 88.2793C308.37 89.4494 309.753 90.0397 310.634 89.2674C311.595 88.4241 313.09 89.21 312.94 90.4799C312.803 91.6431 314.073 92.4476 315.066 91.8264C316.15 91.1483 317.5 92.1638 317.148 93.3932C316.826 94.5194 317.951 95.5172 319.031 95.0634C320.209 94.568 321.378 95.7867 320.834 96.9439C320.336 98.0038 321.286 99.1691 322.425 98.8944C323.668 98.5945 324.626 99.985 323.903 101.04C323.241 102.006 323.992 103.309 325.16 103.22C326.435 103.124 327.158 104.65 326.276 105.575C325.467 106.423 325.999 107.829 327.166 107.929C328.44 108.038 328.909 109.66 327.89 110.432C326.956 111.139 327.255 112.612 328.391 112.898C329.631 113.21 329.834 114.887 328.703 115.485C327.668 116.033 327.728 117.536 328.803 118C329.977 118.507 329.908 120.194 328.696 120.603C327.587 120.978 327.404 122.471 328.391 123.101C329.469 123.79 329.13 125.445 327.868 125.654C326.713 125.846 326.293 127.29 327.166 128.071C328.119 128.924 327.519 130.502 326.241 130.507C325.069 130.511 324.424 131.869 325.16 132.78C325.964 133.774 325.119 135.236 323.856 135.035C322.699 134.851 321.844 136.088 322.425 137.105C323.059 138.216 321.99 139.523 320.775 139.123C319.663 138.756 318.621 139.839 319.031 140.936C319.478 142.134 318.213 143.253 317.079 142.663C316.04 142.122 314.837 143.025 315.066 144.173C315.316 145.427 313.888 146.329 312.863 145.564C311.924 144.864 310.592 145.562 310.634 146.732C310.679 148.01 309.125 148.671 308.236 147.752C307.422 146.91 305.995 147.385 305.848 148.547C305.688 149.816 304.048 150.219 303.318 149.169C302.649 148.208 301.165 148.448 300.833 149.571C300.472 150.798 298.788 150.932 298.236 149.779C297.73 148.723 296.227 148.722 295.719 149.777C295.166 150.93 293.482 150.793 293.122 149.566C292.792 148.442 291.309 148.2 290.638 149.16C289.907 150.209 288.268 149.804 288.109 148.535C287.964 147.373 286.538 146.896 285.722 147.736C284.832 148.654 283.279 147.991 283.326 146.713C283.369 145.543 282.038 144.843 281.098 145.542C280.072 146.305 278.646 145.402 278.897 144.148C279.127 143 277.926 142.096 276.886 142.635C275.751 143.223 274.488 142.103 274.937 140.906C275.349 139.809 274.308 138.724 273.195 139.089C271.98 139.488 270.913 138.179 271.548 137.07C272.13 136.053 271.277 134.815 270.12 134.998C268.857 135.197 268.014 133.733 268.819 132.74C269.557 131.83 268.913 130.471 267.742 130.466C266.463 130.459 265.865 128.88 266.819 128.029C267.693 127.249 267.276 125.804 266.121 125.611C264.86 125.4 264.523 123.745 265.601 123.058C266.589 122.428 266.409 120.935 265.3 120.559C264.089 120.148 264.022 118.461 265.197 117.955C266.273 117.493 266.334 115.99 265.3 115.441C264.171 114.841 264.375 113.165 265.616 112.854C266.752 112.57 267.054 111.097 266.121 110.389C265.102 109.616 265.573 107.994 266.848 107.887C268.015 107.788 268.549 106.383 267.742 105.534C266.86 104.608 267.585 103.082 268.86 103.181C270.028 103.271 270.781 101.969 270.12 101.002C269.399 99.9464 270.359 98.5572 271.602 98.8589C272.74 99.1352 273.692 97.9712 273.195 96.9106C272.652 95.7527 273.823 94.5355 275.001 95.0326C276.08 95.4879 277.206 94.4916 276.886 93.3651C276.536 92.1352 277.887 91.1216 278.97 91.8012C279.962 92.4237 281.234 91.621 281.098 90.4576C280.95 89.1875 282.446 88.4038 283.406 89.2483C284.286 90.0219 285.669 89.4335 285.722 88.2635C285.78 86.9861 287.382 86.4525 288.194 87.4401C288.938 88.3447 290.399 87.9859 290.638 86.8395Z\"\r\n          fill=\"#849970\"\r\n        />\r\n        <path\r\n          d=\"M295.419 92.3243C295.77 91.3513 297.135 91.3233 297.526 92.281C297.884 93.1582 299.098 93.2311 299.558 92.4031C300.06 91.499 301.413 91.6904 301.645 92.6983C301.857 93.6216 303.044 93.8883 303.631 93.1448C304.272 92.3331 305.576 92.7389 305.643 93.771C305.705 94.7164 306.833 95.17 307.532 94.5303C308.295 93.8319 309.517 94.4417 309.418 95.4712C309.327 96.4142 310.368 97.043 311.16 96.5236C312.025 95.9566 313.134 96.7546 312.871 97.7549C312.63 98.6711 313.557 99.4587 314.422 99.0732C315.367 98.6523 316.333 99.6178 315.913 100.563C315.528 101.429 316.317 102.355 317.233 102.113C318.233 101.849 319.031 102.957 318.465 103.823C317.946 104.615 318.576 105.656 319.519 105.564C320.548 105.464 321.159 106.686 320.461 107.449C319.822 108.149 320.277 109.277 321.222 109.337C322.254 109.404 322.661 110.708 321.85 111.349C321.107 111.937 321.375 113.124 322.298 113.335C323.306 113.566 323.499 114.919 322.595 115.422C321.767 115.883 321.841 117.097 322.719 117.454C323.677 117.843 323.65 119.209 322.677 119.561C321.786 119.883 321.665 121.093 322.473 121.586C323.357 122.125 323.111 123.468 322.094 123.66C321.163 123.835 320.849 125.009 321.568 125.626C322.354 126.299 321.896 127.586 320.862 127.612C319.915 127.635 319.416 128.744 320.027 129.468C320.694 130.259 320.035 131.455 319.011 131.315C318.072 131.186 317.402 132.201 317.889 133.014C318.421 133.901 317.579 134.976 316.59 134.673C315.684 134.395 314.86 135.29 315.21 136.17C315.593 137.131 314.589 138.057 313.662 137.6C312.812 137.18 311.855 137.931 312.06 138.856C312.283 139.866 311.144 140.619 310.302 140.019C309.531 139.468 308.466 140.056 308.519 141.001C308.578 142.034 307.332 142.595 306.598 141.867C305.925 141.2 304.779 141.609 304.68 142.551C304.573 143.58 303.253 143.934 302.645 143.098C302.088 142.332 300.891 142.551 300.643 143.465C300.371 144.463 299.012 144.601 298.546 143.678C298.119 142.832 296.903 142.857 296.511 143.72C296.083 144.661 294.719 144.58 294.407 143.593C294.121 142.69 292.917 142.52 292.391 143.308C291.818 144.169 290.485 143.869 290.335 142.846C290.197 141.909 289.036 141.547 288.391 142.241C287.687 142.999 286.42 142.489 286.436 141.455C286.45 140.508 285.362 139.965 284.614 140.546C283.798 141.181 282.628 140.475 282.81 139.457C282.976 138.524 281.989 137.814 281.158 138.267C280.25 138.763 279.209 137.878 279.552 136.903C279.866 136.009 279.005 135.149 278.112 135.464C277.136 135.807 276.251 134.767 276.746 133.859C277.199 133.027 276.488 132.04 275.555 132.208C274.537 132.39 273.83 131.222 274.464 130.404C275.045 129.656 274.501 128.568 273.554 128.584C272.52 128.601 272.009 127.334 272.766 126.629C273.459 125.983 273.097 124.822 272.16 124.686C271.136 124.536 270.836 123.204 271.696 122.63C272.484 122.104 272.312 120.9 271.409 120.614C270.423 120.303 270.34 118.939 271.281 118.511C272.143 118.118 272.167 116.902 271.321 116.475C270.397 116.01 270.534 114.65 271.532 114.378C272.446 114.129 272.665 112.932 271.898 112.376C271.061 111.768 271.414 110.448 272.443 110.34C273.385 110.24 273.793 109.094 273.125 108.422C272.397 107.688 272.957 106.442 273.99 106.5C274.935 106.552 275.522 105.487 274.971 104.716C274.37 103.875 275.122 102.735 276.132 102.957C277.058 103.161 277.807 102.204 277.387 101.354C276.929 100.427 277.854 99.423 278.816 99.8048C279.696 100.154 280.59 99.3294 280.311 98.4239C280.007 97.4353 281.082 96.5924 281.97 97.1234C282.783 97.6097 283.797 96.9388 283.668 96.0003C283.526 94.9757 284.722 94.3162 285.513 94.9827C286.238 95.5932 287.347 95.0936 287.369 94.1465C287.394 93.1125 288.681 92.6534 289.354 93.4381C289.971 94.1569 291.146 93.8417 291.32 92.9105C291.511 91.8939 292.854 91.6471 293.393 92.5297C293.887 93.3382 295.097 93.2155 295.419 92.3243Z\"\r\n          fill=\"#97AC83\"\r\n        />\r\n        <path\r\n          d=\"M288.868 98.8904C288.872 98.0554 289.904 97.6655 290.459 98.2888C290.968 98.8598 291.912 98.5877 292.039 97.8334C292.177 97.0099 293.258 96.7906 293.706 97.4949C294.117 98.1401 295.092 98.0229 295.338 97.2987C295.606 96.5081 296.708 96.4649 297.038 97.2321C297.34 97.9348 298.321 97.9755 298.68 97.3001C299.072 96.5629 300.167 96.6971 300.369 97.5072C300.554 98.2492 301.516 98.4467 301.979 97.8377C302.484 97.1729 303.543 97.4809 303.613 98.313C303.676 99.0751 304.594 99.4244 305.148 98.8975C305.754 98.3223 306.75 98.7962 306.685 99.6287C306.626 100.391 307.475 100.883 308.107 100.452C308.797 99.9813 309.704 100.609 309.506 101.42C309.326 102.163 310.086 102.785 310.778 102.461C311.535 102.107 312.329 102.872 312.004 103.641C311.706 104.346 312.357 105.081 313.092 104.872C313.896 104.644 314.557 105.527 314.113 106.234C313.706 106.882 314.23 107.712 314.99 107.624C315.819 107.528 316.331 108.505 315.779 109.131C315.274 109.705 315.657 110.609 316.421 110.644C317.255 110.682 317.604 111.729 316.958 112.259C316.367 112.744 316.601 113.698 317.35 113.855C318.167 114.026 318.343 115.115 317.621 115.535C316.96 115.919 317.038 116.898 317.751 117.173C318.53 117.473 318.529 118.576 317.749 118.874C317.035 119.148 316.955 120.126 317.615 120.512C318.336 120.934 318.158 122.022 317.34 122.191C316.591 122.347 316.355 123.3 316.945 123.787C317.589 124.318 317.239 125.364 316.405 125.4C315.641 125.433 315.255 126.336 315.759 126.911C316.309 127.539 315.795 128.515 314.966 128.417C314.207 128.327 313.681 129.156 314.086 129.805C314.529 130.513 313.865 131.394 313.063 131.164C312.327 130.954 311.675 131.688 311.971 132.393C312.295 133.163 311.498 133.926 310.743 133.57C310.051 133.245 309.29 133.865 309.469 134.608C309.664 135.42 308.756 136.045 308.067 135.573C307.437 135.141 306.586 135.631 306.643 136.393C306.706 137.226 305.709 137.698 305.105 137.121C304.552 136.593 303.633 136.94 303.568 137.702C303.496 138.534 302.437 138.84 301.933 138.174C301.472 137.564 300.509 137.759 300.322 138.5C300.118 139.31 299.023 139.442 298.633 138.704C298.275 138.027 297.294 138.066 296.991 138.768C296.659 139.534 295.558 139.489 295.291 138.697C295.046 137.973 294.072 137.853 293.659 138.498C293.209 139.201 292.129 138.979 291.993 138.155C291.868 137.401 290.925 137.126 290.415 137.696C289.858 138.318 288.827 137.926 288.824 137.091C288.822 136.326 287.935 135.904 287.34 136.385C286.691 136.91 285.736 136.357 285.868 135.532C285.988 134.777 285.181 134.218 284.516 134.597C283.791 135.011 282.938 134.313 283.2 133.52C283.44 132.794 282.732 132.113 282.016 132.38C281.233 132.672 280.503 131.846 280.889 131.105C281.242 130.427 280.653 129.641 279.903 129.79C279.084 129.953 278.496 129.02 278.995 128.351C279.453 127.738 278.998 126.868 278.233 126.895C277.399 126.924 276.968 125.909 277.568 125.329C278.118 124.797 277.808 123.866 277.049 123.769C276.221 123.664 275.958 122.593 276.644 122.117C277.272 121.68 277.116 120.711 276.382 120.494C275.581 120.258 275.494 119.158 276.247 118.798C276.937 118.468 276.938 117.486 276.249 117.155C275.497 116.793 275.587 115.694 276.388 115.459C277.122 115.244 277.281 114.275 276.653 113.837C275.969 113.359 276.234 112.289 277.062 112.185C277.821 112.091 278.133 111.16 277.585 110.627C276.986 110.046 277.419 109.031 278.253 109.063C279.018 109.091 279.475 108.222 279.019 107.608C278.521 106.938 279.111 106.007 279.93 106.171C280.68 106.322 281.27 105.538 280.919 104.858C280.535 104.117 281.267 103.292 282.048 103.586C282.764 103.855 283.473 103.176 283.235 102.449C282.975 101.656 283.83 100.959 284.554 101.374C285.218 101.755 286.026 101.198 285.908 100.442C285.778 99.6174 286.734 99.0671 287.382 99.5932C287.976 100.075 288.864 99.6552 288.868 98.8904Z\"\r\n          fill=\"#849970\"\r\n        />\r\n        <path\r\n          d=\"M289.128 105.618C289.035 105.036 289.709 104.645 290.168 105.016C290.589 105.355 291.215 105.056 291.216 104.516C291.218 103.926 291.946 103.649 292.34 104.088C292.7 104.49 293.366 104.296 293.454 103.763C293.55 103.181 294.313 103.024 294.632 103.521C294.923 103.976 295.612 103.891 295.784 103.379C295.972 102.82 296.75 102.787 296.985 103.328C297.2 103.824 297.893 103.851 298.145 103.373C298.421 102.851 299.194 102.944 299.339 103.516C299.471 104.04 300.151 104.177 300.477 103.746C300.832 103.275 301.581 103.491 301.632 104.079C301.678 104.617 302.327 104.862 302.718 104.488C303.144 104.081 303.849 104.414 303.805 105.002C303.765 105.541 304.366 105.886 304.811 105.581C305.298 105.247 305.94 105.688 305.802 106.262C305.676 106.787 306.214 107.225 306.702 106.995C307.236 106.743 307.799 107.282 307.571 107.826C307.362 108.324 307.823 108.843 308.342 108.693C308.909 108.531 309.378 109.153 309.066 109.653C308.78 110.112 309.152 110.697 309.688 110.633C310.274 110.564 310.637 111.253 310.249 111.697C309.893 112.103 310.166 112.741 310.706 112.764C311.295 112.789 311.543 113.528 311.088 113.904C310.672 114.248 310.839 114.921 311.368 115.031C311.946 115.15 312.072 115.919 311.563 116.217C311.096 116.49 311.153 117.181 311.658 117.374C312.209 117.584 312.211 118.363 311.66 118.576C311.156 118.77 311.102 119.462 311.569 119.733C312.079 120.03 311.955 120.799 311.378 120.92C310.849 121.031 310.684 121.705 311.102 122.048C311.558 122.422 311.313 123.162 310.723 123.189C310.184 123.214 309.913 123.852 310.27 124.258C310.66 124.7 310.299 125.391 309.713 125.323C309.177 125.261 308.807 125.848 309.094 126.305C309.409 126.805 308.942 127.428 308.374 127.268C307.854 127.12 307.395 127.64 307.606 128.138C307.835 128.681 307.274 129.222 306.74 128.972C306.251 128.743 305.714 129.183 305.842 129.708C305.982 130.281 305.341 130.725 304.854 130.392C304.407 130.088 303.807 130.436 303.849 130.975C303.895 131.563 303.192 131.898 302.764 131.492C302.372 131.12 301.724 131.367 301.679 131.905C301.63 132.493 300.883 132.711 300.525 132.242C300.198 131.812 299.519 131.952 299.388 132.476C299.246 133.048 298.472 133.144 298.195 132.623C297.941 132.146 297.248 132.175 297.035 132.672C296.803 133.214 296.024 133.184 295.834 132.625C295.66 132.114 294.971 132.031 294.681 132.487C294.365 132.985 293.601 132.831 293.503 132.249C293.413 131.716 292.747 131.524 292.387 131.928C291.995 132.368 291.266 132.093 291.263 131.504C291.259 130.963 290.632 130.667 290.213 131.008C289.755 131.38 289.08 130.991 289.171 130.408C289.254 129.875 288.683 129.481 288.214 129.75C287.703 130.044 287.098 129.552 287.282 128.992C287.45 128.478 286.949 127.999 286.443 128.189C285.891 128.397 285.373 127.814 285.644 127.291C285.893 126.811 285.475 126.257 284.945 126.364C284.367 126.48 283.949 125.822 284.301 125.349C284.623 124.915 284.3 124.301 283.76 124.322C283.17 124.344 282.864 123.628 283.287 123.217C283.674 122.84 283.453 122.182 282.917 122.116C282.332 122.043 282.144 121.287 282.627 120.949C283.07 120.64 282.958 119.955 282.439 119.804C281.873 119.638 281.809 118.862 282.34 118.606C282.827 118.371 282.826 117.677 282.338 117.445C281.806 117.19 281.868 116.414 282.433 116.246C282.951 116.093 283.061 115.408 282.617 115.1C282.133 114.764 282.318 114.007 282.903 113.932C283.439 113.864 283.658 113.206 283.269 112.83C282.844 112.421 283.149 111.703 283.738 111.724C284.278 111.742 284.599 111.128 284.276 110.695C283.923 110.222 284.338 109.563 284.917 109.678C285.447 109.783 285.862 109.227 285.613 108.748C285.34 108.225 285.855 107.641 286.408 107.847C286.914 108.036 287.414 107.554 287.244 107.041C287.059 106.481 287.661 105.988 288.174 106.28C288.643 106.547 289.214 106.152 289.128 105.618Z\"\r\n          fill=\"#97AC83\"\r\n        />\r\n        <path\r\n          d=\"M295.158 107.99C295.25 107.592 295.785 107.516 295.984 107.873C296.166 108.201 296.646 108.172 296.788 107.825C296.942 107.446 297.483 107.457 297.622 107.842C297.749 108.194 298.228 108.242 298.423 107.923C298.636 107.573 299.168 107.671 299.243 108.073C299.312 108.441 299.777 108.566 300.021 108.281C300.287 107.971 300.796 108.152 300.806 108.561C300.815 108.936 301.254 109.133 301.541 108.892C301.854 108.628 302.327 108.889 302.271 109.294C302.22 109.665 302.621 109.931 302.943 109.738C303.294 109.528 303.719 109.861 303.599 110.252C303.489 110.611 303.843 110.937 304.191 110.799C304.572 110.647 304.938 111.045 304.757 111.411C304.591 111.747 304.887 112.126 305.253 112.045C305.653 111.957 305.951 112.408 305.713 112.741C305.495 113.046 305.727 113.468 306.102 113.447C306.51 113.424 306.732 113.916 306.444 114.207C306.18 114.473 306.341 114.926 306.714 114.966C307.121 115.008 307.261 115.53 306.93 115.771C306.627 115.991 306.713 116.465 307.075 116.563C307.47 116.671 307.524 117.208 307.159 117.393C306.824 117.562 306.834 118.043 307.175 118.198C307.548 118.367 307.515 118.907 307.125 119.03C306.767 119.143 306.7 119.62 307.012 119.828C307.352 120.055 307.233 120.582 306.828 120.641C306.457 120.695 306.314 121.155 306.589 121.41C306.888 121.689 306.687 122.19 306.277 122.184C305.903 122.178 305.688 122.608 305.918 122.904C306.169 123.227 305.889 123.69 305.486 123.618C305.117 123.552 304.836 123.942 305.015 124.271C305.211 124.63 304.861 125.042 304.475 124.906C304.121 124.782 303.781 125.122 303.906 125.476C304.041 125.862 303.63 126.212 303.27 126.016C302.941 125.836 302.551 126.118 302.617 126.487C302.689 126.889 302.227 127.169 301.903 126.918C301.607 126.688 301.177 126.903 301.183 127.278C301.189 127.687 300.688 127.889 300.409 127.589C300.154 127.315 299.695 127.458 299.64 127.829C299.581 128.234 299.054 128.352 298.827 128.012C298.619 127.7 298.143 127.768 298.03 128.125C297.906 128.515 297.367 128.548 297.197 128.175C297.042 127.834 296.561 127.824 296.392 128.159C296.208 128.524 295.67 128.47 295.562 128.075C295.464 127.714 294.991 127.627 294.77 127.93C294.53 128.261 294.008 128.121 293.965 127.714C293.926 127.341 293.472 127.18 293.206 127.444C292.916 127.732 292.423 127.51 292.446 127.102C292.467 126.727 292.045 126.495 291.74 126.713C291.407 126.951 290.957 126.653 291.045 126.253C291.126 125.887 290.747 125.591 290.411 125.757C290.044 125.938 289.647 125.571 289.798 125.191C289.936 124.843 289.61 124.489 289.252 124.599C288.861 124.719 288.527 124.294 288.738 123.943C288.93 123.621 288.665 123.22 288.294 123.271C287.888 123.327 287.628 122.853 287.891 122.541C288.133 122.254 287.936 121.815 287.561 121.806C287.152 121.796 286.97 121.287 287.281 121.021C287.565 120.777 287.441 120.312 287.072 120.243C286.67 120.167 286.573 119.636 286.922 119.423C287.242 119.227 287.194 118.749 286.841 118.621C286.456 118.482 286.446 117.942 286.825 117.788C287.172 117.646 287.201 117.166 286.873 116.984C286.516 116.785 286.592 116.25 286.99 116.158C287.356 116.074 287.461 115.605 287.167 115.372C286.846 115.119 287.007 114.603 287.415 114.576C287.789 114.552 287.969 114.106 287.716 113.829C287.44 113.527 287.681 113.044 288.089 113.083C288.462 113.119 288.711 112.708 288.505 112.394C288.281 112.052 288.597 111.613 288.993 111.718C289.355 111.813 289.667 111.447 289.515 111.104C289.348 110.73 289.73 110.348 290.104 110.514C290.447 110.667 290.813 110.355 290.718 109.993C290.613 109.597 291.052 109.281 291.394 109.505C291.708 109.711 292.12 109.462 292.083 109.089C292.044 108.681 292.528 108.44 292.829 108.716C293.106 108.969 293.552 108.789 293.577 108.415C293.603 108.007 294.119 107.846 294.373 108.167C294.605 108.461 295.074 108.356 295.158 107.99Z\"\r\n          fill=\"#849970\"\r\n        />\r\n        <path\r\n          d=\"M212.584 43.3393C218.12 39.0243 225.88 39.0243 231.416 43.3393C233.958 45.3203 237.06 46.4493 240.28 46.5655C247.295 46.8185 253.239 51.8069 254.707 58.6707C255.38 61.8221 257.031 64.6807 259.423 66.8398C264.634 71.5424 265.981 79.185 262.693 85.3861C261.184 88.2333 260.611 91.484 261.055 94.6757C262.024 101.627 258.144 108.348 251.639 110.985C248.653 112.196 246.124 114.317 244.413 117.048C240.687 122.996 233.394 125.651 226.716 123.489C223.65 122.497 220.35 122.497 217.284 123.489C210.606 125.651 203.313 122.996 199.587 117.048C197.876 114.317 195.347 112.196 192.361 110.985C185.856 108.348 181.976 101.627 182.945 94.6757C183.389 91.484 182.816 88.2333 181.307 85.3861C178.019 79.185 179.366 71.5424 184.577 66.8398C186.969 64.6807 188.62 61.8221 189.293 58.6707C190.761 51.8069 196.705 46.8185 203.72 46.5655C206.94 46.4493 210.042 45.3203 212.584 43.3393Z\"\r\n          fill=\"#F9A626\"\r\n        />\r\n        <path\r\n          d=\"M208.912 51.4758C212.911 47.1687 219.326 46.1308 224.479 48.9571C226.845 50.2547 229.56 50.773 232.237 50.4384C238.069 49.7094 243.651 53.0377 245.781 58.5151C246.76 61.03 248.506 63.1722 250.772 64.6369C255.709 67.8272 257.845 73.9643 255.956 79.5299C255.089 82.0853 255.05 84.849 255.844 87.4277C257.575 93.0445 255.267 99.1188 250.242 102.168C247.936 103.569 246.129 105.661 245.08 108.147C242.796 113.562 237.123 116.731 231.314 115.838C228.647 115.428 225.918 115.869 223.516 117.099C218.285 119.779 211.903 118.56 208.027 114.142C206.247 112.113 203.874 110.698 201.243 110.096C195.513 108.787 191.407 103.75 191.278 97.8744C191.219 95.1767 190.311 92.5663 188.682 90.4148C185.135 85.7286 185.226 79.2311 188.905 74.647C190.593 72.5424 191.575 69.9587 191.711 67.2637C192.006 61.3938 196.252 56.4753 202.017 55.328C204.663 54.8013 207.076 53.4532 208.912 51.4758Z\"\r\n          fill=\"#F29C16\"\r\n        />\r\n        <path\r\n          d=\"M215.071 56.2743C218.76 53.2754 224.015 53.1675 227.824 56.0123C229.573 57.3185 231.689 58.0398 233.871 58.0737C238.625 58.1474 242.72 61.4426 243.809 66.0702C244.309 68.1948 245.466 70.1076 247.116 71.5363C250.71 74.6483 251.729 79.8047 249.589 84.0497C248.606 85.9986 248.263 88.2079 248.609 90.363C249.361 95.057 246.827 99.662 242.459 101.538C240.454 102.399 238.771 103.871 237.651 105.744C235.21 109.824 230.309 111.723 225.757 110.352C223.667 109.723 221.431 109.769 219.369 110.484C214.877 112.04 209.902 110.344 207.296 106.368C206.099 104.543 204.358 103.141 202.318 102.363C197.877 100.668 195.156 96.1707 195.715 91.4497C195.972 89.2822 195.539 87.089 194.477 85.182C192.164 81.0286 192.97 75.8346 196.433 72.5777C198.023 71.0823 199.101 69.1236 199.513 66.9803C200.411 62.3119 204.368 58.8513 209.114 58.5823C211.293 58.4589 213.378 57.6512 215.071 56.2743Z\"\r\n          fill=\"#F9A626\"\r\n        />\r\n        <path\r\n          d=\"M209.516 64.5342C211.513 61.257 215.483 59.7568 219.149 60.8936C220.832 61.4155 222.636 61.3933 224.306 60.8302C227.943 59.6036 231.948 61.0058 234.025 64.233C234.979 65.7146 236.376 66.8577 238.017 67.4996C241.591 68.8976 243.758 72.5462 243.275 76.3536C243.053 78.1017 243.388 79.8753 244.233 81.4218C246.072 84.7903 245.387 88.978 242.57 91.5842C241.276 92.7808 240.393 94.3548 240.046 96.0824C239.29 99.8452 236.073 102.613 232.239 102.798C230.479 102.883 228.791 103.521 227.414 104.622C224.417 107.018 220.173 107.07 217.118 104.748C215.715 103.682 214.011 103.086 212.249 103.044C208.413 102.952 205.129 100.265 204.28 96.522C203.891 94.8035 202.969 93.2516 201.647 92.0871C198.766 89.551 197.978 85.3814 199.734 81.9687C200.54 80.4019 200.832 78.6207 200.567 76.8786C199.991 73.0841 202.067 69.3834 205.606 67.898C207.231 67.216 208.599 66.0389 209.516 64.5342Z\"\r\n          fill=\"#F29C16\"\r\n        />\r\n        <path\r\n          d=\"M211.17 71.5691C212.184 69.0546 214.778 67.5512 217.464 67.9209C218.697 68.0906 219.952 67.867 221.051 67.282C223.444 66.0077 226.398 66.5232 228.218 68.533C229.053 69.4557 230.159 70.0914 231.376 70.3495C234.029 70.9118 235.96 73.2049 236.062 75.9144C236.109 77.1584 236.547 78.3558 237.314 79.3364C238.985 81.472 238.99 84.4698 237.327 86.6112C236.563 87.5944 236.129 88.7933 236.086 90.0375C235.993 92.7473 234.07 95.047 231.42 95.6184C230.203 95.8807 229.1 96.5201 228.267 97.4457C226.454 99.4617 223.503 99.9873 221.105 98.7212C220.004 98.1399 218.748 97.9207 217.515 98.0946C214.831 98.4735 212.232 96.979 211.209 94.468C210.739 93.3151 209.918 92.3397 208.862 91.6806C206.562 90.2451 205.532 87.4298 206.362 84.8487C206.743 83.6637 206.741 82.3886 206.356 81.2049C205.516 78.6266 206.537 75.8079 208.832 74.3645C209.886 73.7018 210.704 72.7236 211.17 71.5691Z\"\r\n          fill=\"#F9A626\"\r\n        />\r\n        <path\r\n          d=\"M218.008 72.8322C219.314 71.479 221.373 71.1869 223.004 72.1233C223.753 72.5532 224.619 72.7359 225.478 72.6455C227.348 72.4486 229.113 73.5483 229.761 75.3141C230.058 76.1248 230.603 76.8211 231.319 77.3038C232.879 78.3553 233.524 80.3322 232.885 82.1011C232.592 82.9133 232.562 83.7973 232.8 84.6274C233.319 86.4352 232.543 88.3643 230.916 89.3087C230.169 89.7424 229.578 90.4005 229.227 91.1894C228.463 92.9077 226.628 93.8864 224.775 93.5644C223.924 93.4165 223.048 93.5408 222.272 93.9195C220.582 94.7442 218.547 94.3146 217.335 92.8768C216.778 92.2166 216.027 91.7489 215.189 91.5401C213.364 91.0854 212.082 89.4485 212.077 87.5677C212.075 86.7041 211.801 85.8633 211.293 85.1648C210.187 83.6433 210.257 81.565 211.462 80.1212C212.016 79.4584 212.346 78.6378 212.406 77.7764C212.537 75.9002 213.927 74.353 215.778 74.0218C216.628 73.8697 217.408 73.4534 218.008 72.8322Z\"\r\n          fill=\"#F29C16\"\r\n        />\r\n        <path\r\n          d=\"M140.32 -52.8961C147.187 -58.2485 156.813 -58.2485 163.68 -52.8961L168.415 -49.2056C171.568 -46.7482 175.416 -45.3478 179.41 -45.2037L185.41 -44.9873C194.111 -44.6734 201.485 -38.4856 203.305 -29.9714L204.56 -24.1009C205.395 -20.1918 207.443 -16.6458 210.41 -13.9676L214.867 -9.94556C221.33 -4.11223 223.002 5.3679 218.923 13.0601L216.111 18.3638C214.238 21.8955 213.527 25.9278 214.079 29.8869L214.908 35.8326C216.11 44.4559 211.296 52.7926 203.228 56.0634L197.664 58.3187C193.96 59.8204 190.823 62.4523 188.701 65.8399L185.514 70.9272C180.891 78.3055 171.845 81.5979 163.562 78.9169L157.85 77.0685C154.047 75.8376 149.953 75.8376 146.15 77.0685L140.438 78.9169C132.155 81.5979 123.109 78.3055 118.486 70.9272L115.299 65.8399C113.177 62.4523 110.04 59.8204 106.336 58.3187L100.772 56.0635C92.7036 52.7926 87.8904 44.4559 89.0922 35.8326L89.9208 29.8869C90.4726 25.9278 89.7616 21.8955 87.889 18.3638L85.0768 13.0601C80.9982 5.3679 82.6698 -4.11223 89.1333 -9.94556L93.5899 -13.9676C96.5574 -16.6458 98.6047 -20.1918 99.4403 -24.1009L100.695 -29.9714C102.515 -38.4856 109.889 -44.6734 118.59 -44.9873L124.59 -45.2037C128.584 -45.3478 132.432 -46.7482 135.585 -49.2056L140.32 -52.8961Z\"\r\n          fill=\"#97AC83\"\r\n        />\r\n        <path\r\n          d=\"M131.893 -38.1425C137.817 -44.523 147.32 -46.0605 154.954 -41.8737L156.372 -41.0957C159.877 -39.1734 163.899 -38.4055 167.866 -38.9013L169.471 -39.1019C178.111 -40.1818 186.378 -35.2513 189.535 -27.1371L190.122 -25.6293C191.571 -21.9039 194.158 -18.7304 197.515 -16.5606L198.874 -15.6824C206.186 -10.9563 209.351 -1.86488 206.553 6.38L206.033 7.91205C204.749 11.6975 204.691 15.7916 205.868 19.6118L206.344 21.1579C208.908 29.4785 205.488 38.4769 198.045 42.9946L196.662 43.834C193.245 45.9082 190.569 49.0073 189.015 52.6903L188.386 54.1809C185.002 62.2028 176.598 66.8977 167.992 65.5743L166.393 65.3284C162.442 64.7207 158.401 65.3747 154.843 67.1973L153.403 67.9349C145.654 71.9044 136.198 70.0991 130.457 63.5538L129.39 62.3376C126.754 59.3325 123.237 57.2353 119.34 56.3446L117.763 55.9841C109.275 54.044 103.193 46.5831 103.002 37.8786L102.966 36.2611C102.878 32.2647 101.532 28.3977 99.1198 25.2104L98.1434 23.9205C92.8885 16.9785 93.0245 7.35308 98.4733 0.562277L99.4858 -0.69957C101.988 -3.81739 103.442 -7.64483 103.643 -11.6372L103.724 -13.253C104.161 -21.9487 110.452 -29.2347 118.991 -30.9343L120.578 -31.2502C124.498 -32.0305 128.073 -34.0275 130.793 -36.9569L131.893 -38.1425Z\"\r\n          fill=\"#849970\"\r\n        />\r\n        <path\r\n          d=\"M140.944 -29.6473C146.83 -34.4328 155.216 -34.6051 161.294 -30.0654C164.084 -27.9812 167.461 -26.8301 170.944 -26.7761C178.529 -26.6583 185.064 -21.4001 186.801 -14.0157C187.599 -10.6254 189.446 -7.57304 192.079 -5.2931C197.814 -0.327248 199.44 7.90117 196.025 14.675C194.457 17.785 193.909 21.3104 194.461 24.7494C195.662 32.2398 191.619 39.5882 184.648 42.582C181.448 43.9565 178.763 46.3053 176.974 49.2943C173.08 55.8044 165.259 58.8344 157.995 56.6472C154.66 55.6431 151.093 55.7164 147.802 56.8567C140.634 59.3403 132.695 56.6342 128.536 50.2895C126.627 47.3765 123.848 45.1399 120.594 43.8981C113.506 41.1931 109.164 34.017 110.056 26.4836C110.466 23.0248 109.775 19.5249 108.08 16.4819C104.39 9.85409 105.676 1.56583 111.202 -3.63139C113.739 -6.01756 115.459 -9.14316 116.117 -12.5634C117.55 -20.0129 123.863 -25.5352 131.437 -25.9644C134.915 -26.1614 138.241 -27.4502 140.944 -29.6473Z\"\r\n          fill=\"#97AC83\"\r\n        />\r\n        <path\r\n          d=\"M132.079 -16.4665C135.266 -21.6962 141.6 -24.0901 147.45 -22.2761C150.136 -21.4432 153.016 -21.4786 155.68 -22.3772C161.483 -24.3345 167.874 -22.0969 171.189 -16.9472C172.711 -14.5829 174.94 -12.7588 177.559 -11.7345C183.263 -9.50366 186.72 -3.68149 185.949 2.39425C185.595 5.18377 186.13 8.01384 187.478 10.4817C190.413 15.8569 189.32 22.5394 184.824 26.6983C182.76 28.6077 181.35 31.1195 180.796 33.8763C179.59 39.8807 174.456 44.2967 168.339 44.5927C165.531 44.7286 162.836 45.7469 160.64 47.5026C155.856 51.3267 149.085 51.4099 144.209 47.7046C141.97 46.0034 139.252 45.0516 136.441 44.9848C130.318 44.8392 125.078 40.5507 123.724 34.5778C123.102 31.8355 121.632 29.359 119.521 27.5009C114.924 23.4538 113.667 16.8002 116.469 11.3545C117.756 8.85423 118.221 6.01186 117.799 3.23188C116.879 -2.82308 120.192 -8.72847 125.839 -11.0989C128.432 -12.1872 130.615 -14.0655 132.079 -16.4665Z\"\r\n          fill=\"#849970\"\r\n        />\r\n        <path\r\n          d=\"M134.717 -5.24081C136.336 -9.25335 140.474 -11.6523 144.761 -11.0624C146.729 -10.7916 148.732 -11.1484 150.485 -12.082C154.304 -14.1153 159.017 -13.2927 161.921 -10.0857C163.255 -8.61324 165.019 -7.59889 166.962 -7.18696C171.194 -6.28975 174.276 -2.63044 174.439 1.69316C174.514 3.67823 175.213 5.58907 176.437 7.15376C179.103 10.5618 179.111 15.3455 176.457 18.7626C175.239 20.3315 174.546 22.2447 174.478 24.23C174.329 28.5542 171.26 32.224 167.031 33.1357C165.089 33.5543 163.329 34.5747 162 36.0516C159.107 39.2686 154.397 40.1074 150.571 38.0871C148.815 37.1595 146.81 36.8096 144.843 37.0872C140.559 37.6917 136.412 35.3069 134.78 31.3C134.03 29.4603 132.72 27.9038 131.034 26.8521C127.364 24.5613 125.72 20.0688 127.045 15.9501C127.654 14.0591 127.65 12.0243 127.035 10.1354C125.696 6.02125 127.324 1.52319 130.987 -0.780112C132.669 -1.83762 133.974 -3.39856 134.717 -5.24081Z\"\r\n          fill=\"#97AC83\"\r\n        />\r\n        <path\r\n          d=\"M145.63 -3.22517C147.715 -5.38446 151 -5.85061 153.603 -4.3564C154.798 -3.67037 156.179 -3.37874 157.549 -3.523C160.534 -3.83721 163.351 -2.08246 164.384 0.735281C164.859 2.02897 165.729 3.14006 166.872 3.91042C169.36 5.58831 170.39 8.7429 169.37 11.5657C168.902 12.8617 168.855 14.2724 169.235 15.5969C170.062 18.4818 168.823 21.5602 166.228 23.0672C165.036 23.7592 164.093 24.8093 163.533 26.0682C162.313 28.8102 159.385 30.372 156.428 29.8581C155.07 29.6222 153.673 29.8205 152.434 30.4247C149.737 31.7409 146.49 31.0552 144.555 28.7609C143.667 27.7075 142.469 26.9611 141.132 26.628C138.22 25.9024 136.173 23.2902 136.166 20.2889C136.162 18.9109 135.724 17.5691 134.914 16.4545C133.15 14.0267 133.261 10.7102 135.185 8.40631C136.068 7.34854 136.595 6.03918 136.691 4.66455C136.9 1.67054 139.117 -0.7984 142.071 -1.32688C143.428 -1.56951 144.673 -2.23379 145.63 -3.22517Z\"\r\n          fill=\"#849970\"\r\n        />\r\n        <path\r\n          d=\"M400.32 6.10393C407.187 0.751534 416.813 0.751531 423.68 6.10393L428.415 9.79437C431.568 12.2518 435.416 13.6522 439.41 13.7963L445.41 14.0127C454.111 14.3266 461.485 20.5144 463.305 29.0286L464.56 34.8991C465.395 38.8082 467.443 42.3542 470.41 45.0324L474.867 49.0544C481.33 54.8878 483.002 64.3679 478.923 72.0601L476.111 77.3638C474.238 80.8955 473.527 84.9278 474.079 88.8869L474.908 94.8326C476.11 103.456 471.296 111.793 463.228 115.063L457.664 117.319C453.96 118.82 450.823 121.452 448.701 124.84L445.514 129.927C440.891 137.305 431.845 140.598 423.562 137.917L417.85 136.068C414.047 134.838 409.953 134.838 406.15 136.068L400.438 137.917C392.155 140.598 383.109 137.305 378.486 129.927L375.299 124.84C373.177 121.452 370.04 118.82 366.336 117.319L360.772 115.063C352.704 111.793 347.89 103.456 349.092 94.8326L349.921 88.8869C350.473 84.9278 349.762 80.8955 347.889 77.3638L345.077 72.0601C340.998 64.3679 342.67 54.8878 349.133 49.0544L353.59 45.0324C356.557 42.3542 358.605 38.8082 359.44 34.8991L360.695 29.0286C362.515 20.5144 369.889 14.3266 378.59 14.0127L384.59 13.7963C388.584 13.6522 392.432 12.2518 395.585 9.79437L400.32 6.10393Z\"\r\n          fill=\"#F9A626\"\r\n        />\r\n        <path\r\n          d=\"M391.893 20.8575C397.817 14.477 407.32 12.9395 414.954 17.1263L416.372 17.9043C419.877 19.8266 423.899 20.5945 427.866 20.0987L429.471 19.8981C438.111 18.8182 446.378 23.7487 449.535 31.8629L450.122 33.3707C451.571 37.0961 454.158 40.2696 457.515 42.4394L458.874 43.3176C466.186 48.0437 469.351 57.1351 466.553 65.38L466.033 66.912C464.749 70.6975 464.691 74.7916 465.868 78.6118L466.344 80.1579C468.908 88.4785 465.488 97.4769 458.045 101.995L456.662 102.834C453.245 104.908 450.569 108.007 449.015 111.69L448.386 113.181C445.002 121.203 436.598 125.898 427.992 124.574L426.393 124.328C422.442 123.721 418.401 124.375 414.843 126.197L413.403 126.935C405.654 130.904 396.198 129.099 390.457 122.554L389.39 121.338C386.754 118.332 383.237 116.235 379.34 115.345L377.763 114.984C369.275 113.044 363.193 105.583 363.002 96.8786L362.966 95.2611C362.878 91.2647 361.532 87.3977 359.12 84.2104L358.143 82.9205C352.888 75.9785 353.024 66.3531 358.473 59.5623L359.486 58.3004C361.988 55.1826 363.442 51.3552 363.643 47.3628L363.724 45.747C364.161 37.0513 370.452 29.7653 378.991 28.0657L380.578 27.7498C384.498 26.9695 388.073 24.9725 390.793 22.0431L391.893 20.8575Z\"\r\n          fill=\"#F29C16\"\r\n        />\r\n        <path\r\n          d=\"M400.944 29.3527C406.83 24.5672 415.216 24.3949 421.294 28.9346C424.084 31.0188 427.461 32.1699 430.944 32.2239C438.529 32.3417 445.064 37.5999 446.801 44.9843C447.599 48.3746 449.446 51.427 452.079 53.7069C457.814 58.6728 459.44 66.9012 456.025 73.675C454.457 76.785 453.909 80.3104 454.461 83.7494C455.662 91.2398 451.619 98.5882 444.648 101.582C441.448 102.956 438.763 105.305 436.974 108.294C433.08 114.804 425.259 117.834 417.995 115.647C414.66 114.643 411.093 114.716 407.802 115.857C400.634 118.34 392.695 115.634 388.536 109.289C386.627 106.377 383.848 104.14 380.594 102.898C373.506 100.193 369.164 93.017 370.056 85.4836C370.466 82.0248 369.775 78.5249 368.08 75.4819C364.39 68.8541 365.676 60.5658 371.202 55.3686C373.739 52.9824 375.459 49.8568 376.117 46.4366C377.55 38.9871 383.863 33.4648 391.437 33.0356C394.915 32.8386 398.241 31.5498 400.944 29.3527Z\"\r\n          fill=\"#F9A626\"\r\n        />\r\n        <path\r\n          d=\"M392.079 42.5335C395.266 37.3038 401.6 34.9099 407.45 36.7239C410.136 37.5568 413.016 37.5214 415.68 36.6228C421.483 34.6655 427.874 36.9031 431.189 42.0528C432.711 44.4171 434.94 46.2412 437.559 47.2655C443.263 49.4963 446.72 55.3185 445.949 61.3942C445.595 64.1838 446.13 67.0138 447.478 69.4817C450.413 74.8569 449.32 81.5394 444.824 85.6983C442.76 87.6077 441.35 90.1195 440.796 92.8763C439.59 98.8807 434.456 103.297 428.339 103.593C425.531 103.729 422.836 104.747 420.64 106.503C415.856 110.327 409.085 110.41 404.209 106.705C401.97 105.003 399.252 104.052 396.441 103.985C390.318 103.839 385.078 99.5507 383.724 93.5778C383.102 90.8355 381.632 88.359 379.521 86.5009C374.924 82.4538 373.667 75.8002 376.469 70.3545C377.756 67.8542 378.221 65.0119 377.799 62.2319C376.879 56.1769 380.192 50.2715 385.839 47.9011C388.432 46.8128 390.615 44.9345 392.079 42.5335Z\"\r\n          fill=\"#F29C16\"\r\n        />\r\n        <path\r\n          d=\"M394.717 53.7592C396.336 49.7467 400.474 47.3477 404.761 47.9376C406.729 48.2084 408.732 47.8516 410.485 46.918C414.304 44.8847 419.017 45.7073 421.921 48.9143C423.255 50.3868 425.019 51.4011 426.962 51.813C431.194 52.7103 434.276 56.3696 434.439 60.6932C434.514 62.6782 435.213 64.5891 436.437 66.1538C439.103 69.5618 439.111 74.3455 436.457 77.7626C435.239 79.3315 434.546 81.2447 434.478 83.23C434.329 87.5542 431.26 91.224 427.031 92.1357C425.089 92.5543 423.329 93.5747 422 95.0516C419.107 98.2686 414.397 99.1074 410.571 97.0871C408.815 96.1595 406.81 95.8096 404.843 96.0872C400.559 96.6917 396.412 94.3069 394.78 90.3C394.03 88.4603 392.72 86.9038 391.034 85.8521C387.364 83.5613 385.72 79.0688 387.045 74.9501C387.654 73.0591 387.65 71.0243 387.035 69.1354C385.696 65.0212 387.324 60.5232 390.987 58.2199C392.669 57.1624 393.974 55.6014 394.717 53.7592Z\"\r\n          fill=\"#F9A626\"\r\n        />\r\n        <path\r\n          d=\"M405.63 55.7748C407.715 53.6155 411 53.1494 413.603 54.6436C414.798 55.3296 416.179 55.6213 417.549 55.477C420.534 55.1628 423.351 56.9175 424.384 59.7353C424.859 61.029 425.729 62.1401 426.872 62.9104C429.36 64.5883 430.39 67.7429 429.37 70.5657C428.902 71.8617 428.855 73.2724 429.235 74.5969C430.062 77.4818 428.823 80.5602 426.228 82.0672C425.036 82.7592 424.093 83.8093 423.533 85.0682C422.313 87.8102 419.385 89.372 416.428 88.8581C415.07 88.6222 413.673 88.8205 412.434 89.4247C409.737 90.7409 406.49 90.0552 404.555 87.7609C403.667 86.7075 402.469 85.9611 401.132 85.628C398.22 84.9024 396.173 82.2902 396.166 79.2889C396.162 77.9109 395.724 76.5691 394.914 75.4545C393.15 73.0267 393.261 69.7102 395.185 67.4063C396.068 66.3485 396.595 65.0392 396.691 63.6646C396.9 60.6705 399.117 58.2016 402.071 57.6731C403.428 57.4305 404.673 56.7662 405.63 55.7748Z\"\r\n          fill=\"#F29C16\"\r\n        />\r\n        <path\r\n          d=\"M315.382 21.2762C321.624 16.4104 330.376 16.4104 336.618 21.2762C339.484 23.5102 342.982 24.7833 346.614 24.9143C354.524 25.1996 361.227 30.8247 362.882 38.5649C363.642 42.1185 365.503 45.3421 368.201 47.7768C374.076 53.0798 375.596 61.698 371.888 68.6908C370.186 71.9013 369.54 75.567 370.041 79.1662C371.134 87.0054 366.758 94.5841 359.423 97.5576C356.055 98.9228 353.204 101.315 351.274 104.395C347.072 111.102 338.849 114.095 331.319 111.658C327.861 110.539 324.139 110.539 320.681 111.658C313.151 114.095 304.928 111.102 300.726 104.395C298.796 101.315 295.945 98.9228 292.577 97.5576C285.242 94.5841 280.866 87.0054 281.959 79.1662C282.46 75.567 281.814 71.9013 280.112 68.6908C276.404 61.698 277.924 53.0798 283.799 47.7768C286.497 45.3421 288.358 42.1186 289.118 38.5649C290.773 30.8247 297.476 25.1996 305.386 24.9143C309.018 24.7833 312.516 23.5102 315.382 21.2762Z\"\r\n          fill=\"#64688D\"\r\n        />\r\n        <path\r\n          d=\"M311.242 30.4513C315.751 25.5944 322.985 24.424 328.796 27.6111C331.464 29.0744 334.525 29.6589 337.545 29.2815C344.121 28.4595 350.415 32.2126 352.818 38.3893C353.921 41.2252 355.89 43.6409 358.446 45.2926C364.012 48.8902 366.421 55.8107 364.291 62.0869C363.313 64.9684 363.269 68.0849 364.165 70.9929C366.117 77.3267 363.514 84.1764 357.848 87.6153C355.247 89.1942 353.21 91.5533 352.027 94.3569C349.451 100.463 343.054 104.037 336.503 103.03C333.495 102.567 330.419 103.065 327.71 104.452C321.812 107.474 314.614 106.1 310.243 101.117C308.237 98.8299 305.56 97.2335 302.593 96.5554C296.132 95.0786 291.502 89.3992 291.357 82.7732C291.29 79.7311 290.265 76.7874 288.429 74.3613C284.429 69.0769 284.532 61.7499 288.68 56.5806C290.584 54.2073 291.692 51.2938 291.844 48.2547C292.177 41.6354 296.966 36.0891 303.466 34.7954C306.45 34.2014 309.171 32.6812 311.242 30.4513Z\"\r\n          fill=\"#294069\"\r\n        />\r\n        <path\r\n          d=\"M318.187 35.8626C322.347 32.4808 328.272 32.359 332.568 35.5671C334.539 37.04 336.926 37.8534 339.387 37.8916C344.747 37.9748 349.365 41.6906 350.593 46.9089C351.157 49.3047 352.462 51.4617 354.322 53.0729C358.375 56.5821 359.524 62.3968 357.111 67.1837C356.003 69.3814 355.616 71.8727 356.006 74.3029C356.854 79.5961 353.997 84.789 349.071 86.9046C346.81 87.8759 344.912 89.5358 343.648 91.648C340.896 96.2484 335.369 98.3896 330.236 96.8441C327.879 96.1344 325.359 96.1862 323.033 96.992C317.968 98.7472 312.358 96.8348 309.419 92.3512C308.07 90.2927 306.105 88.7122 303.806 87.8346C298.797 85.9232 295.729 80.852 296.36 75.5284C296.649 73.0842 296.161 70.6109 294.963 68.4606C292.355 63.7769 293.264 57.9199 297.169 54.2472C298.962 52.5609 300.178 50.3522 300.643 47.9352C301.655 42.6709 306.117 38.7685 311.469 38.4652C313.926 38.3259 316.277 37.4152 318.187 35.8626Z\"\r\n          fill=\"#64688D\"\r\n        />\r\n        <path\r\n          d=\"M311.922 45.177C314.175 41.4814 318.651 39.7896 322.784 41.0716C324.682 41.6601 326.718 41.6351 328.6 41.0001C332.701 39.6169 337.218 41.1982 339.56 44.8373C340.636 46.5081 342.211 47.7971 344.061 48.5209C348.092 50.0974 350.535 54.2118 349.991 58.5053C349.741 60.4765 350.119 62.4765 351.071 64.2204C353.145 68.0189 352.372 72.7412 349.195 75.6801C347.737 77.0295 346.741 78.8045 346.349 80.7526C345.497 84.9957 341.869 88.1164 337.546 88.3255C335.561 88.4216 333.658 89.1411 332.105 90.3819C328.725 93.0842 323.94 93.143 320.494 90.5246C318.912 89.3224 316.991 88.6498 315.005 88.6026C310.678 88.4997 306.975 85.4692 306.018 81.2483C305.579 79.3104 304.54 77.5604 303.048 76.2473C299.8 73.3874 298.911 68.6855 300.891 64.8372C301.801 63.0703 302.129 61.0617 301.831 59.0972C301.181 54.8184 303.522 50.6452 307.513 48.9701C309.345 48.2011 310.888 46.8737 311.922 45.177Z\"\r\n          fill=\"#294069\"\r\n        />\r\n        <path\r\n          d=\"M313.787 53.1099C314.931 50.2743 317.855 48.5791 320.884 48.9959C322.275 49.1873 323.691 48.9352 324.93 48.2755C327.628 46.8385 330.959 47.4199 333.011 49.6862C333.953 50.7267 335.2 51.4435 336.573 51.7346C339.564 52.3686 341.742 54.9545 341.857 58.0099C341.91 59.4127 342.404 60.763 343.269 61.8687C345.153 64.277 345.158 67.6575 343.283 70.0723C342.422 71.181 341.932 72.533 341.884 73.9359C341.779 76.9916 339.611 79.585 336.622 80.2293C335.25 80.5251 334.006 81.2461 333.067 82.2899C331.022 84.5632 327.694 85.1559 324.99 83.7282C323.749 83.0728 322.332 82.8255 320.942 83.0216C317.915 83.4489 314.984 81.7636 313.831 78.932C313.301 77.632 312.375 76.5321 311.184 75.7888C308.59 74.17 307.429 70.9954 308.365 68.0848C308.795 66.7485 308.793 65.3106 308.358 63.9757C307.412 61.0684 308.563 57.8898 311.151 56.2621C312.339 55.5148 313.262 54.4117 313.787 53.1099Z\"\r\n          fill=\"#64688D\"\r\n        />\r\n        <path\r\n          d=\"M321.498 54.5342C322.972 53.0083 325.293 52.6789 327.133 53.7348C327.977 54.2196 328.953 54.4257 329.921 54.3237C332.031 54.1017 334.021 55.3417 334.751 57.3329C335.087 58.2471 335.702 59.0323 336.509 59.5767C338.268 60.7624 338.995 62.9916 338.275 64.9864C337.944 65.9023 337.91 66.8991 338.179 67.8351C338.764 69.8738 337.888 72.0491 336.054 73.1141C335.212 73.6031 334.546 74.3452 334.15 75.2348C333.287 77.1725 331.218 78.2762 329.129 77.913C328.169 77.7463 327.182 77.8864 326.307 78.3134C324.401 79.2435 322.106 78.759 320.739 77.1376C320.111 76.3933 319.265 75.8658 318.32 75.6304C316.262 75.1176 314.816 73.2717 314.81 71.1508C314.808 70.177 314.499 69.2288 313.926 68.4411C312.679 66.7255 312.758 64.3818 314.117 62.7538C314.741 62.0063 315.114 61.081 315.181 60.1096C315.329 57.9938 316.896 56.2491 318.984 55.8756C319.942 55.7042 320.822 55.2348 321.498 54.5342Z\"\r\n          fill=\"#294069\"\r\n        />\r\n        <path\r\n          d=\"M361.584 70.3393C367.12 66.0243 374.88 66.0243 380.416 70.3393C382.958 72.3203 386.06 73.4493 389.28 73.5655C396.295 73.8185 402.239 78.8069 403.707 85.6707C404.38 88.8221 406.031 91.6807 408.423 93.8398C413.634 98.5424 414.981 106.185 411.693 112.386C410.184 115.233 409.611 118.484 410.055 121.676C411.024 128.627 407.144 135.348 400.639 137.985C397.653 139.196 395.124 141.317 393.413 144.048C389.687 149.996 382.394 152.651 375.716 150.489C372.65 149.497 369.35 149.497 366.284 150.489C359.606 152.651 352.313 149.996 348.587 144.048C346.876 141.317 344.347 139.196 341.361 137.985C334.856 135.348 330.976 128.627 331.945 121.676C332.389 118.484 331.816 115.233 330.307 112.386C327.019 106.185 328.366 98.5424 333.577 93.8398C335.969 91.6807 337.62 88.8221 338.293 85.6707C339.761 78.8069 345.705 73.8185 352.72 73.5655C355.94 73.4493 359.042 72.3203 361.584 70.3393Z\"\r\n          fill=\"#EF6B93\"\r\n        />\r\n        <path\r\n          d=\"M357.912 78.4758C361.911 74.1687 368.326 73.1308 373.479 75.9571C375.845 77.2547 378.56 77.773 381.237 77.4384C387.069 76.7094 392.651 80.0377 394.781 85.5151C395.76 88.03 397.506 90.1722 399.772 91.6369C404.709 94.8272 406.845 100.964 404.956 106.53C404.089 109.085 404.05 111.849 404.844 114.428C406.575 120.044 404.267 126.119 399.242 129.168C396.936 130.569 395.129 132.661 394.08 135.147C391.796 140.562 386.123 143.731 380.314 142.838C377.647 142.428 374.918 142.869 372.516 144.099C367.285 146.779 360.903 145.56 357.027 141.142C355.247 139.113 352.874 137.698 350.243 137.096C344.513 135.787 340.407 130.75 340.278 124.874C340.219 122.177 339.311 119.566 337.682 117.415C334.135 112.729 334.226 106.231 337.905 101.647C339.593 99.5424 340.575 96.9587 340.711 94.2637C341.006 88.3938 345.252 83.4753 351.017 82.328C353.663 81.8013 356.076 80.4532 357.912 78.4758Z\"\r\n          fill=\"#E15D85\"\r\n        />\r\n        <path\r\n          d=\"M364.071 83.2743C367.76 80.2754 373.015 80.1675 376.824 83.0123C378.573 84.3185 380.689 85.0398 382.871 85.0737C387.625 85.1474 391.72 88.4426 392.809 93.0702C393.309 95.1948 394.466 97.1076 396.116 98.5363C399.71 101.648 400.729 106.805 398.589 111.05C397.606 112.999 397.263 115.208 397.609 117.363C398.361 122.057 395.827 126.662 391.459 128.538C389.454 129.399 387.771 130.871 386.651 132.744C384.21 136.824 379.309 138.723 374.757 137.352C372.667 136.723 370.431 136.769 368.369 137.484C363.877 139.04 358.902 137.344 356.296 133.368C355.099 131.543 353.358 130.141 351.318 129.363C346.877 127.668 344.156 123.171 344.715 118.45C344.972 116.282 344.539 114.089 343.477 112.182C341.164 108.029 341.97 102.835 345.433 99.5777C347.023 98.0823 348.101 96.1236 348.513 93.9803C349.411 89.3119 353.368 85.8513 358.114 85.5823C360.293 85.4589 362.378 84.6512 364.071 83.2743Z\"\r\n          fill=\"#EF6B93\"\r\n        />\r\n        <path\r\n          d=\"M358.516 91.5342C360.513 88.257 364.483 86.7568 368.149 87.8936C369.832 88.4155 371.636 88.3933 373.306 87.8302C376.943 86.6036 380.948 88.0058 383.025 91.233C383.979 92.7146 385.376 93.8577 387.017 94.4996C390.591 95.8976 392.758 99.5462 392.275 103.354C392.053 105.102 392.388 106.875 393.233 108.422C395.072 111.79 394.387 115.978 391.57 118.584C390.276 119.781 389.393 121.355 389.046 123.082C388.29 126.845 385.073 129.613 381.239 129.798C379.479 129.883 377.791 130.521 376.414 131.622C373.417 134.018 369.173 134.07 366.118 131.748C364.715 130.682 363.011 130.086 361.249 130.044C357.413 129.952 354.129 127.265 353.28 123.522C352.891 121.803 351.969 120.252 350.647 119.087C347.766 116.551 346.978 112.381 348.734 108.969C349.54 107.402 349.832 105.621 349.567 103.879C348.991 100.084 351.067 96.3834 354.606 94.898C356.231 94.216 357.599 93.0389 358.516 91.5342Z\"\r\n          fill=\"#E15D85\"\r\n        />\r\n        <path\r\n          d=\"M360.17 98.5691C361.184 96.0546 363.778 94.5512 366.464 94.9209C367.697 95.0906 368.952 94.867 370.051 94.282C372.444 93.0077 375.398 93.5232 377.218 95.533C378.053 96.4557 379.159 97.0914 380.376 97.3495C383.029 97.9118 384.96 100.205 385.062 102.914C385.109 104.158 385.547 105.356 386.314 106.336C387.985 108.472 387.99 111.47 386.327 113.611C385.563 114.594 385.129 115.793 385.086 117.037C384.993 119.747 383.07 122.047 380.42 122.618C379.203 122.881 378.1 123.52 377.267 124.446C375.454 126.462 372.503 126.987 370.105 125.721C369.004 125.14 367.748 124.921 366.515 125.095C363.831 125.473 361.232 123.979 360.209 121.468C359.739 120.315 358.918 119.34 357.862 118.681C355.562 117.245 354.532 114.43 355.362 111.849C355.743 110.664 355.741 109.389 355.356 108.205C354.516 105.627 355.537 102.808 357.832 101.364C358.886 100.702 359.704 99.7236 360.17 98.5691Z\"\r\n          fill=\"#EF6B93\"\r\n        />\r\n        <path\r\n          d=\"M367.008 99.8322C368.314 98.479 370.373 98.1869 372.004 99.1233C372.753 99.5532 373.619 99.7359 374.478 99.6455C376.348 99.4486 378.113 100.548 378.761 102.314C379.058 103.125 379.603 103.821 380.319 104.304C381.879 105.355 382.524 107.332 381.885 109.101C381.592 109.913 381.562 110.797 381.8 111.627C382.319 113.435 381.543 115.364 379.916 116.309C379.169 116.742 378.578 117.4 378.227 118.189C377.463 119.908 375.628 120.886 373.775 120.564C372.924 120.417 372.048 120.541 371.272 120.919C369.582 121.744 367.547 121.315 366.335 119.877C365.778 119.217 365.027 118.749 364.189 118.54C362.364 118.085 361.082 116.448 361.077 114.568C361.075 113.704 360.801 112.863 360.293 112.165C359.187 110.643 359.257 108.565 360.462 107.121C361.016 106.458 361.346 105.638 361.406 104.776C361.537 102.9 362.927 101.353 364.778 101.022C365.628 100.87 366.408 100.453 367.008 99.8322Z\"\r\n          fill=\"#E15D85\"\r\n        />\r\n        <path\r\n          d=\"M483.584 29.3393C489.12 25.0243 496.88 25.0243 502.416 29.3393C504.958 31.3203 508.06 32.4493 511.28 32.5655C518.295 32.8185 524.239 37.8069 525.707 44.6707C526.38 47.8221 528.031 50.6807 530.423 52.8398C535.634 57.5424 536.981 65.185 533.693 71.3861C532.184 74.2333 531.611 77.484 532.055 80.6757C533.024 87.6275 529.144 94.3482 522.639 96.9851C519.653 98.1957 517.124 100.317 515.413 103.048C511.687 108.996 504.394 111.651 497.716 109.489C494.65 108.497 491.35 108.497 488.284 109.489C481.606 111.651 474.313 108.996 470.587 103.048C468.876 100.317 466.347 98.1957 463.361 96.9851C456.856 94.3482 452.976 87.6275 453.945 80.6757C454.389 77.484 453.816 74.2333 452.307 71.3861C449.019 65.185 450.366 57.5424 455.577 52.8398C457.969 50.6807 459.62 47.8221 460.293 44.6707C461.761 37.8069 467.705 32.8185 474.72 32.5655C477.94 32.4493 481.042 31.3203 483.584 29.3393Z\"\r\n          fill=\"#97AC83\"\r\n        />\r\n        <path\r\n          d=\"M479.912 37.4758C483.911 33.1687 490.326 32.1308 495.479 34.9571C497.845 36.2547 500.56 36.773 503.237 36.4384C509.069 35.7094 514.651 39.0377 516.781 44.5151C517.76 47.03 519.506 49.1722 521.772 50.6369C526.709 53.8272 528.845 59.9643 526.956 65.5299C526.089 68.0853 526.05 70.849 526.844 73.4277C528.575 79.0445 526.267 85.1188 521.242 88.1684C518.936 89.5685 517.129 91.6606 516.08 94.1468C513.796 99.5618 508.123 102.731 502.314 101.838C499.647 101.428 496.918 101.869 494.516 103.099C489.285 105.779 482.903 104.56 479.027 100.142C477.247 98.1134 474.874 96.6977 472.243 96.0964C466.513 94.7867 462.407 89.7503 462.278 83.8744C462.219 81.1767 461.311 78.5663 459.682 76.4148C456.135 71.7286 456.226 65.2311 459.905 60.647C461.593 58.5424 462.575 55.9587 462.711 53.2637C463.006 47.3938 467.252 42.4753 473.017 41.328C475.663 40.8013 478.076 39.4532 479.912 37.4758Z\"\r\n          fill=\"#849970\"\r\n        />\r\n        <path\r\n          d=\"M486.071 42.2743C489.76 39.2754 495.015 39.1675 498.824 42.0123C500.573 43.3185 502.689 44.0398 504.871 44.0737C509.625 44.1474 513.72 47.4426 514.809 52.0702C515.309 54.1948 516.466 56.1076 518.116 57.5363C521.71 60.6483 522.729 65.8047 520.589 70.0497C519.606 71.9986 519.263 74.2079 519.609 76.363C520.361 81.057 517.827 85.662 513.459 87.538C511.454 88.3994 509.771 89.8713 508.651 91.7444C506.21 95.8241 501.309 97.7229 496.757 96.3523C494.667 95.723 492.431 95.7689 490.369 96.4835C485.877 98.04 480.902 96.3441 478.296 92.3681C477.099 90.5426 475.358 89.141 473.318 88.3628C468.877 86.6677 466.156 82.1707 466.715 77.4497C466.972 75.2822 466.539 73.089 465.477 71.182C463.164 67.0286 463.97 61.8346 467.433 58.5777C469.023 57.0823 470.101 55.1236 470.513 52.9803C471.411 48.3119 475.368 44.8513 480.114 44.5823C482.293 44.4589 484.378 43.6512 486.071 42.2743Z\"\r\n          fill=\"#97AC83\"\r\n        />\r\n        <path\r\n          d=\"M480.516 50.5342C482.513 47.257 486.483 45.7568 490.149 46.8936C491.832 47.4155 493.636 47.3933 495.306 46.8302C498.943 45.6036 502.948 47.0058 505.025 50.233C505.979 51.7146 507.376 52.8577 509.017 53.4996C512.591 54.8976 514.758 58.5462 514.275 62.3536C514.053 64.1017 514.388 65.8753 515.233 67.4218C517.072 70.7903 516.387 74.978 513.57 77.5842C512.276 78.7808 511.393 80.3548 511.046 82.0824C510.29 85.8452 507.073 88.6125 503.239 88.798C501.479 88.8832 499.791 89.5213 498.414 90.6216C495.417 93.018 491.173 93.0701 488.118 90.7481C486.715 89.682 485.011 89.0856 483.249 89.0437C479.413 88.9525 476.129 86.265 475.28 82.522C474.891 80.8035 473.969 79.2516 472.647 78.0871C469.766 75.551 468.978 71.3814 470.734 67.9687C471.54 66.4019 471.832 64.6207 471.567 62.8786C470.991 59.0841 473.067 55.3834 476.606 53.898C478.231 53.216 479.599 52.0389 480.516 50.5342Z\"\r\n          fill=\"#849970\"\r\n        />\r\n        <path\r\n          d=\"M482.17 57.5691C483.184 55.0546 485.778 53.5512 488.464 53.9209C489.697 54.0906 490.952 53.867 492.051 53.282C494.444 52.0077 497.398 52.5232 499.218 54.533C500.053 55.4557 501.159 56.0914 502.376 56.3495C505.029 56.9118 506.96 59.2049 507.062 61.9144C507.109 63.1584 507.547 64.3558 508.314 65.3364C509.985 67.472 509.99 70.4698 508.327 72.6112C507.563 73.5944 507.129 74.7933 507.086 76.0375C506.993 78.7473 505.07 81.047 502.42 81.6184C501.203 81.8807 500.1 82.5201 499.267 83.4457C497.454 85.4617 494.503 85.9873 492.105 84.7212C491.004 84.1399 489.748 83.9207 488.515 84.0946C485.831 84.4735 483.232 82.979 482.209 80.468C481.739 79.3151 480.918 78.3397 479.862 77.6806C477.562 76.2451 476.532 73.4298 477.362 70.8487C477.743 69.6637 477.741 68.3886 477.356 67.2049C476.516 64.6266 477.537 61.8079 479.832 60.3645C480.886 59.7018 481.704 58.7236 482.17 57.5691Z\"\r\n          fill=\"#97AC83\"\r\n        />\r\n        <path\r\n          d=\"M489.008 58.8322C490.314 57.479 492.373 57.1869 494.004 58.1233C494.753 58.5532 495.619 58.7359 496.478 58.6455C498.348 58.4486 500.113 59.5483 500.761 61.3141C501.058 62.1248 501.603 62.8211 502.319 63.3038C503.879 64.3553 504.524 66.3322 503.885 68.1011C503.592 68.9133 503.562 69.7973 503.8 70.6274C504.319 72.4352 503.543 74.3643 501.916 75.3087C501.169 75.7424 500.578 76.4005 500.227 77.1894C499.463 78.9077 497.628 79.8864 495.775 79.5644C494.924 79.4165 494.048 79.5408 493.272 79.9195C491.582 80.7442 489.547 80.3146 488.335 78.8768C487.778 78.2166 487.027 77.7489 486.189 77.5401C484.364 77.0854 483.082 75.4485 483.077 73.5677C483.075 72.7041 482.801 71.8633 482.293 71.1648C481.187 69.6433 481.257 67.565 482.462 66.1212C483.016 65.4584 483.346 64.6378 483.406 63.7764C483.537 61.9002 484.927 60.353 486.778 60.0218C487.628 59.8697 488.408 59.4534 489.008 58.8322Z\"\r\n          fill=\"#849970\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Guirlande;\r\n","export const legendPink = [\r\n    {\r\n      bgColor: \"bg-pink\",\r\n      color: \"pink\",\r\n      nombre: \"1\",\r\n      action: \"Cérémonie\",\r\n    },\r\n    {\r\n      bgColor: \"bg-pink\",\r\n      color: \"pink\",\r\n      nombre: \"2\",\r\n      action: \"Vin d'honneur\",\r\n    },\r\n    {\r\n      bgColor: \"bg-pink\",\r\n      color: \"pink\",\r\n      nombre: \"3\",\r\n      action: \"Restauration\",\r\n    },\r\n    {\r\n      bgColor: \"bg-pink\",\r\n      color: \"pink\",\r\n      nombre: \"4\",\r\n      action: \"Accueil\",\r\n    },\r\n  ];\r\n  \r\nexport const legendOrange = [\r\n    {\r\n      bgColor: \"bg-orange\",\r\n      color: \"orange\",\r\n      nombre: \"5\",\r\n      action: \"Salle repas / tables\",\r\n    },\r\n    {\r\n      bgColor: \"bg-orange\",\r\n      color: \"orange\",\r\n      nombre: \"6\",\r\n      action: \"Salle enfants / garderie\",\r\n    },\r\n    {\r\n      bgColor: \"bg-orange\",\r\n      color: \"orange\",\r\n      nombre: \"7\",\r\n      action: \"WC\",\r\n    },\r\n    {\r\n      bgColor: \"bg-orange\",\r\n      color: \"orange\",\r\n      nombre: \"8\",\r\n      action: \"Coin chill\",\r\n    },\r\n  ];\r\n  \r\nexport const legendGreen = [\r\n    {\r\n      bgColor: \"bg-green\",\r\n      color: \"green\",\r\n      nombre: \"9\",\r\n      action: \"Activités / jeux en bois\",\r\n    },\r\n    {\r\n      bgColor: \"bg-green\",\r\n      color: \"green\",\r\n      nombre: \"10\",\r\n      action: \"Plaine / jeux enfants\",\r\n    },\r\n    {\r\n      bgColor: \"bg-green\",\r\n      color: \"green\",\r\n      nombre: \"11\",\r\n      action: \"Piscine\",\r\n    },\r\n  ];","// img thème\r\nimport objetsInterdits from \"../assets/informations/objets-interdits.png\"\r\nimport theme from \"../assets/informations/theme.png\"\r\n\r\nexport const faqSurPlace = [\r\n  {\r\n    id: 1,\r\n    question: \"Le mariage aura-t-il lieu à l'intérieur ou à l'extérieur ?\",\r\n    answer:\r\n      \"Les deux ! Mais la majeur partie, si le temps nous le permet, se fera à l'extérieur.\",\r\n    imgClass: \"none\",\r\n  },\r\n  {\r\n    id: 2,\r\n    question: \"À quoi dois-je m'attendre après la cérémonie ?\",\r\n    answer:\r\n      \"Nous vous laissons prendre connaissance de la programmation sur cette page :\",\r\n    link: \"/programmation\",\r\n    linkText: \"Vers la page programmation !\",\r\n    imgClass: \"none\",\r\n  },\r\n  {\r\n    id: 3,\r\n    question:\r\n      \"Quel type de nourriture et de boisson sera servi pendant le cocktail et la réception ?\",\r\n    answer:\r\n      \"Nous vous laissons prendre connaissance de nos stands sur la page suivante :\",\r\n    link: \"/restauration\",\r\n    linkText: \"Vers la page restauration !\",\r\n    imgClass: \"none\",\r\n  },\r\n  {\r\n    id: 4,\r\n    question: \"Je veux revendre mon billet ?\",\r\n    answer: \"Bien entendu ce n'est pas possible.\",\r\n    imgClass: \"none\",\r\n  },\r\n  {\r\n    id: 5,\r\n    question: \"Quel est la liste des objets interdits ?\",\r\n    img: objetsInterdits,\r\n    imgClass: \"img-faq\",\r\n  },\r\n  {\r\n    id: 6,\r\n    question: \"Les animaux sont ils autorisés ?\",\r\n    answer:\r\n      \"Malheureusement non, mais plusieurs pensions canines existe à proximité pour nos amis à 4 pattes.\",\r\n    imgClass: \"none\",\r\n  },\r\n];\r\n\r\nexport const faqPourVenir = [\r\n  {\r\n    id: 1,\r\n    question:\r\n      \"Le transport sera-t-il assuré ? Y a-t-il un parking facile sur place ?\",\r\n    answer:\r\n      \"Non pour les transports, nous vous laissons vous organisez comme vous le souhaitez. L'aéroport le plus proche est celui de Nantes (40 min en voiture jusqu'au domaine) et la gare la plus proche est celle de la Roche sur Yon (26 min en voiture jusqu'au domaine). Oui, le domaine dispose de plusieurs parkings. Ils sont notés sur le plan ci-après :\",\r\n    link: \"https://www.loiseliere.com/wp-content/uploads/2023/05/Plan-camping-domaine-oiseliere.pdf\",\r\n    linkText: \"Voici le plan !\",\r\n    imgClass: \"none\",\r\n  },\r\n  {\r\n    id: 2,\r\n    question:\r\n      \"Le lieu de la cérémonie et de la réception est-il accessible aux personnes en fauteuil roulant ?\",\r\n    answer:\r\n      \"Le Domaine de l’Oiselière est un camping labellisé Tourisme et Handicap pour les 4 familles de handicap : auditif, mental, visuel, moteur.\",\r\n    imgClass: \"none\",\r\n  },\r\n];\r\n\r\nexport const faqDormir = [\r\n  {\r\n    id: 1,\r\n    question: \"Les logements sont-ils inclus ?\",\r\n    answer:\r\n      \" Oui, pour la nuit du samedi soir. Des prolongations sont possibles à tarif préférentiel, il faudra nous communiquer vos besoins avant le 30 avril.\",\r\n    imgClass: \"none\",\r\n  },\r\n  {\r\n    id: 2,\r\n    question:\r\n      \"Je viens en Van /camping car, y a t'il des emplacements de prévus ?\",\r\n    answer:\r\n      \" Oui il y a des emplacements de prévus pour les van, camping-car et même tente pour les plus courageux !Pensez à nous prévenir !\",\r\n    imgClass: \"none\",\r\n  },\r\n];\r\n\r\nexport const faqOrganisation = [\r\n  {\r\n    id: 1,\r\n    question: \"Quel est le code vestimentaire ? Que dois-je porter ?\",\r\n    answer: \"Les détails de la tenue vous sont répertoriés sur cette page :\",\r\n    link: \"/programmation\",\r\n    linkText: \"Vers la page programmation !\",\r\n    imgClass: \"none\",\r\n  },\r\n  {\r\n    id: 2,\r\n    question: \"Kit de survie, que dois-je emmener ?\",\r\n    answer:\r\n      \"• Une tenue habillée mais à l'aise pour le samedi • Tenue décontractée pour le dimanche • Maillot de bain, crème solaire, chapeaux et tutti quanti pour profiter de la piscine le dimanche (croisons les doigts pour la météo) • Votre joie et votre bonne humeur pour passer un merveilleux moment tous ensemble !\",\r\n    imgClass: \"none\",\r\n  },\r\n  {\r\n    id: 3,\r\n    question: \"Thème et couleurs du mariage\",\r\n    img: theme,\r\n    imgClass: \"img-faq\"\r\n  },\r\n  {\r\n    id: 4,\r\n    question: \"Puis-je amener mes enfants ? Y aura-t-il une baby-sitter ?\",\r\n    answer:\r\n      \"Oui les enfants sont invités, il y aura une baby sitter ainsi qu'une salle qui leur sera dédiée. De plus, les activités de l'après-midi conviennent aux enfants. A vous de voir ce que vous préférez ;) Il y aura également une baby sitter qui restera sur place la nuit pour garder les enfants couchés pendant que vous ferez vos chorégraphie sur le dancefloor ! Pour une meilleure organisation, merci de nous prévenir si vous souhaitez laisser vos enfants à la baby sitter la nuit (le temps de la soirée, il faudra les récupérer à un moment bien entendu) \",\r\n    imgClass: \"none\",\r\n  },\r\n  {\r\n    id: 5,\r\n    question: \"A quelle heure doit on arriver ?\",\r\n    answer:\r\n      \"Vous pouvez arriver à partir de 12h00 le samedi et jusqu'à maximum 13h00.\",\r\n    imgClass: \"none\",\r\n  },\r\n  {\r\n    id: 6,\r\n    question:\r\n      \"A quelle date maximum je peux confirmer ma présence et mes hébergements ?\",\r\n    answer: \"Avant le 30 avril dernier délais.\",\r\n    imgClass: \"none\",\r\n  },\r\n  {\r\n    id: 7,\r\n    question: \"Et après ?\",\r\n    answer:\r\n      \"Les mariés prolongent leur séjour ! Le domaine se trouvant à 30 minutes en voiture du Puy du Fou, nous en profitons pour y passer quelques jours. Serez-vous des nôtres ? Pour plus d'informations, se référer à la page suivante :\",\r\n    link: \"/programmation\",\r\n    linkText: \"Vers la page programmation !\",\r\n    imgClass: \"none\",\r\n  },\r\n  {\r\n    id: 8,\r\n    question: \"Recap - Pensez à prévenir les mariés !\",\r\n    answer:\r\n      \"• Si vous souhaitez des nuits supplémentaires • Si vous venez au Puy du Fou • Si vous souhaitez laisser vos enfants à la baby sitter la journée et/ou le soir • Si vous venez en Van, Camping car, Caravane, Tente…\",\r\n    imgClass: \"none\",\r\n  },\r\n];\r\n","import { useEffect } from \"react\";\r\n\r\n// Composants\r\nimport Button from \"../../components/Button\";\r\nimport WaveShapeHaut from \"../../components/Wave-shape-haut\";\r\nimport LegendItem from \"../../components/Legend-item\";\r\nimport FaqAccordion from \"../../components/Faq-accordion\";\r\nimport Banner from \"../../components/Banner\";\r\n\r\n//Assets\r\nimport PlanDomaine from \"../../assets/informations/plan-domaine.png\";\r\nimport FeuxRoseOrange from \"../../assets/svg/Feux-rose-orange\";\r\nimport Guirlande from \"../../assets/svg/Guirlande\";\r\n\r\n// Styles\r\nimport \"../../styles/Informations.css\";\r\n\r\n// Données\r\nimport { legendPink, legendOrange, legendGreen } from \"../../datas/legendes\";\r\nimport { white } from \"../../datas/colors\";\r\nimport {\r\n  faqSurPlace,\r\n  faqPourVenir,\r\n  faqDormir,\r\n  faqOrganisation,\r\n} from \"../../datas/faq\";\r\n\r\nfunction Informations() {\r\n  useEffect(() => {\r\n    document.title = \"Informations - Mariage Stéphie & Alain\";\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      {/* Bannière */}\r\n      <Banner />\r\n      <WaveShapeHaut />\r\n\r\n      {/* Informations du domaine */}\r\n      <section className=\"info-domaine bg-white fade-in-section\">\r\n        <div className=\"feux-domaine\">\r\n          <FeuxRoseOrange className=\"feux-rose-orange-informations\" />\r\n          <h2 className=\"text-center\">Domaine de l'Oiselière</h2>\r\n        </div>\r\n\r\n        <div className=\"encart-bleu encart-info-domaine\">\r\n          <div className=\"text-info\">\r\n            <p className=\"white\">\r\n              Le Domaine de l’Oiselière <br /> L’Oiselière, 85140 Chauché,\r\n              France\r\n            </p>\r\n            <p className=\"white\">\r\n              +33 (0)2 51 41 38 74 <br />\r\n              contact@loiseliere.com\r\n            </p>\r\n          </div>\r\n          <Button\r\n            link=\"https://www.loiseliere.com/\"\r\n            color={white}\r\n            borderColor=\"button-white\"\r\n          />\r\n        </div>\r\n        <div className=\"text text-center\">\r\n          <p>\r\n            Pour commencer, quelques mots sur le Domaine de l'Oiselière qui nous\r\n            accueil. Cet établissement est particulièrement sensible à la\r\n            question environnementale & attentif au respect de la nature.\r\n          </p>\r\n          <p>\r\n            C'est pourquoi nous vous invitons à prendre connaissance des\r\n            quelques règles simples, que vous trouverez ci-dessous, à respecter\r\n            tout au long de votre séjour.\r\n          </p>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Plan du domaine */}\r\n      <section className=\"plan-domaine bg-white\">\r\n        <img src={PlanDomaine} alt=\"\" className=\"plan-domaine1 fade-in-section\" />\r\n        <div className=\"legende fade-in-section\">\r\n          <div className=\"legende-box\">\r\n            {legendPink.map(({ bgColor, color, nombre, action }) => (\r\n              <LegendItem\r\n                bgColor={bgColor}\r\n                color={color}\r\n                nombre={nombre}\r\n                action={action}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"legende-box\">\r\n            {legendOrange.map(({ bgColor, color, nombre, action }) => (\r\n              <LegendItem\r\n                bgColor={bgColor}\r\n                color={color}\r\n                nombre={nombre}\r\n                action={action}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"legende-box\">\r\n            {legendGreen.map(({ bgColor, color, nombre, action }) => (\r\n              <LegendItem\r\n                bgColor={bgColor}\r\n                color={color}\r\n                nombre={nombre}\r\n                action={action}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* FAQ */}\r\n      <section className=\"faq fade-in-section\">\r\n        <Guirlande />\r\n        <h2>FAQ</h2>\r\n        <div className=\"container-accordion\">\r\n          <h3 className=\"blue\">Sur place</h3>\r\n          <div className=\"layout-accordion\">\r\n            {faqSurPlace.map(\r\n              ({ id, question, answer, link, linkText, img, imgClass }) => (\r\n                <FaqAccordion\r\n                  id={id}\r\n                  question={question}\r\n                  answer={answer}\r\n                  link={link}\r\n                  linkText={linkText}\r\n                  img={img}\r\n                  imgClass={imgClass}\r\n                  bgColor=\"bg-blue\"\r\n                />\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"container-accordion\">\r\n          <h3 className=\"pink\">Pour venir</h3>\r\n          <div className=\"layout-accordion\">\r\n            {faqPourVenir.map(\r\n              ({ id, question, answer, link, linkText, img, imgClass }) => (\r\n                <FaqAccordion\r\n                  id={id}\r\n                  question={question}\r\n                  answer={answer}\r\n                  link={link}\r\n                  linkText={linkText}\r\n                  img={img}\r\n                  imgClass={imgClass}\r\n                  bgColor=\"bg-pink\"\r\n                />\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"container-accordion\">\r\n          <h3 className=\"orange\">Dormir</h3>\r\n          <div className=\"layout-accordion\">\r\n            {faqDormir.map(\r\n              ({ id, question, answer, link, linkText, img, imgClass }) => (\r\n                <FaqAccordion\r\n                  id={id}\r\n                  question={question}\r\n                  answer={answer}\r\n                  link={link}\r\n                  linkText={linkText}\r\n                  img={img}\r\n                  imgClass={imgClass}\r\n                  bgColor=\"bg-orange\"\r\n                />\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"container-accordion\">\r\n          <h3 className=\"green\">Organisation</h3>\r\n          <div className=\"layout-accordion\">\r\n            {faqOrganisation.map(\r\n              ({ id, question, answer, link, linkText, img, imgClass }) => (\r\n                <FaqAccordion\r\n                  id={id}\r\n                  question={question}\r\n                  answer={answer}\r\n                  link={link}\r\n                  linkText={linkText}\r\n                  img={img}\r\n                  imgClass={imgClass}\r\n                  bgColor=\"bg-green\"\r\n                />\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Informations;\r\n","//Styles\r\nimport \"../../styles/Card-programmation.css\"\r\n\r\nfunction CardProgrammation({ Icon, title, content, bgColor, id }) {\r\n    return (\r\n      <div className={`card-programmation ${bgColor}`} id={id}>\r\n        <Icon />\r\n        <h4 className=\"title white\">{title}</h4>\r\n        <p className=\"white\">{content}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default CardProgrammation;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  if (swiper.params.grid && swiper.params.grid.rows > 1) {\n    const activeColumn = activeIndex;\n    const preloadColumns = [activeColumn - amount];\n    preloadColumns.push(...Array.from({\n      length: amount\n    }).map((_, i) => {\n      return activeColumn + slidesPerView + i;\n    }));\n    swiper.slides.forEach((slideEl, i) => {\n      if (preloadColumns.includes(slideEl.column)) unlazy(swiper, i);\n    });\n    return;\n  }\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind || swiper.params.loop) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex < activeIndex || realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(activeIndex - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && (i > slideIndexLastInView || i < activeIndex)) {\n        unlazy(swiper, i);\n      }\n    }\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap <= 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && (rtl ? translate > swiper.translate && translate > swiper.minTranslate() : translate < swiper.translate && translate < swiper.minTranslate())) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = params.virtual && params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  if (swiper.params.cssMode || swiper.params.slidesPerView !== 'auto' && !swiper.params.autoHeight) {\n    return;\n  }\n  swiper.update();\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    if (typeof breakpointParams[prop] === 'undefined') return;\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex] ? slides[activeIndex].swiperSlideSize : 0;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (params.freeMode && params.freeMode.enabled && !params.cssMode) {\n      setTranslate();\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !params.centeredSlides) {\n        const slides = swiper.virtual && params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    if (swiper.params.cssMode) return;\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    if (swiper.params.cssMode) return;\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    if (swiper.params.cssMode) return;\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","function isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction extend(target, src) {\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  Object.keys(src).filter(key => noExtend.indexOf(key) < 0).forEach(key => {\n    if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject(src[key]) && isObject(target[key]) && Object.keys(src[key]).length > 0) {\n      if (src[key].__swiper__) target[key] = src[key];else extend(target[key], src[key]);\n    } else {\n      target[key] = src[key];\n    }\n  });\n}\nfunction needsNavigation(params = {}) {\n  return params.navigation && typeof params.navigation.nextEl === 'undefined' && typeof params.navigation.prevEl === 'undefined';\n}\nfunction needsPagination(params = {}) {\n  return params.pagination && typeof params.pagination.el === 'undefined';\n}\nfunction needsScrollbar(params = {}) {\n  return params.scrollbar && typeof params.scrollbar.el === 'undefined';\n}\nfunction uniqueClasses(classNames = '') {\n  const classes = classNames.split(' ').map(c => c.trim()).filter(c => !!c);\n  const unique = [];\n  classes.forEach(c => {\n    if (unique.indexOf(c) < 0) unique.push(c);\n  });\n  return unique.join(' ');\n}\nfunction attrToProp(attrName = '') {\n  return attrName.replace(/-[a-z]/g, l => l.toUpperCase().replace('-', ''));\n}\nfunction wrapperClass(className = '') {\n  if (!className) return 'swiper-wrapper';\n  if (!className.includes('swiper-wrapper')) return `swiper-wrapper ${className}`;\n  return className;\n}\nexport { isObject, extend, needsNavigation, needsPagination, needsScrollbar, uniqueClasses, attrToProp, wrapperClass };","/* underscore in name -> watch for changes */\nconst paramsList = ['eventsPrefix', 'injectStyles', 'injectStylesUrls', 'modules', 'init', '_direction', 'oneWayMovement', 'touchEventsTarget', 'initialSlide', '_speed', 'cssMode', 'updateOnWindowResize', 'resizeObserver', 'nested', 'focusableElements', '_enabled', '_width', '_height', 'preventInteractionOnTransition', 'userAgent', 'url', '_edgeSwipeDetection', '_edgeSwipeThreshold', '_freeMode', '_autoHeight', 'setWrapperSize', 'virtualTranslate', '_effect', 'breakpoints', '_spaceBetween', '_slidesPerView', 'maxBackfaceHiddenSlides', '_grid', '_slidesPerGroup', '_slidesPerGroupSkip', '_slidesPerGroupAuto', '_centeredSlides', '_centeredSlidesBounds', '_slidesOffsetBefore', '_slidesOffsetAfter', 'normalizeSlideIndex', '_centerInsufficientSlides', '_watchOverflow', 'roundLengths', 'touchRatio', 'touchAngle', 'simulateTouch', '_shortSwipes', '_longSwipes', 'longSwipesRatio', 'longSwipesMs', '_followFinger', 'allowTouchMove', '_threshold', 'touchMoveStopPropagation', 'touchStartPreventDefault', 'touchStartForcePreventDefault', 'touchReleaseOnEdges', 'uniqueNavElements', '_resistance', '_resistanceRatio', '_watchSlidesProgress', '_grabCursor', 'preventClicks', 'preventClicksPropagation', '_slideToClickedSlide', '_loop', 'loopedSlides', 'loopPreventsSliding', '_rewind', '_allowSlidePrev', '_allowSlideNext', '_swipeHandler', '_noSwiping', 'noSwipingClass', 'noSwipingSelector', 'passiveListeners', 'containerModifierClass', 'slideClass', 'slideActiveClass', 'slideVisibleClass', 'slideNextClass', 'slidePrevClass', 'wrapperClass', 'lazyPreloaderClass', 'lazyPreloadPrevNext', 'runCallbacksOnInit', 'observer', 'observeParents', 'observeSlideChildren',\n// modules\n'a11y', '_autoplay', '_controller', 'coverflowEffect', 'cubeEffect', 'fadeEffect', 'flipEffect', 'creativeEffect', 'cardsEffect', 'hashNavigation', 'history', 'keyboard', 'mousewheel', '_navigation', '_pagination', 'parallax', '_scrollbar', '_thumbs', 'virtual', 'zoom', 'control'];\nexport { paramsList };","import React from 'react';\nfunction isChildSwiperSlide(child) {\n  return child.type && child.type.displayName && child.type.displayName.includes('SwiperSlide');\n}\nfunction processChildren(c) {\n  const slides = [];\n  React.Children.toArray(c).forEach(child => {\n    if (isChildSwiperSlide(child)) {\n      slides.push(child);\n    } else if (child.props && child.props.children) {\n      processChildren(child.props.children).forEach(slide => slides.push(slide));\n    }\n  });\n  return slides;\n}\nfunction getChildren(c) {\n  const slides = [];\n  const slots = {\n    'container-start': [],\n    'container-end': [],\n    'wrapper-start': [],\n    'wrapper-end': []\n  };\n  React.Children.toArray(c).forEach(child => {\n    if (isChildSwiperSlide(child)) {\n      slides.push(child);\n    } else if (child.props && child.props.slot && slots[child.props.slot]) {\n      slots[child.props.slot].push(child);\n    } else if (child.props && child.props.children) {\n      const foundSlides = processChildren(child.props.children);\n      if (foundSlides.length > 0) {\n        foundSlides.forEach(slide => slides.push(slide));\n      } else {\n        slots['container-end'].push(child);\n      }\n    } else {\n      slots['container-end'].push(child);\n    }\n  });\n  return {\n    slides,\n    slots\n  };\n}\nexport { getChildren };","import { useEffect, useLayoutEffect } from 'react';\nfunction useIsomorphicLayoutEffect(callback, deps) {\n  // eslint-disable-next-line\n  if (typeof window === 'undefined') return useEffect(callback, deps);\n  return useLayoutEffect(callback, deps);\n}\nexport { useIsomorphicLayoutEffect };","import { createContext, useContext } from 'react';\nexport const SwiperSlideContext = /*#__PURE__*/createContext(null);\nexport const useSwiperSlide = () => {\n  return useContext(SwiperSlideContext);\n};\nexport const SwiperContext = /*#__PURE__*/createContext(null);\nexport const useSwiper = () => {\n  return useContext(SwiperContext);\n};","function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React, { useRef, useState, useEffect, forwardRef } from 'react';\nimport SwiperCore from 'swiper';\nimport { getParams } from '../components-shared/get-params.js';\nimport { mountSwiper } from '../components-shared/mount-swiper.js';\nimport { needsScrollbar, needsNavigation, needsPagination, uniqueClasses, extend, wrapperClass } from '../components-shared/utils.js';\nimport { getChangedParams } from '../components-shared/get-changed-params.js';\nimport { getChildren } from './get-children.js';\nimport { updateSwiper } from '../components-shared/update-swiper.js';\nimport { renderVirtual } from './virtual.js';\nimport { updateOnVirtualData } from '../components-shared/update-on-virtual-data.js';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect.js';\nimport { SwiperContext } from './context.js';\nconst Swiper = /*#__PURE__*/forwardRef(function (_temp, externalElRef) {\n  let {\n    className,\n    tag: Tag = 'div',\n    wrapperTag: WrapperTag = 'div',\n    children,\n    onSwiper,\n    ...rest\n  } = _temp === void 0 ? {} : _temp;\n  let eventsAssigned = false;\n  const [containerClasses, setContainerClasses] = useState('swiper');\n  const [virtualData, setVirtualData] = useState(null);\n  const [breakpointChanged, setBreakpointChanged] = useState(false);\n  const initializedRef = useRef(false);\n  const swiperElRef = useRef(null);\n  const swiperRef = useRef(null);\n  const oldPassedParamsRef = useRef(null);\n  const oldSlides = useRef(null);\n  const nextElRef = useRef(null);\n  const prevElRef = useRef(null);\n  const paginationElRef = useRef(null);\n  const scrollbarElRef = useRef(null);\n  const {\n    params: swiperParams,\n    passedParams,\n    rest: restProps,\n    events\n  } = getParams(rest);\n  const {\n    slides,\n    slots\n  } = getChildren(children);\n  const onBeforeBreakpoint = () => {\n    setBreakpointChanged(!breakpointChanged);\n  };\n  Object.assign(swiperParams.on, {\n    _containerClasses(swiper, classes) {\n      setContainerClasses(classes);\n    }\n  });\n  const initSwiper = () => {\n    // init swiper\n    Object.assign(swiperParams.on, events);\n    eventsAssigned = true;\n    const passParams = {\n      ...swiperParams\n    };\n    delete passParams.wrapperClass;\n    swiperRef.current = new SwiperCore(passParams);\n    if (swiperRef.current.virtual && swiperRef.current.params.virtual.enabled) {\n      swiperRef.current.virtual.slides = slides;\n      const extendWith = {\n        cache: false,\n        slides,\n        renderExternal: setVirtualData,\n        renderExternalUpdate: false\n      };\n      extend(swiperRef.current.params.virtual, extendWith);\n      extend(swiperRef.current.originalParams.virtual, extendWith);\n    }\n  };\n  if (!swiperElRef.current) {\n    initSwiper();\n  }\n\n  // Listen for breakpoints change\n  if (swiperRef.current) {\n    swiperRef.current.on('_beforeBreakpoint', onBeforeBreakpoint);\n  }\n  const attachEvents = () => {\n    if (eventsAssigned || !events || !swiperRef.current) return;\n    Object.keys(events).forEach(eventName => {\n      swiperRef.current.on(eventName, events[eventName]);\n    });\n  };\n  const detachEvents = () => {\n    if (!events || !swiperRef.current) return;\n    Object.keys(events).forEach(eventName => {\n      swiperRef.current.off(eventName, events[eventName]);\n    });\n  };\n  useEffect(() => {\n    return () => {\n      if (swiperRef.current) swiperRef.current.off('_beforeBreakpoint', onBeforeBreakpoint);\n    };\n  });\n\n  // set initialized flag\n  useEffect(() => {\n    if (!initializedRef.current && swiperRef.current) {\n      swiperRef.current.emitSlidesClasses();\n      initializedRef.current = true;\n    }\n  });\n\n  // mount swiper\n  useIsomorphicLayoutEffect(() => {\n    if (externalElRef) {\n      externalElRef.current = swiperElRef.current;\n    }\n    if (!swiperElRef.current) return;\n    if (swiperRef.current.destroyed) {\n      initSwiper();\n    }\n    mountSwiper({\n      el: swiperElRef.current,\n      nextEl: nextElRef.current,\n      prevEl: prevElRef.current,\n      paginationEl: paginationElRef.current,\n      scrollbarEl: scrollbarElRef.current,\n      swiper: swiperRef.current\n    }, swiperParams);\n    if (onSwiper) onSwiper(swiperRef.current);\n    // eslint-disable-next-line\n    return () => {\n      if (swiperRef.current && !swiperRef.current.destroyed) {\n        swiperRef.current.destroy(true, false);\n      }\n    };\n  }, []);\n\n  // watch for params change\n  useIsomorphicLayoutEffect(() => {\n    attachEvents();\n    const changedParams = getChangedParams(passedParams, oldPassedParamsRef.current, slides, oldSlides.current, c => c.key);\n    oldPassedParamsRef.current = passedParams;\n    oldSlides.current = slides;\n    if (changedParams.length && swiperRef.current && !swiperRef.current.destroyed) {\n      updateSwiper({\n        swiper: swiperRef.current,\n        slides,\n        passedParams,\n        changedParams,\n        nextEl: nextElRef.current,\n        prevEl: prevElRef.current,\n        scrollbarEl: scrollbarElRef.current,\n        paginationEl: paginationElRef.current\n      });\n    }\n    return () => {\n      detachEvents();\n    };\n  });\n\n  // update on virtual update\n  useIsomorphicLayoutEffect(() => {\n    updateOnVirtualData(swiperRef.current);\n  }, [virtualData]);\n\n  // bypass swiper instance to slides\n  function renderSlides() {\n    if (swiperParams.virtual) {\n      return renderVirtual(swiperRef.current, slides, virtualData);\n    }\n    return slides.map((child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        swiper: swiperRef.current,\n        swiperSlideIndex: index\n      });\n    });\n  }\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    ref: swiperElRef,\n    className: uniqueClasses(`${containerClasses}${className ? ` ${className}` : ''}`)\n  }, restProps), /*#__PURE__*/React.createElement(SwiperContext.Provider, {\n    value: swiperRef.current\n  }, slots['container-start'], /*#__PURE__*/React.createElement(WrapperTag, {\n    className: wrapperClass(swiperParams.wrapperClass)\n  }, slots['wrapper-start'], renderSlides(), slots['wrapper-end']), needsNavigation(swiperParams) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: prevElRef,\n    className: \"swiper-button-prev\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: nextElRef,\n    className: \"swiper-button-next\"\n  })), needsScrollbar(swiperParams) && /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollbarElRef,\n    className: \"swiper-scrollbar\"\n  }), needsPagination(swiperParams) && /*#__PURE__*/React.createElement(\"div\", {\n    ref: paginationElRef,\n    className: \"swiper-pagination\"\n  }), slots['container-end']));\n});\nSwiper.displayName = 'Swiper';\nexport { Swiper };","import Swiper from 'swiper';\nimport { isObject, extend } from './utils.js';\nimport { paramsList } from './params-list.js';\nfunction getParams(obj = {}, splitEvents = true) {\n  const params = {\n    on: {}\n  };\n  const events = {};\n  const passedParams = {};\n  extend(params, Swiper.defaults);\n  extend(params, Swiper.extendedDefaults);\n  params._emitClasses = true;\n  params.init = false;\n  const rest = {};\n  const allowedParams = paramsList.map(key => key.replace(/_/, ''));\n  const plainObj = Object.assign({}, obj);\n  Object.keys(plainObj).forEach(key => {\n    if (typeof obj[key] === 'undefined') return;\n    if (allowedParams.indexOf(key) >= 0) {\n      if (isObject(obj[key])) {\n        params[key] = {};\n        passedParams[key] = {};\n        extend(params[key], obj[key]);\n        extend(passedParams[key], obj[key]);\n      } else {\n        params[key] = obj[key];\n        passedParams[key] = obj[key];\n      }\n    } else if (key.search(/on[A-Z]/) === 0 && typeof obj[key] === 'function') {\n      if (splitEvents) {\n        events[`${key[2].toLowerCase()}${key.substr(3)}`] = obj[key];\n      } else {\n        params.on[`${key[2].toLowerCase()}${key.substr(3)}`] = obj[key];\n      }\n    } else {\n      rest[key] = obj[key];\n    }\n  });\n  ['navigation', 'pagination', 'scrollbar'].forEach(key => {\n    if (params[key] === true) params[key] = {};\n    if (params[key] === false) delete params[key];\n  });\n  return {\n    params,\n    passedParams,\n    rest,\n    events\n  };\n}\nexport { getParams };","import { needsNavigation, needsPagination, needsScrollbar } from './utils.js';\nfunction mountSwiper({\n  el,\n  nextEl,\n  prevEl,\n  paginationEl,\n  scrollbarEl,\n  swiper\n}, swiperParams) {\n  if (needsNavigation(swiperParams) && nextEl && prevEl) {\n    swiper.params.navigation.nextEl = nextEl;\n    swiper.originalParams.navigation.nextEl = nextEl;\n    swiper.params.navigation.prevEl = prevEl;\n    swiper.originalParams.navigation.prevEl = prevEl;\n  }\n  if (needsPagination(swiperParams) && paginationEl) {\n    swiper.params.pagination.el = paginationEl;\n    swiper.originalParams.pagination.el = paginationEl;\n  }\n  if (needsScrollbar(swiperParams) && scrollbarEl) {\n    swiper.params.scrollbar.el = scrollbarEl;\n    swiper.originalParams.scrollbar.el = scrollbarEl;\n  }\n  swiper.init(el);\n}\nexport { mountSwiper };","import { paramsList } from './params-list.js';\nimport { isObject } from './utils.js';\nfunction getChangedParams(swiperParams, oldParams, children, oldChildren, getKey) {\n  const keys = [];\n  if (!oldParams) return keys;\n  const addKey = key => {\n    if (keys.indexOf(key) < 0) keys.push(key);\n  };\n  if (children && oldChildren) {\n    const oldChildrenKeys = oldChildren.map(getKey);\n    const childrenKeys = children.map(getKey);\n    if (oldChildrenKeys.join('') !== childrenKeys.join('')) addKey('children');\n    if (oldChildren.length !== children.length) addKey('children');\n  }\n  const watchParams = paramsList.filter(key => key[0] === '_').map(key => key.replace(/_/, ''));\n  watchParams.forEach(key => {\n    if (key in swiperParams && key in oldParams) {\n      if (isObject(swiperParams[key]) && isObject(oldParams[key])) {\n        const newKeys = Object.keys(swiperParams[key]);\n        const oldKeys = Object.keys(oldParams[key]);\n        if (newKeys.length !== oldKeys.length) {\n          addKey(key);\n        } else {\n          newKeys.forEach(newKey => {\n            if (swiperParams[key][newKey] !== oldParams[key][newKey]) {\n              addKey(key);\n            }\n          });\n          oldKeys.forEach(oldKey => {\n            if (swiperParams[key][oldKey] !== oldParams[key][oldKey]) addKey(key);\n          });\n        }\n      } else if (swiperParams[key] !== oldParams[key]) {\n        addKey(key);\n      }\n    }\n  });\n  return keys;\n}\nexport { getChangedParams };","import { isObject, extend } from './utils.js';\nfunction updateSwiper({\n  swiper,\n  slides,\n  passedParams,\n  changedParams,\n  nextEl,\n  prevEl,\n  scrollbarEl,\n  paginationEl\n}) {\n  const updateParams = changedParams.filter(key => key !== 'children' && key !== 'direction' && key !== 'wrapperClass');\n  const {\n    params: currentParams,\n    pagination,\n    navigation,\n    scrollbar,\n    virtual,\n    thumbs\n  } = swiper;\n  let needThumbsInit;\n  let needControllerInit;\n  let needPaginationInit;\n  let needScrollbarInit;\n  let needNavigationInit;\n  let loopNeedDestroy;\n  let loopNeedEnable;\n  let loopNeedReloop;\n  if (changedParams.includes('thumbs') && passedParams.thumbs && passedParams.thumbs.swiper && currentParams.thumbs && !currentParams.thumbs.swiper) {\n    needThumbsInit = true;\n  }\n  if (changedParams.includes('controller') && passedParams.controller && passedParams.controller.control && currentParams.controller && !currentParams.controller.control) {\n    needControllerInit = true;\n  }\n  if (changedParams.includes('pagination') && passedParams.pagination && (passedParams.pagination.el || paginationEl) && (currentParams.pagination || currentParams.pagination === false) && pagination && !pagination.el) {\n    needPaginationInit = true;\n  }\n  if (changedParams.includes('scrollbar') && passedParams.scrollbar && (passedParams.scrollbar.el || scrollbarEl) && (currentParams.scrollbar || currentParams.scrollbar === false) && scrollbar && !scrollbar.el) {\n    needScrollbarInit = true;\n  }\n  if (changedParams.includes('navigation') && passedParams.navigation && (passedParams.navigation.prevEl || prevEl) && (passedParams.navigation.nextEl || nextEl) && (currentParams.navigation || currentParams.navigation === false) && navigation && !navigation.prevEl && !navigation.nextEl) {\n    needNavigationInit = true;\n  }\n  const destroyModule = mod => {\n    if (!swiper[mod]) return;\n    swiper[mod].destroy();\n    if (mod === 'navigation') {\n      if (swiper.isElement) {\n        swiper[mod].prevEl.remove();\n        swiper[mod].nextEl.remove();\n      }\n      currentParams[mod].prevEl = undefined;\n      currentParams[mod].nextEl = undefined;\n      swiper[mod].prevEl = undefined;\n      swiper[mod].nextEl = undefined;\n    } else {\n      if (swiper.isElement) {\n        swiper[mod].el.remove();\n      }\n      currentParams[mod].el = undefined;\n      swiper[mod].el = undefined;\n    }\n  };\n  if (changedParams.includes('loop') && swiper.isElement) {\n    if (currentParams.loop && !passedParams.loop) {\n      loopNeedDestroy = true;\n    } else if (!currentParams.loop && passedParams.loop) {\n      loopNeedEnable = true;\n    } else {\n      loopNeedReloop = true;\n    }\n  }\n  updateParams.forEach(key => {\n    if (isObject(currentParams[key]) && isObject(passedParams[key])) {\n      extend(currentParams[key], passedParams[key]);\n      if ((key === 'navigation' || key === 'pagination' || key === 'scrollbar') && 'enabled' in passedParams[key] && !passedParams[key].enabled) {\n        destroyModule(key);\n      }\n    } else {\n      const newValue = passedParams[key];\n      if ((newValue === true || newValue === false) && (key === 'navigation' || key === 'pagination' || key === 'scrollbar')) {\n        if (newValue === false) {\n          destroyModule(key);\n        }\n      } else {\n        currentParams[key] = passedParams[key];\n      }\n    }\n  });\n  if (updateParams.includes('controller') && !needControllerInit && swiper.controller && swiper.controller.control && currentParams.controller && currentParams.controller.control) {\n    swiper.controller.control = currentParams.controller.control;\n  }\n  if (changedParams.includes('children') && slides && virtual && currentParams.virtual.enabled) {\n    virtual.slides = slides;\n    virtual.update(true);\n  }\n  if (changedParams.includes('children') && slides && currentParams.loop) {\n    loopNeedReloop = true;\n  }\n  if (needThumbsInit) {\n    const initialized = thumbs.init();\n    if (initialized) thumbs.update(true);\n  }\n  if (needControllerInit) {\n    swiper.controller.control = currentParams.controller.control;\n  }\n  if (needPaginationInit) {\n    if (swiper.isElement && (!paginationEl || typeof paginationEl === 'string')) {\n      paginationEl = document.createElement('div');\n      paginationEl.classList.add('swiper-pagination');\n      swiper.el.shadowEl.appendChild(paginationEl);\n    }\n    if (paginationEl) currentParams.pagination.el = paginationEl;\n    pagination.init();\n    pagination.render();\n    pagination.update();\n  }\n  if (needScrollbarInit) {\n    if (swiper.isElement && (!scrollbarEl || typeof scrollbarEl === 'string')) {\n      scrollbarEl = document.createElement('div');\n      scrollbarEl.classList.add('swiper-scrollbar');\n      swiper.el.shadowEl.appendChild(scrollbarEl);\n    }\n    if (scrollbarEl) currentParams.scrollbar.el = scrollbarEl;\n    scrollbar.init();\n    scrollbar.updateSize();\n    scrollbar.setTranslate();\n  }\n  if (needNavigationInit) {\n    if (swiper.isElement) {\n      if (!nextEl || typeof nextEl === 'string') {\n        nextEl = document.createElement('div');\n        nextEl.classList.add('swiper-button-next');\n        swiper.el.shadowEl.appendChild(nextEl);\n      }\n      if (!prevEl || typeof prevEl === 'string') {\n        prevEl = document.createElement('div');\n        prevEl.classList.add('swiper-button-prev');\n        swiper.el.shadowEl.appendChild(prevEl);\n      }\n    }\n    if (nextEl) currentParams.navigation.nextEl = nextEl;\n    if (prevEl) currentParams.navigation.prevEl = prevEl;\n    navigation.init();\n    navigation.update();\n  }\n  if (changedParams.includes('allowSlideNext')) {\n    swiper.allowSlideNext = passedParams.allowSlideNext;\n  }\n  if (changedParams.includes('allowSlidePrev')) {\n    swiper.allowSlidePrev = passedParams.allowSlidePrev;\n  }\n  if (changedParams.includes('direction')) {\n    swiper.changeDirection(passedParams.direction, false);\n  }\n  if (loopNeedDestroy || loopNeedReloop) {\n    swiper.loopDestroy();\n  }\n  if (loopNeedEnable || loopNeedReloop) {\n    swiper.loopCreate();\n  }\n  swiper.update();\n}\nexport { updateSwiper };","export const updateOnVirtualData = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params.virtual || swiper.params.virtual && !swiper.params.virtual.enabled) return;\n  swiper.updateSlides();\n  swiper.updateProgress();\n  swiper.updateSlidesClasses();\n  if (swiper.parallax && swiper.params.parallax && swiper.params.parallax.enabled) {\n    swiper.parallax.setTranslate();\n  }\n};","import React from 'react';\nfunction renderVirtual(swiper, slides, virtualData) {\n  if (!virtualData) return null;\n  const getSlideIndex = index => {\n    let slideIndex = index;\n    if (index < 0) {\n      slideIndex = slides.length + index;\n    } else if (slideIndex >= slides.length) {\n      // eslint-disable-next-line\n      slideIndex = slideIndex - slides.length;\n    }\n    return slideIndex;\n  };\n  const style = swiper.isHorizontal() ? {\n    [swiper.rtlTranslate ? 'right' : 'left']: `${virtualData.offset}px`\n  } : {\n    top: `${virtualData.offset}px`\n  };\n  const {\n    from,\n    to\n  } = virtualData;\n  const loopFrom = swiper.params.loop ? -slides.length : 0;\n  const loopTo = swiper.params.loop ? slides.length * 2 : slides.length;\n  const slidesToRender = [];\n  for (let i = loopFrom; i < loopTo; i += 1) {\n    if (i >= from && i <= to) {\n      slidesToRender.push(slides[getSlideIndex(i)]);\n    }\n  }\n  return slidesToRender.map((child, index) => {\n    return /*#__PURE__*/React.cloneElement(child, {\n      swiper,\n      style,\n      key: `slide-${index}`\n    });\n  });\n}\nexport { renderVirtual };","function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React, { useRef, useState, forwardRef } from 'react';\nimport { uniqueClasses } from '../components-shared/utils.js';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect.js';\nimport { SwiperSlideContext } from './context.js';\nconst SwiperSlide = /*#__PURE__*/forwardRef(function (_temp, externalRef) {\n  let {\n    tag: Tag = 'div',\n    children,\n    className = '',\n    swiper,\n    zoom,\n    lazy,\n    virtualIndex,\n    swiperSlideIndex,\n    ...rest\n  } = _temp === void 0 ? {} : _temp;\n  const slideElRef = useRef(null);\n  const [slideClasses, setSlideClasses] = useState('swiper-slide');\n  const [lazyLoaded, setLazyLoaded] = useState(false);\n  function updateClasses(_s, el, classNames) {\n    if (el === slideElRef.current) {\n      setSlideClasses(classNames);\n    }\n  }\n  useIsomorphicLayoutEffect(() => {\n    if (typeof swiperSlideIndex !== 'undefined') {\n      slideElRef.current.swiperSlideIndex = swiperSlideIndex;\n    }\n    if (externalRef) {\n      externalRef.current = slideElRef.current;\n    }\n    if (!slideElRef.current || !swiper) {\n      return;\n    }\n    if (swiper.destroyed) {\n      if (slideClasses !== 'swiper-slide') {\n        setSlideClasses('swiper-slide');\n      }\n      return;\n    }\n    swiper.on('_slideClass', updateClasses);\n    // eslint-disable-next-line\n    return () => {\n      if (!swiper) return;\n      swiper.off('_slideClass', updateClasses);\n    };\n  });\n  useIsomorphicLayoutEffect(() => {\n    if (swiper && slideElRef.current && !swiper.destroyed) {\n      setSlideClasses(swiper.getSlideClasses(slideElRef.current));\n    }\n  }, [swiper]);\n  const slideData = {\n    isActive: slideClasses.indexOf('swiper-slide-active') >= 0,\n    isVisible: slideClasses.indexOf('swiper-slide-visible') >= 0,\n    isPrev: slideClasses.indexOf('swiper-slide-prev') >= 0,\n    isNext: slideClasses.indexOf('swiper-slide-next') >= 0\n  };\n  const renderChildren = () => {\n    return typeof children === 'function' ? children(slideData) : children;\n  };\n  const onLoad = () => {\n    setLazyLoaded(true);\n  };\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    ref: slideElRef,\n    className: uniqueClasses(`${slideClasses}${className ? ` ${className}` : ''}`),\n    \"data-swiper-slide-index\": virtualIndex,\n    onLoad: onLoad\n  }, rest), zoom && /*#__PURE__*/React.createElement(SwiperSlideContext.Provider, {\n    value: slideData\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"swiper-zoom-container\",\n    \"data-swiper-zoom\": typeof zoom === 'number' ? zoom : undefined\n  }, renderChildren(), lazy && !lazyLoaded && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"swiper-lazy-preloader\"\n  }))), !zoom && /*#__PURE__*/React.createElement(SwiperSlideContext.Provider, {\n    value: slideData\n  }, renderChildren(), lazy && !lazyLoaded && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"swiper-lazy-preloader\"\n  })));\n});\nSwiperSlide.displayName = 'SwiperSlide';\nexport { SwiperSlide };","function NavNext({className}) {\r\n  return (\r\n    <svg\r\n      width=\"46\"\r\n      height=\"46\"\r\n      viewBox=\"0 0 46 46\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <circle\r\n        cx=\"23\"\r\n        cy=\"23\"\r\n        r=\"22\"\r\n        transform=\"rotate(-90 23 23)\"\r\n        stroke={className}\r\n        stroke-width=\"2\"\r\n      />\r\n      <g clip-path=\"url(#clip0_392_281)\">\r\n        <path\r\n          d=\"M19.127 30.148L26.2593 23L19.127 15.852L21.3227 13.6562L30.6665 23L21.3227 32.3438L19.127 30.148Z\"\r\n          fill={className}\r\n        />\r\n      </g>\r\n      <defs>\r\n        <clipPath id=\"clip0_392_281\">\r\n          <rect\r\n            width=\"37.375\"\r\n            height=\"37.375\"\r\n            fill=\"white\"\r\n            transform=\"matrix(0 -1 1 0 5.75 41.6875)\"\r\n          />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default NavNext;\r\n","function NavPrev({className}) {\r\n  return (\r\n    <svg\r\n      width=\"46\"\r\n      height=\"46\"\r\n      viewBox=\"0 0 46 46\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <circle\r\n        cx=\"23\"\r\n        cy=\"23\"\r\n        r=\"22\"\r\n        transform=\"rotate(90 23 23)\"\r\n        stroke={className}\r\n        stroke-width=\"2\"\r\n      />\r\n      <g clip-path=\"url(#clip0_392_286)\">\r\n        <path\r\n          d=\"M26.873 15.852L19.7407 23L26.873 30.148L24.6773 32.3438L15.3335 23L24.6773 13.6562L26.873 15.852Z\"\r\n          fill={className}\r\n        />\r\n      </g>\r\n      <defs>\r\n        <clipPath id=\"clip0_392_286\">\r\n          <rect\r\n            width=\"37.375\"\r\n            height=\"37.375\"\r\n            fill=\"white\"\r\n            transform=\"matrix(0 1 -1 0 40.25 4.3125)\"\r\n          />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default NavPrev;\r\n","import { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Navigation } from \"swiper\";\r\nimport \"swiper/swiper-bundle.css\";\r\nimport \"../../styles/Carrousel-programme.css\";\r\n\r\n//Assets\r\nimport NavNext from \"../../assets/icons/Nav-next\";\r\nimport NavPrev from \"../../assets/icons/Nav-prev\";\r\n\r\n//Données\r\nimport { blue } from \"../../datas/colors\";\r\n\r\nfunction CarrouselProgramme({ typeSwiper }) {\r\n  return (\r\n    <section className=\"carrousel-programme\">\r\n      <span className=\"trait-carrousel1 bg-blue\"></span>\r\n      <Swiper\r\n        slidesPerView={4}\r\n        slidesPerGroup={1}\r\n        slideToClickedSlide\r\n        navigation={{\r\n          nextEl: \".custom-next\",\r\n          prevEl: \".custom-prev\",\r\n        }}\r\n        modules={[Navigation]}\r\n        className=\"swiper-programme\"\r\n        loop={false}\r\n        loopFillGroupWithBlank={true}\r\n        breakpoints={{\r\n          320: {\r\n            slidesPerView: 1, \r\n          },\r\n          768: {\r\n            slidesPerView: 2, \r\n          },\r\n          1070:{\r\n            slidesPerView: 3,\r\n          },\r\n          1380: {\r\n            slidesPerView: 4, \r\n          },\r\n        }}\r\n      >\r\n        {typeSwiper.map(({ horaire, title, cover }, index) => (\r\n          <SwiperSlide key={index} className=\"swiper-slide-programme\">\r\n            <div className=\"content-slide-programme\">\r\n              <h3>{horaire}</h3>\r\n              <p>•</p>\r\n              <p className=\"slide-title-programme\">{title}</p>\r\n            </div>\r\n            <img src={cover} alt=\"\" className=\"slide-cover-programme\" />\r\n          </SwiperSlide>\r\n        ))}\r\n\r\n        {/* Slides fantômes */}\r\n        {Array.from({ length: 3 }).map((i) => (\r\n          <SwiperSlide key={i}>\r\n            <div className=\"ghost-slide\" />\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n\r\n      <div className=\"custom-navigation\">\r\n        <span className=\"trait-carrousel2 bg-blue\"></span>\r\n        <button className=\"custom-prev btn-nav\">\r\n          <NavPrev className={blue}/>\r\n        </button>\r\n        <button className=\"custom-next btn-nav\">\r\n          <NavNext className={blue}/>\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CarrouselProgramme;\r\n","function Coeur({className}) {\r\n  return (\r\n    <svg\r\n      width=\"67\"\r\n      height=\"59\"\r\n      viewBox=\"0 0 74 66\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={className}\r\n    >\r\n      <path\r\n        fill-rule=\"evenodd\"\r\n        clip-rule=\"evenodd\"\r\n        d=\"M6.27208 6.40455C13.3015 -0.801515 24.6985 -0.801515 31.7279 6.40455L37 11.8091L42.2721 6.40455C49.3015 -0.801515 60.6985 -0.801515 67.7279 6.40455C74.7574 13.6106 74.7574 25.2939 67.7279 32.5L37 64L6.27208 32.5C-0.757359 25.2939 -0.757359 13.6106 6.27208 6.40455Z\"\r\n        stroke=\"#EF6B93\"\r\n        stroke-width=\"2\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Coeur;\r\n","function Origamis() {\r\n  return (\r\n    <svg\r\n      width=\"252\"\r\n      height=\"336\"\r\n      viewBox=\"0 0 252 336\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"origamis\"\r\n    >\r\n      <path\r\n        d=\"M241.787 303.274L224.347 273.989L218.425 273.495C227.142 243.045 238.825 227.264 251 196.334C213.59 215.182 192.287 225.529 152.945 243.059L141.428 268.724L135.505 270.698C108.695 236.2 94.9147 217.47 79.2386 188.437C90.1773 219.144 98.9102 237.282 115.763 270.081L108.524 268.724C85.0525 278.139 73.2707 283.619 54.2312 294.061C77.3896 303.473 103.353 308.412 156.564 317.04L171.042 334.533L175.649 328.19L179.597 332.559L215.134 283.86L241.787 303.274Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M241.787 303.603L219.083 278.925L213.818 275.963L175.649 328.519L179.597 332.888L215.134 284.189L241.787 303.603Z\"\r\n        fill=\"#D55D81\"\r\n      />\r\n      <path\r\n        d=\"M175.649 314.132L164.132 319.068L156.564 317.369L171.042 334.862L175.649 314.132Z\"\r\n        fill=\"#D55D81\"\r\n      />\r\n      <path\r\n        d=\"M160.184 262.801C161.496 274.471 164.296 284.471 170.526 300.971L182.158 292.415C179.059 287.754 176.446 283.917 173.803 280.241C169.888 274.795 165.907 269.701 160.184 262.801Z\"\r\n        fill=\"#D55D81\"\r\n      />\r\n      <path\r\n        d=\"M241.787 303.274L219.083 278.595L213.818 275.634M241.787 303.274L224.347 273.989L218.425 273.495M241.787 303.274L215.134 283.86M54.2312 294.061C73.2707 283.619 85.0525 278.139 108.524 268.724L115.763 270.081M54.2312 294.061C77.3896 303.473 103.353 308.412 156.564 317.04M54.2312 294.061C94.7037 291.099 113.788 296.364 152.692 296.364M175.649 313.803L164.132 318.739L156.564 317.04M175.649 313.803L171.042 334.533M175.649 313.803C173.724 308.963 172.026 304.614 170.526 300.641M175.649 313.803C166.533 307.406 159.406 302.152 152.692 296.364M171.042 334.533L156.564 317.04M171.042 334.533L175.649 328.19M208.553 272.673L213.818 275.634M208.553 272.673L182.158 292.086M208.553 272.673L218.425 273.495M213.818 275.634L175.649 328.19M213.818 275.634L215.134 283.86M175.649 328.19L179.597 332.559L215.134 283.86M170.526 300.641C164.296 284.142 161.496 274.142 160.184 262.472M170.526 300.641L182.158 292.086M160.184 262.472L141.428 268.724M160.184 262.472C165.907 269.372 169.888 274.466 173.803 279.912M182.158 292.086C179.059 287.425 176.446 283.588 173.803 279.912M152.692 296.364C145.202 289.908 138.228 282.787 129.582 272.673M129.582 272.673L135.505 270.698M129.582 272.673L115.763 270.081M218.425 273.495C227.142 243.045 238.825 227.264 251 196.334M251 196.334C213.59 215.182 192.287 225.529 152.945 243.059L141.428 268.724M251 196.334L173.803 279.912M141.428 268.724L135.505 270.698M135.505 270.698C108.695 236.2 94.9147 217.47 79.2386 188.437C90.1773 219.144 98.9102 237.282 115.763 270.081M213.818 275.963L219.083 278.925L241.787 303.603L215.134 284.189M213.818 275.963L175.649 328.519L179.597 332.888L215.134 284.189M213.818 275.963L215.134 284.189M164.132 319.068L175.649 314.132L171.042 334.862L156.564 317.369L164.132 319.068ZM170.526 300.971C164.296 284.471 161.496 274.471 160.184 262.801C165.907 269.701 169.888 274.795 173.803 280.241C176.446 283.917 179.059 287.754 182.158 292.415L170.526 300.971Z\"\r\n        stroke=\"#692D3F\"\r\n        stroke-opacity=\"0.2\"\r\n        stroke-width=\"0.5\"\r\n      />\r\n      <path d=\"M160 263L160 0\" stroke=\"#F2F2F2\" />\r\n      <path\r\n        d=\"M8.47352 152.942L22.6198 129.187L27.4242 128.787C20.3529 104.087 10.8757 91.2858 1 66.1961C31.346 81.4845 48.626 89.878 80.5396 104.098L89.8815 124.917L94.6859 126.518C116.434 98.5343 127.612 83.3411 140.328 59.7902C131.455 84.6987 124.371 99.4113 110.701 126.018L116.573 124.917C135.612 132.554 145.169 136.999 160.613 145.469C141.828 153.104 120.767 157.11 77.6036 164.109L65.8595 178.299L62.1227 173.154L58.9198 176.697L30.0933 137.195L8.47352 152.942Z\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <path\r\n        d=\"M8.47352 153.209L26.8904 133.191L31.161 130.789L62.1227 173.421L58.9198 176.964L30.0933 137.461L8.47352 153.209Z\"\r\n        fill=\"#D58813\"\r\n      />\r\n      <path\r\n        d=\"M62.1227 161.75L71.4646 165.754L77.6036 164.376L65.8595 178.566L62.1227 161.75Z\"\r\n        fill=\"#D58813\"\r\n      />\r\n      <path\r\n        d=\"M74.6675 120.112C73.6032 129.579 71.3313 137.69 66.2782 151.074L56.8428 144.134C59.3562 140.353 61.4757 137.241 63.6197 134.259C66.7956 129.841 70.0251 125.709 74.6675 120.112Z\"\r\n        fill=\"#D58813\"\r\n      />\r\n      <path\r\n        d=\"M8.47352 152.942L26.8904 132.924L31.161 130.522M8.47352 152.942L22.6198 129.187L27.4242 128.787M8.47352 152.942L30.0933 137.195M160.613 145.469C145.169 136.999 135.612 132.554 116.573 124.917L110.701 126.018M160.613 145.469C141.828 153.104 120.767 157.11 77.6036 164.109M160.613 145.469C127.783 143.067 112.302 147.337 80.7447 147.337M62.1227 161.483L71.4646 165.487L77.6036 164.109M62.1227 161.483L65.8595 178.299M62.1227 161.483C63.6837 157.557 65.0616 154.029 66.2782 150.807M62.1227 161.483C69.5168 156.294 75.2985 152.032 80.7447 147.337M65.8595 178.299L77.6036 164.109M65.8595 178.299L62.1227 173.154M35.4316 128.12L31.161 130.522M35.4316 128.12L56.8428 143.867M35.4316 128.12L27.4242 128.787M31.161 130.522L62.1227 173.154M31.161 130.522L30.0933 137.195M62.1227 173.154L58.9198 176.697L30.0933 137.195M66.2782 150.807C71.3313 137.423 73.6032 129.312 74.6675 119.845M66.2782 150.807L56.8428 143.867M74.6675 119.845L89.8815 124.917M74.6675 119.845C70.0251 125.442 66.7956 129.574 63.6197 133.992M56.8428 143.867C59.3562 140.086 61.4757 136.974 63.6197 133.992M80.7447 147.337C86.8198 142.1 92.4776 136.324 99.4903 128.12M99.4903 128.12L94.6859 126.518M99.4903 128.12L110.701 126.018M27.4242 128.787C20.3529 104.087 10.8757 91.2858 1 66.1961M1 66.1961C31.346 81.4845 48.626 89.878 80.5396 104.098L89.8815 124.917M1 66.1961L63.6197 133.992M89.8815 124.917L94.6859 126.518M94.6859 126.518C116.434 98.5343 127.612 83.3411 140.328 59.7902C131.455 84.6987 124.371 99.4113 110.701 126.018M31.161 130.789L26.8904 133.191L8.47352 153.209L30.0933 137.461M31.161 130.789L62.1227 173.421L58.9198 176.964L30.0933 137.461M31.161 130.789L30.0933 137.461M71.4646 165.754L62.1227 161.75L65.8595 178.566L77.6036 164.376L71.4646 165.754ZM66.2782 151.074C71.3313 137.69 73.6032 129.579 74.6675 120.112C70.0251 125.709 66.7956 129.841 63.6197 134.259C61.4757 137.241 59.3562 140.353 56.8428 144.134L66.2782 151.074Z\"\r\n        stroke=\"#A3670C\"\r\n        stroke-opacity=\"0.2\"\r\n        stroke-width=\"0.5\"\r\n      />\r\n      <path d=\"M75 120L75 12\" stroke=\"#F2F2F2\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Origamis;\r\n","function Billet() {\r\n  return (\r\n    <svg\r\n      width=\"270\"\r\n      height=\"172\"\r\n      viewBox=\"0 0 294 196\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"billet\"\r\n    >\r\n      <mask\r\n        id=\"path-1-outside-1_432_1698\"\r\n        maskUnits=\"userSpaceOnUse\"\r\n        x=\"-2.36154\"\r\n        y=\"-2.22474\"\r\n        width=\"298.638\"\r\n        height=\"201.058\"\r\n        fill=\"black\"\r\n      >\r\n        <rect\r\n          fill=\"white\"\r\n          x=\"-2.36154\"\r\n          y=\"-2.22474\"\r\n          width=\"298.638\"\r\n          height=\"201.058\"\r\n        />\r\n        <path d=\"M30.1692 10.6324C31.8907 4.20801 38.5123 0.400359 44.9592 2.12779L210.717 46.5424C217.164 48.2698 220.994 54.8782 219.273 61.3026L191.221 165.994C189.499 172.419 182.878 176.226 176.431 174.499L10.6733 130.084C4.22646 128.357 0.39573 121.749 2.11715 115.324L30.1692 10.6324Z\" />\r\n        <path\r\n          fill-rule=\"evenodd\"\r\n          clip-rule=\"evenodd\"\r\n          d=\"M182.423 56.4158L64.5253 24.8251C55.4997 22.4067 46.2294 27.7375 43.8194 36.7316L26.9881 99.5467C24.5781 108.541 29.9412 117.793 38.9668 120.211L156.865 151.802C165.89 154.22 175.161 148.889 177.571 139.895L194.402 77.0801C196.812 68.0859 191.449 58.8342 182.423 56.4158ZM64.837 23.6619C55.1667 21.0708 45.2342 26.7822 42.6521 36.4189L25.8208 99.2339C23.2387 108.871 28.9848 118.783 38.6551 121.374L156.553 152.965C166.223 155.556 176.156 149.845 178.738 140.208L195.569 77.3929C198.151 67.7563 192.405 57.8437 182.735 55.2526L64.837 23.6619Z\"\r\n        />\r\n        <path d=\"M116.664 84.5888C116.818 84.4245 117.064 84.3817 117.256 84.5006C118.019 84.972 115.718 87.1226 115.354 87.5661C113.669 89.6249 112.032 91.7247 110.334 93.7737C105.209 99.9596 98.2571 108.347 89.6101 108.569C84.8532 108.691 78.3948 105.834 77.3152 100.629C75.8781 93.7011 83.1872 90.0305 88.6933 92.8467C89.5051 93.2619 89.6816 94.4075 88.9391 95.0096C88.3032 95.5253 87.0578 95.5078 86.2876 95.9359C83.4733 97.5 80.9899 101.291 83.2864 104.257C86.4812 108.383 92.5048 107.391 96.5091 105.216C105.208 100.49 110.061 91.6 116.664 84.5888Z\" />\r\n        <path d=\"M122.01 79.9688C123.339 78.9849 125.198 80.5827 124.215 81.9635C123.237 83.3373 121.268 84.4177 120.032 85.619C116.465 89.0865 112.992 93.451 111.768 98.3369C111.076 101.099 111.014 107.195 114.454 107.258C115.397 107.276 113.34 109.156 110.853 107.536C108.961 106.303 109.093 100.539 109.292 98.5141C110.013 91.1891 116.3 84.1961 122.01 79.9688Z\" />\r\n        <path d=\"M100.62 95.3892C100.553 95.3867 100.487 95.3787 100.449 95.3199C100.297 95.0875 101.219 94.6692 101.39 94.5525C101.395 94.549 101.401 94.5464 101.406 94.5429C101.648 94.3732 102.214 94.8323 101.954 95.0117C101.715 95.1767 100.853 95.3975 100.62 95.3892ZM101.633 95.1569C101.36 95.2339 101.046 94.7911 101.3 94.6145C101.591 94.4119 102.039 94.114 102.24 93.9142C102.857 93.3021 103.252 92.4613 103.383 91.5962C103.455 91.1238 103.506 90.2746 102.967 90.0712C101.631 89.5676 100.278 91.2413 100.176 92.4786C100.101 93.3907 100.56 94.2496 100.913 95.0416C101.06 95.3714 100.751 95.7455 100.435 95.553C100.199 95.4087 100.002 94.9194 99.8816 94.6689C99.3468 93.557 98.9633 92.3804 99.0382 91.1046C99.1728 88.8114 101.238 87.088 103.408 87.6417C105.332 88.1327 105.917 90.2956 105.224 92.0871C104.611 93.6717 103.206 94.7144 101.633 95.1569ZM100.152 95.2174C99.9818 94.8658 100.532 94.6684 100.827 94.9294C101.024 95.1036 101.156 95.4208 101.317 95.6352C101.771 96.2419 102.327 96.7598 102.986 97.1167C104.261 97.8077 106.242 98.049 107.171 97.8499C108.101 97.6507 108.45 98.8682 107.573 99.348C106.999 99.6618 105.902 99.6641 105.304 99.4967C103.187 98.7685 101.197 97.3693 100.152 95.2174ZM105.304 99.4967C104.386 99.069 104.802 98.1487 105.785 98.0296C106.766 97.9107 108.883 97.6534 109.747 97.4702C110.501 97.3107 111.249 97.1175 111.978 96.854C112.498 96.6659 113.007 96.4402 113.49 96.16C114.949 95.3118 116.142 94.0218 116.618 92.3364C116.737 91.9155 116.973 91.1698 116.783 90.738C116.613 90.3525 116.341 89.9246 116.031 89.6871C114.544 88.5485 114.652 86.2025 116.534 85.5922C117.794 85.1833 119.337 86.1479 120.232 87.032C123.365 90.1255 121.062 95.4206 118.032 97.7211C114.875 100.118 107.643 100.359 105.304 99.4967ZM117.931 85.5985C120.183 86.4643 118.524 92.3297 116.693 90.5772C115.289 89.2339 114.376 89.0901 113.229 88.7682C111.47 88.2746 109.607 88.1378 107.929 87.3738C104.696 85.9008 102.625 82.8892 104.287 79.256C104.656 78.449 105.167 77.6632 105.769 77.0207C106.161 76.6036 106.844 77.0251 106.623 77.5771C106.462 77.9804 105.951 78.3608 105.689 78.7136C105.055 79.5649 104.563 80.5791 104.471 81.6551C104.251 84.2504 107.133 85.4987 109.22 85.492C112.244 85.4823 114.928 84.4446 117.931 85.5985ZM105.934 77.6839C105.662 77.4616 105.822 76.9739 106.188 77.0102C106.606 77.0516 107.206 77.4785 107.59 77.6643C107.97 77.8478 107.949 78.4499 107.516 78.5692C107.102 78.6831 106.26 77.9495 105.934 77.6839ZM106.336 78.0094C105.982 77.6972 106.598 77.099 107.016 77.3461C107.525 77.6468 108.466 77.9422 108.939 78.0508C109.931 78.2791 110.95 78.3281 111.958 78.1069C112.26 78.0405 112.558 77.9514 112.85 77.8424C114.517 77.2193 113.767 76.8109 112.686 75.9089C111.776 75.1505 112.016 73.6221 113.22 73.2897C114.202 73.0185 115.532 74.0469 116.114 74.8166C117.496 76.6446 116.666 79.4026 114.419 79.9836C111.956 80.6208 107.474 79.0151 106.336 78.0094ZM114.161 73.3519C115.394 73.7802 114.581 78.1549 113.805 76.9974C113.197 76.0897 111.952 75.4608 110.892 75.4664C109.266 75.4751 107.723 76.764 106.477 77.786C106.069 78.1206 105.466 77.7134 105.666 77.1906C106.125 75.9955 108.563 74.2552 109.491 73.7285C110.87 72.9458 112.689 72.8409 114.161 73.3519ZM106.348 77.069C106.643 77.2849 106.467 77.7964 106.095 77.7487C105.538 77.6773 104.378 76.5954 103.976 76.1635C102.671 74.7625 101.526 71.9051 102.355 69.9452C102.523 69.549 102.784 69.1943 103.123 68.9391C103.577 68.5976 104.138 68.459 104.684 68.5318C106.491 68.7729 107.125 70.7383 107.628 72.2756C107.655 72.3608 107.477 72.2066 107.469 72.1997C107.265 72.0298 107.054 71.8683 106.835 71.7192C106.444 71.4523 104.723 70.4293 104.243 71.0694C103.307 72.3173 103.877 74.4126 104.675 75.5083C105.136 76.1404 105.73 76.6156 106.348 77.069Z\" />\r\n        <path d=\"M107.726 72.3399C107.471 71.6283 107.216 70.9687 107.112 70.8358L105.811 71.1488C106.228 71.3411 106.7 71.9849 107.162 72.6438C107.48 73.0963 107.912 72.8586 107.726 72.3399Z\" />\r\n        <path d=\"M98.6877 96.1268C99.5003 95.8658 100.702 95.5138 101.031 95.2548L100.828 94.9207C100.389 95.1888 99.1962 95.5183 98.1304 95.8129L98.1252 95.8143C96.1777 96.1501 94.9087 96.2014 93.8959 95.7698C92.6114 95.2224 92.1918 93.5742 92.7493 92.31C93.0041 91.7323 93.3593 91.2523 93.8723 90.761C94.2078 90.4396 94.2114 89.8762 93.8008 89.6513C93.2219 89.3342 92.6783 89.251 91.8882 89.4665C91.4884 89.5756 91.1485 89.8342 90.9076 90.1679C90.4865 90.7512 90.2197 91.248 90.0881 91.7214C89.647 93.3073 90.7406 94.9393 92.1148 95.8749C93.5071 96.8229 95.3691 96.7716 97.0297 96.4971L97.5764 96.4067C97.954 96.3443 98.3238 96.2437 98.6877 96.1268Z\" />\r\n        <path d=\"M116.379 93.0842C117.51 90.3685 115.665 89.2806 110.568 88.1694L116.057 88.1138L118.293 92.4778L116.379 93.0842Z\" />\r\n        <path d=\"M112.768 77.8714C113.764 76.7518 113.233 76.4233 112.288 75.7587C114.16 75.4539 114.658 75.7738 114.417 77.3466L112.768 77.8714Z\" />\r\n        <path\r\n          fill-rule=\"evenodd\"\r\n          clip-rule=\"evenodd\"\r\n          d=\"M111.501 56.7202C111.463 56.9528 111.244 57.1108 111.011 57.073C93.2249 54.1969 76.0628 64.4512 71.5619 81.2488C66.7418 99.2374 78.2505 117.99 97.3253 123.101C97.5536 123.162 97.6893 123.396 97.6283 123.624C97.5674 123.851 97.3328 123.986 97.1045 123.925C77.6143 118.702 65.7823 99.511 70.735 81.0272C75.3595 63.7684 92.9677 53.2912 111.146 56.2308C111.379 56.2685 111.538 56.4877 111.501 56.7202ZM121.246 59.7786C121.348 59.5664 121.604 59.4777 121.817 59.5802C123.053 60.1756 124.245 60.8318 125.389 61.5436C125.59 61.6684 125.651 61.9316 125.527 62.1314C125.402 62.3313 125.138 62.3921 124.937 62.2674C123.819 61.5717 122.654 60.9304 121.446 60.3484C121.233 60.2458 121.143 59.9907 121.246 59.7786ZM141.791 95.8275C142.025 95.8629 142.186 96.0804 142.151 96.3134C141.968 97.5292 141.715 98.7459 141.39 99.9592C139.644 106.474 136.046 112.026 131.264 116.253C131.087 116.409 130.817 116.393 130.66 116.217C130.503 116.04 130.519 115.77 130.695 115.614C135.358 111.493 138.863 106.084 140.563 99.7376C140.88 98.5551 141.126 97.3697 141.304 96.1853C141.34 95.9524 141.557 95.7922 141.791 95.8275Z\"\r\n        />\r\n        <path d=\"M102.691 124.015C102.623 124.34 102.532 124.637 102.416 124.907C102.303 125.175 102.167 125.408 102.008 125.607C101.85 125.805 101.664 125.947 101.451 126.036C101.24 126.123 101.014 126.141 100.774 126.091C100.527 126.04 100.328 125.9 100.175 125.669C100.022 125.437 99.9266 125.162 99.8894 124.843C99.854 124.524 99.8718 124.193 99.9428 123.851C100.01 123.526 100.1 123.232 100.212 122.97C100.326 122.708 100.462 122.483 100.618 122.293C100.777 122.102 100.962 121.966 101.172 121.884C101.384 121.802 101.611 121.785 101.854 121.836C102.102 121.887 102.302 122.024 102.455 122.246C102.608 122.467 102.704 122.731 102.741 123.041C102.778 123.35 102.762 123.675 102.691 124.015ZM100.427 123.717C100.38 123.945 100.352 124.181 100.343 124.425C100.336 124.67 100.35 124.903 100.383 125.124C100.417 125.345 100.482 125.533 100.58 125.688C100.679 125.844 100.803 125.937 100.951 125.968C101.077 125.994 101.2 125.969 101.319 125.893C101.441 125.815 101.547 125.708 101.637 125.572C101.729 125.434 101.814 125.274 101.891 125.092C101.971 124.91 102.036 124.737 102.086 124.573C102.135 124.409 102.176 124.251 102.208 124.099C102.255 123.871 102.282 123.639 102.289 123.405C102.296 123.17 102.282 122.95 102.247 122.745C102.214 122.538 102.151 122.363 102.057 122.22C101.966 122.076 101.85 121.99 101.711 121.961C101.585 121.935 101.462 121.954 101.341 122.018C101.221 122.08 101.114 122.172 101.021 122.293C100.929 122.413 100.842 122.556 100.759 122.721C100.679 122.887 100.612 123.053 100.557 123.22C100.505 123.386 100.462 123.552 100.427 123.717Z\" />\r\n        <path d=\"M105.712 122.517C105.27 122.553 104.906 122.746 104.62 123.097C104.336 123.446 104.14 123.958 104.031 124.632C104.169 124.513 104.326 124.427 104.501 124.376C104.677 124.323 104.855 124.305 105.035 124.322C105.175 124.335 105.305 124.37 105.427 124.427C105.549 124.484 105.656 124.559 105.749 124.654C105.842 124.749 105.911 124.869 105.956 125.013C106.003 125.156 106.018 125.316 106.001 125.492C105.978 125.735 105.905 125.953 105.781 126.144C105.657 126.333 105.495 126.476 105.294 126.574C105.095 126.672 104.876 126.709 104.637 126.686C104.243 126.648 103.947 126.48 103.749 126.182C103.552 125.882 103.478 125.481 103.525 124.979C103.565 124.561 103.65 124.185 103.779 123.85C103.911 123.515 104.074 123.24 104.269 123.025C104.463 122.81 104.683 122.646 104.926 122.535C105.172 122.422 105.432 122.367 105.708 122.37L105.712 122.517ZM104.826 124.51C104.685 124.496 104.542 124.519 104.397 124.58C104.252 124.64 104.119 124.736 103.997 124.869L103.978 125.069C103.964 125.216 103.964 125.365 103.979 125.517C103.994 125.668 104.025 125.82 104.071 125.97C104.118 126.119 104.193 126.245 104.297 126.346C104.402 126.448 104.531 126.506 104.682 126.521C104.808 126.533 104.924 126.512 105.029 126.458C105.136 126.402 105.224 126.322 105.292 126.22C105.361 126.117 105.415 126.004 105.456 125.881C105.498 125.756 105.525 125.625 105.538 125.488C105.565 125.204 105.509 124.975 105.371 124.802C105.233 124.629 105.051 124.531 104.826 124.51Z\" />\r\n        <path d=\"M107.707 126.603L107.648 126.66C107.472 126.677 107.314 126.727 107.172 126.81C107.092 126.603 107.037 126.43 107.007 126.292C107.207 126.194 107.405 126.136 107.6 126.117C107.598 126.261 107.634 126.423 107.707 126.603Z\" />\r\n        <path d=\"M111.543 124.232C111.567 124.563 111.561 124.874 111.524 125.165C111.488 125.454 111.422 125.716 111.324 125.95C111.225 126.183 111.086 126.371 110.905 126.515C110.726 126.656 110.514 126.735 110.269 126.753C110.019 126.771 109.788 126.69 109.578 126.51C109.367 126.328 109.2 126.089 109.077 125.792C108.955 125.495 108.882 125.172 108.856 124.823C108.832 124.492 108.838 124.185 108.874 123.902C108.911 123.619 108.98 123.365 109.078 123.14C109.179 122.912 109.319 122.731 109.498 122.596C109.68 122.458 109.894 122.38 110.14 122.363C110.393 122.345 110.623 122.422 110.831 122.594C111.039 122.764 111.203 122.993 111.324 123.281C111.445 123.568 111.518 123.885 111.543 124.232ZM109.285 124.562C109.302 124.794 109.34 125.029 109.398 125.267C109.459 125.504 109.536 125.724 109.629 125.928C109.722 126.132 109.836 126.295 109.972 126.418C110.11 126.54 110.255 126.596 110.406 126.585C110.535 126.576 110.646 126.519 110.739 126.413C110.835 126.305 110.907 126.173 110.956 126.017C111.007 125.86 111.045 125.683 111.07 125.487C111.096 125.29 111.111 125.106 111.114 124.934C111.117 124.763 111.113 124.599 111.102 124.444C111.085 124.212 111.047 123.982 110.99 123.754C110.932 123.527 110.858 123.319 110.768 123.13C110.68 122.94 110.571 122.789 110.442 122.677C110.314 122.564 110.18 122.512 110.038 122.522C109.91 122.531 109.796 122.583 109.698 122.678C109.599 122.77 109.522 122.888 109.466 123.03C109.41 123.17 109.365 123.331 109.331 123.513C109.3 123.694 109.281 123.873 109.274 124.049C109.269 124.222 109.273 124.393 109.285 124.562Z\" />\r\n        <path d=\"M113.325 126.232C113.768 126.07 114.087 125.785 114.281 125.376C114.475 124.968 114.521 124.441 114.42 123.796C114.353 123.919 114.237 124.039 114.07 124.156C113.903 124.271 113.732 124.345 113.556 124.377C113.416 124.402 113.283 124.408 113.158 124.393C113.034 124.378 112.913 124.341 112.795 124.281C112.679 124.221 112.578 124.123 112.491 123.987C112.405 123.851 112.343 123.682 112.306 123.481C112.262 123.243 112.27 123.016 112.329 122.802C112.39 122.587 112.501 122.404 112.661 122.253C112.823 122.101 113.023 122.003 113.261 121.96C113.661 121.887 113.997 121.981 114.269 122.242C114.543 122.502 114.726 122.882 114.819 123.383C114.874 123.685 114.894 123.976 114.876 124.258C114.861 124.539 114.812 124.794 114.729 125.022C114.649 125.25 114.542 125.456 114.41 125.64C114.277 125.824 114.123 125.978 113.945 126.101C113.768 126.224 113.576 126.313 113.368 126.369L113.325 126.232ZM113.676 124.112C113.827 124.084 113.976 124.008 114.121 123.883C114.268 123.756 114.352 123.646 114.375 123.555C114.35 123.439 114.321 123.328 114.29 123.221C114.258 123.114 114.219 123.001 114.173 122.881C114.127 122.761 114.073 122.655 114.011 122.564C113.95 122.47 113.882 122.387 113.807 122.314C113.732 122.24 113.646 122.189 113.547 122.16C113.45 122.128 113.347 122.122 113.238 122.142C113.113 122.164 113.011 122.214 112.929 122.29C112.848 122.364 112.791 122.455 112.757 122.564C112.726 122.672 112.708 122.787 112.705 122.908C112.703 123.027 112.714 123.151 112.738 123.281C112.796 123.593 112.902 123.821 113.058 123.967C113.215 124.11 113.421 124.158 113.676 124.112Z\" />\r\n        <path d=\"M117.061 125.365L117.02 125.436C116.855 125.499 116.716 125.59 116.603 125.708C116.469 125.53 116.369 125.378 116.304 125.253C116.47 125.105 116.644 124.996 116.827 124.926C116.864 125.065 116.942 125.211 117.061 125.365Z\" />\r\n        <path d=\"M118.647 124.582L118.666 124.603C118.818 124.558 118.959 124.514 119.091 124.472C119.224 124.429 119.349 124.387 119.464 124.346C119.608 124.295 119.738 124.241 119.856 124.183C119.975 124.124 120.079 124.056 120.167 123.977C120.256 123.898 120.329 123.806 120.384 123.7C120.439 123.594 120.474 123.467 120.487 123.32L120.579 123.325C120.592 123.537 120.601 123.669 120.606 123.723C120.611 123.777 120.616 123.879 120.622 124.027C120.629 124.175 120.632 124.268 120.631 124.305C120.631 124.34 120.63 124.369 120.627 124.39C120.569 124.407 120.49 124.43 120.392 124.461C120.293 124.491 120.188 124.524 120.077 124.56C119.965 124.595 119.854 124.631 119.744 124.668C119.635 124.704 119.54 124.737 119.459 124.765C119.417 124.78 119.205 124.857 118.825 124.995C118.446 125.133 118.239 125.208 118.202 125.221L118.11 125.146C118.527 124.263 118.772 123.722 118.846 123.525C118.921 123.328 118.982 123.14 119.03 122.962C119.079 122.782 119.109 122.623 119.12 122.485C119.129 122.387 119.133 122.3 119.132 122.222C119.132 122.141 119.126 122.065 119.115 121.992C119.106 121.92 119.091 121.847 119.072 121.776C119.052 121.702 119.027 121.624 118.997 121.539C118.948 121.402 118.887 121.29 118.816 121.205C118.743 121.117 118.661 121.053 118.57 121.013C118.479 120.971 118.379 120.953 118.269 120.958C118.159 120.962 118.042 120.986 117.919 121.029C117.86 121.05 117.797 121.081 117.73 121.124C117.664 121.166 117.6 121.214 117.537 121.269C117.473 121.323 117.414 121.38 117.36 121.443C117.308 121.505 117.264 121.565 117.23 121.625L117.115 121.573C117.161 121.47 117.218 121.374 117.285 121.284C117.354 121.194 117.429 121.112 117.511 121.04C117.593 120.968 117.679 120.905 117.769 120.85C117.861 120.795 117.952 120.751 118.044 120.719C118.208 120.661 118.362 120.632 118.508 120.63C118.654 120.626 118.786 120.649 118.905 120.7C119.026 120.75 119.132 120.827 119.223 120.931C119.316 121.034 119.39 121.164 119.445 121.319C119.49 121.444 119.517 121.574 119.526 121.711C119.536 121.848 119.533 121.987 119.517 122.129C119.503 122.268 119.477 122.408 119.44 122.549C119.406 122.689 119.366 122.825 119.323 122.958C119.279 123.089 119.232 123.214 119.183 123.332C119.135 123.45 119.089 123.558 119.048 123.655L118.838 124.137C118.756 124.323 118.692 124.471 118.647 124.582Z\" />\r\n        <path d=\"M123.516 120.469C123.661 120.768 123.771 121.059 123.845 121.343C123.919 121.625 123.955 121.893 123.951 122.147C123.947 122.4 123.887 122.626 123.773 122.827C123.659 123.024 123.492 123.176 123.271 123.283C123.045 123.392 122.801 123.402 122.539 123.313C122.276 123.222 122.032 123.061 121.807 122.831C121.584 122.6 121.395 122.327 121.242 122.012C121.096 121.713 120.987 121.426 120.915 121.149C120.845 120.872 120.814 120.611 120.822 120.365C120.831 120.117 120.893 119.897 121.009 119.704C121.126 119.509 121.296 119.358 121.519 119.251C121.746 119.141 121.989 119.127 122.246 119.21C122.502 119.292 122.739 119.443 122.958 119.666C123.177 119.888 123.363 120.156 123.516 120.469ZM121.543 121.611C121.645 121.82 121.768 122.025 121.91 122.224C122.054 122.422 122.208 122.598 122.37 122.753C122.532 122.908 122.699 123.017 122.871 123.081C123.044 123.144 123.199 123.143 123.336 123.077C123.452 123.021 123.533 122.926 123.581 122.793C123.629 122.657 123.647 122.508 123.635 122.345C123.624 122.18 123.593 122.002 123.543 121.81C123.494 121.617 123.44 121.441 123.379 121.28C123.318 121.12 123.253 120.97 123.185 120.83C123.083 120.62 122.962 120.42 122.824 120.23C122.686 120.04 122.54 119.874 122.386 119.732C122.234 119.587 122.077 119.487 121.915 119.432C121.755 119.373 121.61 119.375 121.483 119.437C121.367 119.492 121.281 119.583 121.225 119.707C121.168 119.83 121.14 119.967 121.141 120.12C121.141 120.271 121.159 120.438 121.195 120.619C121.234 120.799 121.282 120.972 121.341 121.138C121.402 121.301 121.469 121.459 121.543 121.611Z\" />\r\n        <path d=\"M125.854 121.301L125.878 121.317C126.015 121.24 126.144 121.166 126.263 121.096C126.383 121.025 126.496 120.957 126.6 120.892C126.728 120.812 126.843 120.73 126.946 120.648C127.049 120.564 127.135 120.475 127.204 120.379C127.274 120.283 127.324 120.176 127.355 120.061C127.385 119.945 127.391 119.814 127.372 119.668L127.462 119.652C127.522 119.856 127.56 119.984 127.577 120.035C127.593 120.087 127.62 120.185 127.658 120.329C127.698 120.471 127.721 120.561 127.728 120.598C127.736 120.632 127.741 120.66 127.743 120.682C127.69 120.71 127.619 120.751 127.529 120.802C127.44 120.853 127.345 120.909 127.244 120.967C127.143 121.026 127.042 121.085 126.942 121.146C126.844 121.205 126.759 121.257 126.686 121.303C126.648 121.327 126.459 121.447 126.118 121.666C125.779 121.883 125.593 122.001 125.56 122.022L125.454 121.968C125.666 121.015 125.787 120.435 125.816 120.226C125.846 120.017 125.864 119.821 125.872 119.637C125.881 119.45 125.875 119.288 125.855 119.151C125.842 119.054 125.827 118.967 125.809 118.891C125.791 118.813 125.769 118.739 125.742 118.671C125.717 118.602 125.687 118.535 125.652 118.469C125.617 118.402 125.575 118.33 125.527 118.255C125.45 118.131 125.366 118.036 125.277 117.967C125.187 117.898 125.093 117.853 124.996 117.834C124.898 117.813 124.796 117.817 124.69 117.846C124.583 117.874 124.475 117.923 124.364 117.992C124.312 118.025 124.257 118.069 124.2 118.125C124.145 118.181 124.093 118.242 124.044 118.31C123.994 118.375 123.949 118.445 123.91 118.518C123.872 118.589 123.843 118.658 123.823 118.724L123.699 118.698C123.721 118.587 123.756 118.481 123.801 118.379C123.849 118.276 123.905 118.18 123.969 118.092C124.032 118.003 124.102 117.923 124.178 117.85C124.256 117.776 124.336 117.713 124.418 117.662C124.565 117.57 124.709 117.507 124.851 117.473C124.992 117.438 125.126 117.432 125.254 117.455C125.383 117.477 125.503 117.529 125.615 117.611C125.728 117.692 125.828 117.802 125.917 117.942C125.987 118.054 126.042 118.175 126.081 118.307C126.121 118.438 126.148 118.575 126.164 118.717C126.181 118.856 126.186 118.998 126.182 119.143C126.178 119.287 126.17 119.429 126.157 119.568C126.143 119.706 126.125 119.838 126.103 119.964C126.081 120.09 126.061 120.205 126.041 120.309L125.943 120.825C125.903 121.024 125.873 121.183 125.854 121.301Z\" />\r\n        <path d=\"M127.835 117.934L127.706 117.926C127.608 117.793 127.51 117.662 127.412 117.533C127.315 117.405 127.215 117.275 127.114 117.144C127.012 117.014 126.911 116.885 126.811 116.759C126.71 116.632 126.607 116.505 126.503 116.377L126.495 116.339C126.625 116.248 126.749 116.16 126.868 116.073C126.988 115.985 127.104 115.898 127.216 115.812C127.359 115.701 127.469 115.61 127.546 115.538C127.622 115.465 127.677 115.398 127.712 115.337C127.746 115.277 127.764 115.216 127.766 115.155C127.767 115.093 127.762 115.018 127.753 114.929C127.75 114.907 127.747 114.887 127.744 114.87C127.742 114.852 127.741 114.836 127.741 114.824L127.829 114.804C128.021 115.266 128.126 115.544 128.146 115.64C127.987 115.743 127.83 115.851 127.674 115.964C127.519 116.075 127.363 116.192 127.204 116.315C127.152 116.355 127.1 116.396 127.047 116.436C126.997 116.475 126.946 116.516 126.894 116.558C126.963 116.652 127.031 116.746 127.098 116.839C127.167 116.931 127.239 117.025 127.313 117.12C127.386 117.214 127.46 117.307 127.535 117.402C127.613 117.494 127.69 117.588 127.769 117.683C127.879 117.511 128.028 117.353 128.216 117.208C128.285 117.155 128.365 117.103 128.454 117.054C128.543 117.003 128.637 116.961 128.737 116.928C128.836 116.893 128.939 116.871 129.046 116.859C129.153 116.848 129.259 116.855 129.364 116.879C129.471 116.902 129.575 116.947 129.678 117.013C129.783 117.077 129.881 117.169 129.973 117.287C130.505 117.972 130.234 118.806 129.16 119.787L129.058 119.685C129.849 118.905 130.021 118.228 129.574 117.653C129.485 117.538 129.387 117.446 129.282 117.377C129.178 117.307 129.068 117.264 128.951 117.246C128.834 117.228 128.711 117.239 128.584 117.278C128.457 117.317 128.327 117.388 128.193 117.492C128.148 117.526 128.107 117.563 128.068 117.602C128.03 117.642 127.996 117.682 127.966 117.722C127.935 117.763 127.909 117.801 127.886 117.839C127.865 117.875 127.848 117.906 127.835 117.934Z\" />\r\n        <path d=\"M135.794 68.9442C135.981 69.3904 130.948 65.5342 129.417 64.6582C128.118 63.9148 129.095 61.8891 130.467 62.5382C132.853 63.6678 134.808 66.5989 135.794 68.9442ZM139.84 68.7923C139.658 69.9239 137.291 67.3854 138.996 63.7C139.289 63.0664 140.031 62.7537 140.673 63.0958C141.705 63.646 140.05 67.4896 139.84 68.7923ZM140.616 75.8978C139.107 75.6226 142.215 73.2105 146.16 75.185C148.666 76.4396 145.458 77.6147 143.825 76.7871C142.801 76.2679 141.732 76.1015 140.616 75.8978ZM137.552 78.1136C137.41 76.6762 139.254 80.1422 139.46 81.1944C139.959 83.7401 139.953 86.4871 139.441 89.0313C139.294 89.7566 138.635 90.278 137.879 90.1434C137.023 89.9911 137.75 80.1184 137.552 78.1136ZM134.752 77.844C135.022 77.7278 132.187 81.9168 131.991 83.7445C131.828 85.2644 129.548 84.946 129.806 83.4394C130.279 80.6716 132.268 78.9111 134.752 77.844ZM131.614 74.9895C132.526 75.972 127.069 76.7982 128.286 75.9646C128.304 75.9524 126.688 74.746 127.228 74.4492C127.611 74.2383 128.857 74.6067 127.905 74.3626C127.878 74.3556 127.795 74.3424 127.823 74.3456C128.684 74.4461 131.179 74.5205 131.614 74.9895ZM127.347 74.3939C127.827 74.2126 128.365 74.4541 128.548 74.9332C128.73 75.4123 128.489 75.9477 128.009 76.129C127.528 76.3103 126.991 76.0689 126.808 75.5898C126.626 75.1106 126.867 74.5752 127.347 74.3939ZM132.809 69.7963C132.914 69.8797 125.792 68.396 123.561 68.2173C121.872 68.0821 121.892 65.5359 123.609 65.5434C126.774 65.5574 130.435 67.9236 132.809 69.7963Z\" />\r\n        <path d=\"M129.304 60.3543C129.518 60.9176 129.12 61.5903 128.414 61.8568C127.709 62.1232 126.962 61.8825 126.748 61.3192C126.533 60.7559 126.931 60.0832 127.637 59.8167C128.342 59.5502 129.089 59.7909 129.304 60.3543Z\" />\r\n        <path d=\"M138.936 73.3451C139.312 74.3309 138.701 75.4757 137.572 75.9021C136.442 76.3284 135.222 75.8748 134.846 74.889C134.47 73.9031 135.081 72.7583 136.21 72.332C137.34 71.9056 138.56 72.3592 138.936 73.3451Z\" />\r\n        <path d=\"M140.849 92.1679C141.171 93.0129 140.746 93.9572 139.899 94.2769C139.052 94.5967 138.104 94.1709 137.782 93.3259C137.46 92.4808 137.885 91.5366 138.732 91.2169C139.579 90.8971 140.527 91.3229 140.849 92.1679Z\" />\r\n        <path d=\"M116.406 54.1555C116.586 53.5681 117.43 53.5977 117.571 54.1964L118.069 56.313C118.109 56.4793 118.217 56.6213 118.367 56.7038L120.331 57.7826C120.765 58.0209 120.744 58.6493 120.295 58.8566L118.263 59.7949C118.108 59.8666 117.99 60.0007 117.94 60.1639L117.301 62.2404C117.12 62.8278 116.276 62.7981 116.135 62.1994L115.637 60.0829C115.598 59.9166 115.49 59.7746 115.34 59.6921L113.376 58.6133C112.942 58.375 112.963 57.7466 113.412 57.5393L115.444 56.601C115.599 56.5293 115.716 56.3952 115.766 56.232L116.406 54.1555Z\" />\r\n        <path d=\"M219.273 61.3026C220.994 54.8782 227.616 51.0705 234.063 52.798L283.09 65.9347C289.537 67.6621 293.367 74.2705 291.646 80.6949L263.594 185.387C261.872 191.811 255.251 195.619 248.804 193.891L199.777 180.755C193.33 179.027 189.499 172.419 191.221 165.994L219.273 61.3026Z\" />\r\n        <path d=\"M209.271 152.325L210.304 148.47L246.491 158.167L245.458 162.022L209.271 152.325Z\" />\r\n        <path d=\"M211.337 144.615L212.37 140.761L248.557 150.457L247.524 154.312L211.337 144.615Z\" />\r\n        <path d=\"M211.337 144.615L212.37 140.761L248.557 150.457L247.524 154.312L211.337 144.615Z\" />\r\n        <path d=\"M212.577 139.99L213.61 136.135L249.796 145.831L248.763 149.686L212.577 139.99Z\" />\r\n        <path d=\"M212.577 139.99L213.61 136.135L249.796 145.831L248.763 149.686L212.577 139.99Z\" />\r\n        <path d=\"M217.121 123.028L218.154 119.173L254.341 128.869L253.308 132.724L217.121 123.028Z\" />\r\n        <path d=\"M219.807 113.005L220.84 109.15L257.027 118.846L255.994 122.701L219.807 113.005Z\" />\r\n        <path d=\"M226.211 89.1045L227.244 85.2495L263.431 94.9457L262.398 98.8006L226.211 89.1045Z\" />\r\n        <path d=\"M227.451 84.4786L228.484 80.6237L264.67 90.3198L263.637 94.1748L227.451 84.4786Z\" />\r\n        <path d=\"M228.69 79.8526L229.723 75.9977L265.91 85.6938L264.877 89.5488L228.69 79.8526Z\" />\r\n        <path d=\"M206.999 160.806L207.412 159.264L243.599 168.96L243.185 170.502L206.999 160.806Z\" />\r\n        <path d=\"M208.032 156.951L208.445 155.409L244.631 165.105L244.218 166.647L208.032 156.951Z\" />\r\n        <path d=\"M208.651 154.638L209.065 153.096L245.251 162.793L244.838 164.335L208.651 154.638Z\" />\r\n        <path d=\"M213.816 135.364L214.229 133.822L250.416 143.518L250.003 145.06L213.816 135.364Z\" />\r\n        <path d=\"M215.262 129.967L215.675 128.425L251.862 138.121L251.449 139.663L215.262 129.967Z\" />\r\n        <path d=\"M215.882 127.654L216.295 126.112L252.482 135.808L252.069 137.35L215.882 127.654Z\" />\r\n        <path d=\"M218.361 118.402L218.774 116.86L254.961 126.556L254.548 128.098L218.361 118.402Z\" />\r\n        <path d=\"M221.666 106.066L222.08 104.524L258.266 114.22L257.853 115.762L221.666 106.066Z\" />\r\n        <path d=\"M222.286 103.753L222.699 102.211L258.886 111.907L258.473 113.449L222.286 103.753Z\" />\r\n        <path d=\"M222.906 101.44L223.319 99.8984L259.506 109.595L259.092 111.136L222.906 101.44Z\" />\r\n        <path d=\"M223.526 99.1273L223.939 97.5854L260.125 107.282L259.712 108.823L223.526 99.1273Z\" />\r\n        <path d=\"M224.972 93.7304L225.385 92.1885L261.571 101.885L261.158 103.427L224.972 93.7304Z\" />\r\n        <path d=\"M229.93 75.2268L230.343 73.6848L266.529 83.3809L266.116 84.9229L229.93 75.2268Z\" />\r\n        <path d=\"M258.491 150.605L257.896 150.446C257.686 151.176 257.489 151.913 257.304 152.658L257.207 152.705C256.839 152.144 256.327 151.489 255.67 150.741C255.011 149.989 254.468 149.421 254.04 149.037L254.113 148.877C254.207 148.897 254.339 148.93 254.508 148.975L257.603 149.805L257.604 149.798C257.645 149.646 257.651 149.513 257.623 149.401C257.594 149.289 257.516 149.164 257.389 149.028L257.454 148.95L258.203 149.41C258.131 149.644 258.08 149.816 258.051 149.925L258.632 150.081C258.812 150.129 258.957 150.123 259.066 150.062C259.175 150.001 259.278 149.869 259.374 149.666L259.448 149.715C259.342 149.966 259.254 150.223 259.184 150.484C259.105 150.777 259.049 151.058 259.017 151.327L258.926 151.336C258.945 151.112 258.922 150.946 258.858 150.839C258.794 150.731 258.672 150.654 258.491 150.605ZM257.006 151.921C257.127 151.544 257.279 151.013 257.462 150.33L255.718 149.862C255.465 149.794 255.219 149.703 254.981 149.588L254.955 149.618C255.82 150.495 256.494 151.265 256.979 151.928L257.006 151.921Z\" />\r\n        <path d=\"M257.078 146.687L257.114 146.69C257.16 146.556 257.213 146.431 257.273 146.316C257.331 146.2 257.409 146.083 257.506 145.966C257.604 145.848 257.711 145.754 257.827 145.683C257.945 145.609 258.087 145.562 258.254 145.541C258.419 145.517 258.596 145.531 258.786 145.582C259.034 145.648 259.243 145.753 259.413 145.896C259.583 146.036 259.709 146.197 259.793 146.377C259.874 146.557 259.927 146.763 259.95 146.993C259.972 147.223 259.969 147.452 259.942 147.681C259.915 147.91 259.867 148.152 259.799 148.406C259.793 148.429 259.782 148.464 259.767 148.511C259.753 148.556 259.743 148.59 259.737 148.612L259.577 148.592C259.619 148.389 259.651 148.206 259.673 148.044C259.692 147.881 259.702 147.711 259.703 147.533C259.704 147.356 259.685 147.198 259.646 147.061C259.606 146.921 259.547 146.79 259.47 146.667C259.391 146.541 259.283 146.433 259.146 146.343C259.007 146.252 258.84 146.181 258.646 146.129C257.919 145.934 257.447 146.241 257.23 147.05C257.198 147.17 257.171 147.298 257.149 147.433L256.939 147.399C256.969 146.949 256.919 146.586 256.79 146.311C256.662 146.033 256.459 145.857 256.181 145.782C255.912 145.71 255.692 145.729 255.52 145.839C255.35 145.947 255.234 146.114 255.173 146.341C255.131 146.498 255.119 146.666 255.137 146.847C255.153 147.024 255.196 147.191 255.266 147.349L255.124 147.428C254.996 147.232 254.914 147.011 254.881 146.763C254.847 146.513 254.861 146.274 254.923 146.044C255.003 145.744 255.153 145.515 255.371 145.357C255.59 145.196 255.856 145.158 256.168 145.242C256.446 145.316 256.666 145.49 256.828 145.762C256.99 146.032 257.073 146.34 257.078 146.687Z\" />\r\n        <path d=\"M260.868 144.2C260.828 144.348 260.794 144.492 260.766 144.633C260.739 144.772 260.717 144.908 260.7 145.043L260.61 145.051C260.62 144.94 260.621 144.843 260.61 144.763C260.6 144.682 260.578 144.613 260.545 144.555C260.512 144.498 260.464 144.451 260.403 144.415C260.342 144.377 260.266 144.346 260.175 144.321L256.947 143.456C256.762 143.407 256.612 143.374 256.497 143.357C256.379 143.341 256.285 143.342 256.213 143.362C256.141 143.379 256.086 143.414 256.049 143.468C256.011 143.518 255.981 143.588 255.957 143.677C255.945 143.722 255.934 143.769 255.926 143.818C255.919 143.865 255.913 143.913 255.909 143.963L255.764 143.946C255.767 143.869 255.773 143.783 255.781 143.688C255.79 143.593 255.8 143.497 255.811 143.4C255.822 143.303 255.835 143.211 255.849 143.122C255.861 143.03 255.873 142.949 255.885 142.879C255.894 142.809 255.901 142.753 255.907 142.714C255.913 142.672 255.916 142.652 255.916 142.654C256.011 142.655 256.193 142.692 256.462 142.764L260.316 143.796C260.407 143.821 260.488 143.833 260.559 143.832C260.631 143.83 260.695 143.812 260.753 143.778C260.811 143.745 260.864 143.696 260.914 143.631C260.963 143.567 261.011 143.483 261.058 143.381L261.132 143.431C261.079 143.558 261.03 143.685 260.986 143.812C260.942 143.939 260.903 144.068 260.868 144.2Z\" />\r\n        <path d=\"M257.063 138.509L257.12 138.462C258.556 139.611 259.886 140.505 261.108 141.141C261.295 141.235 261.468 141.311 261.626 141.368L261.512 141.794C261.441 141.767 261.346 141.722 261.226 141.659C260.681 141.357 260.048 140.958 259.325 140.463C258.601 139.964 257.984 139.512 257.475 139.105L257.437 139.124C257.379 139.306 257.291 139.616 257.173 140.054C257.108 140.297 257.067 140.505 257.05 140.678C257.033 140.852 257.04 140.991 257.073 141.097C257.104 141.201 257.137 141.278 257.172 141.329C257.205 141.379 257.252 141.434 257.311 141.494C257.327 141.508 257.338 141.518 257.344 141.524L257.289 141.619C256.767 141.316 256.46 141.124 256.369 141.044C256.48 140.759 256.628 140.268 256.815 139.571C256.908 139.226 256.99 138.872 257.063 138.509Z\" />\r\n        <path d=\"M261.879 138.345L261.914 138.34C261.972 138.158 262.025 137.988 262.073 137.828C262.121 137.665 262.165 137.512 262.203 137.369C262.25 137.192 262.285 137.025 262.308 136.868C262.331 136.708 262.334 136.558 262.315 136.417C262.297 136.273 262.254 136.138 262.186 136.01C262.118 135.882 262.015 135.76 261.877 135.646L261.944 135.558C262.165 135.69 262.305 135.772 262.362 135.805C262.419 135.837 262.524 135.902 262.677 135.999C262.83 136.093 262.924 136.154 262.961 136.181C262.996 136.205 263.024 136.226 263.044 136.243C263.02 136.312 262.99 136.406 262.953 136.526C262.916 136.645 262.877 136.772 262.836 136.907C262.795 137.042 262.755 137.178 262.716 137.313C262.678 137.447 262.646 137.563 262.619 137.663C262.605 137.716 262.537 137.979 262.415 138.452C262.293 138.924 262.227 139.182 262.214 139.228L262.076 139.267C261.477 138.245 261.105 137.629 260.958 137.419C260.811 137.21 260.666 137.019 260.521 136.849C260.374 136.676 260.235 136.537 260.105 136.431C260.013 136.355 259.927 136.291 259.849 136.238C259.768 136.182 259.688 136.135 259.608 136.097C259.528 136.056 259.446 136.021 259.362 135.991C259.274 135.96 259.178 135.931 259.074 135.903C258.903 135.857 258.749 135.84 258.614 135.852C258.477 135.864 258.357 135.902 258.254 135.964C258.15 136.026 258.063 136.114 257.993 136.227C257.922 136.339 257.866 136.471 257.825 136.624C257.805 136.696 257.794 136.781 257.79 136.877C257.787 136.971 257.791 137.069 257.803 137.169C257.813 137.269 257.831 137.368 257.856 137.465C257.882 137.559 257.913 137.644 257.949 137.72L257.818 137.798C257.747 137.681 257.689 137.559 257.645 137.43C257.602 137.299 257.572 137.168 257.556 137.037C257.54 136.906 257.536 136.777 257.543 136.65C257.55 136.521 257.57 136.399 257.6 136.286C257.654 136.084 257.73 135.909 257.828 135.762C257.924 135.615 258.038 135.5 258.17 135.416C258.303 135.33 258.453 135.277 258.619 135.259C258.786 135.237 258.967 135.253 259.16 135.305C259.315 135.346 259.465 135.41 259.608 135.494C259.752 135.579 259.889 135.678 260.02 135.791C260.149 135.901 260.272 136.023 260.387 136.156C260.504 136.287 260.614 136.42 260.717 136.555C260.818 136.689 260.911 136.821 260.996 136.951C261.08 137.081 261.157 137.2 261.226 137.308L261.565 137.849C261.694 138.059 261.799 138.224 261.879 138.345Z\" />\r\n        <path d=\"M260.709 133.137L260.745 133.14C260.791 133.006 260.843 132.881 260.904 132.766C260.962 132.65 261.039 132.533 261.137 132.416C261.234 132.298 261.341 132.204 261.458 132.133C261.576 132.06 261.718 132.012 261.885 131.991C262.05 131.967 262.227 131.981 262.416 132.032C262.665 132.098 262.874 132.203 263.043 132.346C263.213 132.486 263.34 132.647 263.424 132.827C263.505 133.008 263.557 133.213 263.581 133.443C263.603 133.673 263.6 133.902 263.573 134.131C263.546 134.36 263.498 134.602 263.43 134.856C263.424 134.879 263.413 134.914 263.398 134.961C263.384 135.006 263.373 135.04 263.367 135.062L263.208 135.042C263.25 134.839 263.282 134.656 263.303 134.494C263.323 134.331 263.333 134.161 263.334 133.983C263.335 133.806 263.316 133.648 263.277 133.511C263.236 133.371 263.177 133.24 263.1 133.117C263.022 132.991 262.914 132.883 262.777 132.793C262.637 132.702 262.471 132.631 262.277 132.579C261.55 132.384 261.078 132.691 260.861 133.5C260.829 133.62 260.802 133.748 260.78 133.883L260.569 133.849C260.6 133.399 260.55 133.036 260.421 132.761C260.293 132.483 260.09 132.307 259.811 132.232C259.542 132.16 259.322 132.179 259.151 132.289C258.981 132.397 258.865 132.564 258.804 132.791C258.762 132.948 258.75 133.117 258.767 133.297C258.784 133.474 258.827 133.641 258.897 133.799L258.755 133.878C258.626 133.682 258.545 133.461 258.511 133.213C258.478 132.963 258.492 132.724 258.554 132.494C258.634 132.194 258.783 131.965 259.002 131.807C259.221 131.646 259.486 131.608 259.799 131.692C260.077 131.766 260.297 131.94 260.458 132.212C260.621 132.482 260.704 132.79 260.709 133.137Z\" />\r\n        <path d=\"M262.322 127.813C262.712 127.918 263.067 128.049 263.386 128.208C263.703 128.363 263.978 128.544 264.208 128.75C264.437 128.954 264.598 129.189 264.691 129.452C264.782 129.713 264.79 129.986 264.713 130.273C264.634 130.566 264.45 130.797 264.161 130.965C263.869 131.133 263.528 131.228 263.139 131.25C262.75 131.27 262.35 131.225 261.94 131.115C261.55 131.01 261.2 130.881 260.889 130.727C260.579 130.571 260.314 130.392 260.095 130.19C259.874 129.984 259.721 129.752 259.636 129.493C259.55 129.231 259.546 128.956 259.623 128.668C259.702 128.372 259.881 128.14 260.161 127.972C260.439 127.803 260.766 127.707 261.144 127.684C261.521 127.661 261.914 127.704 262.322 127.813ZM261.809 130.521C262.083 130.594 262.368 130.645 262.663 130.673C262.959 130.699 263.242 130.699 263.513 130.674C263.784 130.65 264.016 130.584 264.211 130.478C264.406 130.369 264.527 130.227 264.575 130.049C264.615 129.9 264.593 129.75 264.508 129.601C264.422 129.448 264.299 129.313 264.14 129.195C263.98 129.074 263.791 128.96 263.576 128.854C263.36 128.745 263.155 128.655 262.959 128.583C262.763 128.511 262.574 128.451 262.392 128.402C262.118 128.328 261.84 128.279 261.555 128.254C261.271 128.229 261.003 128.23 260.752 128.258C260.498 128.283 260.282 128.346 260.103 128.449C259.922 128.55 259.81 128.683 259.765 128.848C259.725 128.998 259.74 129.148 259.809 129.299C259.877 129.448 259.981 129.583 260.122 129.704C260.261 129.824 260.428 129.939 260.623 130.05C260.819 130.158 261.017 130.251 261.216 130.329C261.413 130.404 261.611 130.468 261.809 130.521Z\" />\r\n        <path d=\"M261.524 126.058C262.001 126.186 262.453 125.985 262.88 125.457C262.767 124.967 262.473 124.657 261.996 124.53C261.638 124.434 261.361 124.438 261.165 124.541C260.969 124.642 260.841 124.807 260.779 125.036C260.713 125.284 260.746 125.496 260.88 125.673C261.011 125.85 261.226 125.978 261.524 126.058ZM264.275 127.474C264.096 127.424 263.941 127.352 263.812 127.259C263.681 127.165 263.568 127.057 263.474 126.935C263.381 126.81 263.301 126.674 263.235 126.527C263.17 126.378 263.11 126.224 263.055 126.063C262.824 126.332 262.58 126.505 262.322 126.582C262.062 126.659 261.813 126.665 261.573 126.601C261.405 126.556 261.251 126.481 261.112 126.379C260.971 126.275 260.854 126.151 260.761 126.007C260.668 125.863 260.608 125.693 260.582 125.499C260.556 125.304 260.571 125.101 260.628 124.89C260.712 124.574 260.892 124.33 261.165 124.157C261.439 123.982 261.745 123.94 262.082 124.031C262.351 124.103 262.566 124.249 262.727 124.47C262.886 124.69 262.994 124.957 263.052 125.269C263.622 124.609 264.218 124.362 264.841 124.529C265.203 124.626 265.478 124.844 265.666 125.184C265.854 125.522 265.888 125.916 265.767 126.366C265.7 126.616 265.595 126.835 265.452 127.023C265.309 127.211 265.134 127.349 264.927 127.437C264.718 127.522 264.501 127.535 264.275 127.474ZM264.86 125.074C264.31 124.927 263.771 125.194 263.241 125.875C263.339 126.186 263.469 126.426 263.632 126.593C263.794 126.761 264.036 126.888 264.358 126.974C264.647 127.052 264.909 127.029 265.142 126.907C265.375 126.784 265.532 126.574 265.611 126.276C265.683 126.011 265.652 125.765 265.519 125.54C265.385 125.311 265.165 125.156 264.86 125.074Z\" />\r\n        <path d=\"M265.899 123.344L265.933 123.338C265.992 123.157 266.045 122.986 266.093 122.826C266.141 122.663 266.184 122.511 266.223 122.368C266.27 122.19 266.305 122.023 266.328 121.866C266.351 121.707 266.353 121.556 266.335 121.415C266.317 121.272 266.274 121.136 266.206 121.008C266.137 120.88 266.034 120.759 265.896 120.644L265.964 120.556C266.185 120.688 266.324 120.771 266.382 120.803C266.439 120.835 266.544 120.9 266.696 120.997C266.849 121.091 266.944 121.152 266.981 121.179C267.016 121.203 267.043 121.224 267.063 121.241C267.04 121.311 267.01 121.405 266.973 121.524C266.936 121.643 266.897 121.77 266.856 121.905C266.815 122.04 266.775 122.176 266.736 122.312C266.698 122.445 266.665 122.562 266.639 122.662C266.625 122.714 266.557 122.977 266.435 123.451C266.313 123.922 266.246 124.181 266.234 124.226L266.095 124.266C265.497 123.243 265.124 122.627 264.978 122.418C264.831 122.208 264.685 122.018 264.54 121.847C264.394 121.674 264.255 121.535 264.125 121.429C264.032 121.353 263.947 121.289 263.868 121.236C263.788 121.181 263.708 121.134 263.628 121.095C263.548 121.054 263.466 121.019 263.381 120.989C263.294 120.958 263.198 120.929 263.093 120.901C262.922 120.855 262.769 120.838 262.634 120.851C262.496 120.863 262.376 120.9 262.274 120.963C262.169 121.025 262.082 121.112 262.013 121.225C261.941 121.337 261.885 121.47 261.844 121.622C261.825 121.694 261.813 121.779 261.809 121.875C261.806 121.97 261.811 122.067 261.823 122.168C261.833 122.268 261.85 122.366 261.876 122.463C261.902 122.558 261.933 122.643 261.969 122.718L261.838 122.796C261.766 122.68 261.709 122.557 261.665 122.428C261.622 122.298 261.592 122.167 261.576 122.036C261.56 121.905 261.555 121.776 261.562 121.648C261.57 121.519 261.589 121.398 261.62 121.284C261.674 121.082 261.75 120.907 261.848 120.761C261.944 120.613 262.058 120.498 262.19 120.414C262.323 120.328 262.473 120.276 262.639 120.257C262.806 120.236 262.986 120.251 263.18 120.303C263.335 120.345 263.484 120.408 263.628 120.493C263.771 120.577 263.909 120.676 264.04 120.789C264.169 120.899 264.291 121.021 264.407 121.154C264.524 121.285 264.633 121.418 264.737 121.553C264.837 121.687 264.93 121.819 265.015 121.949C265.1 122.079 265.177 122.198 265.246 122.307L265.585 122.847C265.714 123.057 265.819 123.222 265.899 123.344Z\" />\r\n        <path d=\"M264.729 118.136L264.765 118.138C264.81 118.004 264.863 117.879 264.923 117.764C264.981 117.648 265.059 117.531 265.157 117.414C265.254 117.296 265.361 117.202 265.478 117.131C265.595 117.058 265.737 117.011 265.904 116.99C266.07 116.966 266.247 116.979 266.436 117.03C266.684 117.096 266.893 117.201 267.063 117.344C267.233 117.484 267.36 117.645 267.443 117.826C267.525 118.006 267.577 118.211 267.601 118.441C267.622 118.671 267.62 118.901 267.592 119.129C267.565 119.358 267.518 119.6 267.449 119.855C267.443 119.877 267.433 119.912 267.418 119.959C267.403 120.004 267.393 120.038 267.387 120.061L267.228 120.04C267.27 119.837 267.302 119.654 267.323 119.492C267.342 119.329 267.352 119.159 267.354 118.981C267.355 118.804 267.336 118.647 267.297 118.51C267.256 118.37 267.197 118.238 267.12 118.115C267.041 117.99 266.934 117.881 266.796 117.791C266.657 117.7 266.491 117.629 266.297 117.577C265.569 117.382 265.097 117.689 264.881 118.498C264.848 118.618 264.822 118.746 264.8 118.882L264.589 118.847C264.619 118.397 264.57 118.035 264.441 117.759C264.313 117.481 264.109 117.305 263.831 117.23C263.562 117.158 263.342 117.177 263.171 117.287C263 117.395 262.884 117.562 262.824 117.79C262.782 117.946 262.769 118.115 262.787 118.295C262.803 118.472 262.846 118.639 262.917 118.797L262.774 118.876C262.646 118.681 262.565 118.459 262.531 118.212C262.498 117.962 262.512 117.722 262.573 117.492C262.654 117.193 262.803 116.963 263.021 116.805C263.24 116.645 263.506 116.606 263.818 116.69C264.096 116.765 264.316 116.938 264.478 117.21C264.64 117.48 264.724 117.789 264.729 118.136Z\" />\r\n        <path d=\"M268.142 114.59L267.547 114.431C267.336 115.161 267.139 115.898 266.954 116.643L266.857 116.69C266.489 116.129 265.977 115.474 265.32 114.725C264.661 113.974 264.118 113.406 263.691 113.021L263.763 112.862C263.858 112.882 263.989 112.915 264.158 112.96L267.253 113.79L267.255 113.783C267.295 113.631 267.302 113.498 267.273 113.386C267.245 113.274 267.167 113.149 267.039 113.013L267.104 112.935L267.853 113.395C267.781 113.629 267.73 113.801 267.701 113.91L268.282 114.066C268.462 114.114 268.607 114.107 268.716 114.047C268.825 113.986 268.928 113.854 269.024 113.651L269.099 113.7C268.992 113.951 268.904 114.208 268.834 114.469C268.755 114.762 268.7 115.043 268.667 115.312L268.576 115.32C268.595 115.097 268.572 114.931 268.508 114.824C268.444 114.716 268.322 114.639 268.142 114.59ZM266.657 115.905C266.777 115.529 266.929 114.998 267.112 114.315L265.368 113.847C265.115 113.779 264.87 113.688 264.632 113.573L264.605 113.603C265.47 114.48 266.144 115.25 266.629 115.913L266.657 115.905Z\" />\r\n        <path d=\"M266.851 111.761L266.722 111.847C266.529 111.79 266.338 111.735 266.15 111.682C265.961 111.629 265.77 111.577 265.576 111.525C265.382 111.473 265.191 111.423 265.001 111.375C264.811 111.326 264.618 111.278 264.423 111.231L264.388 111.199C264.446 111.018 264.501 110.841 264.552 110.67C264.603 110.498 264.65 110.33 264.695 110.164C264.751 109.953 264.79 109.784 264.812 109.658C264.831 109.532 264.835 109.427 264.823 109.343C264.811 109.26 264.784 109.188 264.741 109.128C264.696 109.067 264.637 108.998 264.563 108.919C264.543 108.9 264.526 108.883 264.51 108.869C264.495 108.853 264.483 108.838 264.474 108.826L264.544 108.743C265.068 109.049 265.375 109.241 265.464 109.318C265.387 109.533 265.314 109.753 265.247 109.976C265.181 110.197 265.116 110.424 265.053 110.658C265.033 110.735 265.012 110.813 264.991 110.89C264.971 110.965 264.952 111.041 264.934 111.119C265.069 111.16 265.204 111.201 265.337 111.242C265.471 111.28 265.608 111.318 265.75 111.356C265.889 111.393 266.029 111.43 266.171 111.465C266.314 111.499 266.458 111.532 266.602 111.566C266.583 111.32 266.61 111.058 266.685 110.781C266.712 110.679 266.751 110.571 266.8 110.458C266.848 110.344 266.908 110.235 266.98 110.13C267.05 110.024 267.132 109.927 267.227 109.838C267.322 109.749 267.429 109.678 267.548 109.624C267.668 109.569 267.802 109.535 267.949 109.524C268.097 109.51 268.258 109.526 268.434 109.573C269.451 109.846 269.803 110.848 269.49 112.581L269.317 112.557C269.505 111.226 269.172 110.447 268.32 110.218C268.149 110.173 267.987 110.155 267.835 110.165C267.684 110.174 267.546 110.212 267.42 110.28C267.294 110.349 267.184 110.449 267.09 110.579C266.997 110.71 266.923 110.874 266.87 111.072C266.853 111.138 266.84 111.204 266.832 111.27C266.824 111.336 266.821 111.399 266.821 111.461C266.822 111.522 266.825 111.578 266.831 111.631C266.837 111.681 266.843 111.725 266.851 111.761Z\" />\r\n        <path d=\"M270.231 108.831C270.283 108.263 270.135 107.767 269.787 107.342C269.439 106.918 268.884 106.593 268.124 106.367C268.224 106.504 268.295 106.693 268.338 106.936C268.378 107.178 268.37 107.404 268.314 107.613C268.27 107.778 268.207 107.926 268.126 108.055C268.046 108.182 267.942 108.295 267.816 108.392C267.69 108.488 267.53 108.547 267.336 108.57C267.141 108.594 266.924 108.573 266.685 108.509C266.4 108.433 266.155 108.306 265.951 108.13C265.747 107.951 265.603 107.735 265.52 107.481C265.437 107.225 265.433 106.956 265.509 106.675C265.636 106.2 265.913 105.882 266.34 105.721C266.767 105.558 267.279 105.556 267.877 105.717C268.237 105.813 268.567 105.944 268.867 106.11C269.168 106.273 269.422 106.459 269.63 106.669C269.839 106.875 270.01 107.099 270.143 107.339C270.277 107.58 270.365 107.829 270.409 108.086C270.452 108.344 270.45 108.6 270.404 108.856L270.231 108.831ZM268.086 107.343C268.134 107.164 268.127 106.962 268.065 106.738C268.001 106.512 267.925 106.363 267.837 106.29C267.696 106.257 267.559 106.231 267.426 106.209C267.292 106.188 267.148 106.171 266.992 106.159C266.837 106.146 266.693 106.15 266.56 106.171C266.426 106.189 266.299 106.219 266.18 106.263C266.061 106.306 265.959 106.374 265.876 106.466C265.791 106.555 265.731 106.665 265.696 106.794C265.657 106.942 265.658 107.08 265.699 107.208C265.738 107.335 265.809 107.445 265.911 107.539C266.014 107.629 266.131 107.708 266.262 107.775C266.392 107.839 266.534 107.892 266.689 107.933C267.06 108.033 267.366 108.036 267.607 107.942C267.845 107.845 268.005 107.645 268.086 107.343Z\" />\r\n      </mask>\r\n      <path\r\n        d=\"M30.1692 10.6324C31.8907 4.20801 38.5123 0.400359 44.9592 2.12779L210.717 46.5424C217.164 48.2698 220.994 54.8782 219.273 61.3026L191.221 165.994C189.499 172.419 182.878 176.226 176.431 174.499L10.6733 130.084C4.22646 128.357 0.39573 121.749 2.11715 115.324L30.1692 10.6324Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        fill-rule=\"evenodd\"\r\n        clip-rule=\"evenodd\"\r\n        d=\"M182.423 56.4158L64.5253 24.8251C55.4997 22.4067 46.2294 27.7375 43.8194 36.7316L26.9881 99.5467C24.5781 108.541 29.9412 117.793 38.9668 120.211L156.865 151.802C165.89 154.22 175.161 148.889 177.571 139.895L194.402 77.0801C196.812 68.0859 191.449 58.8342 182.423 56.4158ZM64.837 23.6619C55.1667 21.0708 45.2342 26.7822 42.6521 36.4189L25.8208 99.2339C23.2387 108.871 28.9848 118.783 38.6551 121.374L156.553 152.965C166.223 155.556 176.156 149.845 178.738 140.208L195.569 77.3929C198.151 67.7563 192.405 57.8437 182.735 55.2526L64.837 23.6619Z\"\r\n        fill=\"#294069\"\r\n      />\r\n      <path\r\n        d=\"M116.664 84.5888C116.818 84.4245 117.064 84.3817 117.256 84.5006C118.019 84.972 115.718 87.1226 115.354 87.5661C113.669 89.6249 112.032 91.7247 110.334 93.7737C105.209 99.9596 98.2571 108.347 89.6101 108.569C84.8532 108.691 78.3948 105.834 77.3152 100.629C75.8781 93.7011 83.1872 90.0305 88.6933 92.8467C89.5051 93.2619 89.6816 94.4075 88.9391 95.0096C88.3032 95.5253 87.0578 95.5078 86.2876 95.9359C83.4733 97.5 80.9899 101.291 83.2864 104.257C86.4812 108.383 92.5048 107.391 96.5091 105.216C105.208 100.49 110.061 91.6 116.664 84.5888Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M122.01 79.9688C123.339 78.9849 125.198 80.5827 124.215 81.9635C123.237 83.3373 121.268 84.4177 120.032 85.619C116.465 89.0865 112.992 93.451 111.768 98.3369C111.076 101.099 111.014 107.195 114.454 107.258C115.397 107.276 113.34 109.156 110.853 107.536C108.961 106.303 109.093 100.539 109.292 98.5141C110.013 91.1891 116.3 84.1961 122.01 79.9688Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M100.62 95.3892C100.553 95.3867 100.487 95.3787 100.449 95.3199C100.297 95.0875 101.219 94.6692 101.39 94.5525C101.395 94.549 101.401 94.5464 101.406 94.5429C101.648 94.3732 102.214 94.8323 101.954 95.0117C101.715 95.1767 100.853 95.3975 100.62 95.3892ZM101.633 95.1569C101.36 95.2339 101.046 94.7911 101.3 94.6145C101.591 94.4119 102.039 94.114 102.24 93.9142C102.857 93.3021 103.252 92.4613 103.383 91.5962C103.455 91.1238 103.506 90.2746 102.967 90.0712C101.631 89.5676 100.278 91.2413 100.176 92.4786C100.101 93.3907 100.56 94.2496 100.913 95.0416C101.06 95.3714 100.751 95.7455 100.435 95.553C100.199 95.4087 100.002 94.9194 99.8816 94.6689C99.3468 93.557 98.9633 92.3804 99.0382 91.1046C99.1728 88.8114 101.238 87.088 103.408 87.6417C105.332 88.1327 105.917 90.2956 105.224 92.0871C104.611 93.6717 103.206 94.7144 101.633 95.1569ZM100.152 95.2174C99.9818 94.8658 100.532 94.6684 100.827 94.9294C101.024 95.1036 101.156 95.4208 101.317 95.6352C101.771 96.2419 102.327 96.7598 102.986 97.1167C104.261 97.8077 106.242 98.049 107.171 97.8499C108.101 97.6507 108.45 98.8682 107.573 99.348C106.999 99.6618 105.902 99.6641 105.304 99.4967C103.187 98.7685 101.197 97.3693 100.152 95.2174ZM105.304 99.4967C104.386 99.069 104.802 98.1487 105.785 98.0296C106.766 97.9107 108.883 97.6534 109.747 97.4702C110.501 97.3107 111.249 97.1175 111.978 96.854C112.498 96.6659 113.007 96.4402 113.49 96.16C114.949 95.3118 116.142 94.0218 116.618 92.3364C116.737 91.9155 116.973 91.1698 116.783 90.738C116.613 90.3525 116.341 89.9246 116.031 89.6871C114.544 88.5485 114.652 86.2025 116.534 85.5922C117.794 85.1833 119.337 86.1479 120.232 87.032C123.365 90.1255 121.062 95.4206 118.032 97.7211C114.875 100.118 107.643 100.359 105.304 99.4967ZM117.931 85.5985C120.183 86.4643 118.524 92.3297 116.693 90.5772C115.289 89.2339 114.376 89.0901 113.229 88.7682C111.47 88.2746 109.607 88.1378 107.929 87.3738C104.696 85.9008 102.625 82.8892 104.287 79.256C104.656 78.449 105.167 77.6632 105.769 77.0207C106.161 76.6036 106.844 77.0251 106.623 77.5771C106.462 77.9804 105.951 78.3608 105.689 78.7136C105.055 79.5649 104.563 80.5791 104.471 81.6551C104.251 84.2504 107.133 85.4987 109.22 85.492C112.244 85.4823 114.928 84.4446 117.931 85.5985ZM105.934 77.6839C105.662 77.4616 105.822 76.9739 106.188 77.0102C106.606 77.0516 107.206 77.4785 107.59 77.6643C107.97 77.8478 107.949 78.4499 107.516 78.5692C107.102 78.6831 106.26 77.9495 105.934 77.6839ZM106.336 78.0094C105.982 77.6972 106.598 77.099 107.016 77.3461C107.525 77.6468 108.466 77.9422 108.939 78.0508C109.931 78.2791 110.95 78.3281 111.958 78.1069C112.26 78.0405 112.558 77.9514 112.85 77.8424C114.517 77.2193 113.767 76.8109 112.686 75.9089C111.776 75.1505 112.016 73.6221 113.22 73.2897C114.202 73.0185 115.532 74.0469 116.114 74.8166C117.496 76.6446 116.666 79.4026 114.419 79.9836C111.956 80.6208 107.474 79.0151 106.336 78.0094ZM114.161 73.3519C115.394 73.7802 114.581 78.1549 113.805 76.9974C113.197 76.0897 111.952 75.4608 110.892 75.4664C109.266 75.4751 107.723 76.764 106.477 77.786C106.069 78.1206 105.466 77.7134 105.666 77.1906C106.125 75.9955 108.563 74.2552 109.491 73.7285C110.87 72.9458 112.689 72.8409 114.161 73.3519ZM106.348 77.069C106.643 77.2849 106.467 77.7964 106.095 77.7487C105.538 77.6773 104.378 76.5954 103.976 76.1635C102.671 74.7625 101.526 71.9051 102.355 69.9452C102.523 69.549 102.784 69.1943 103.123 68.9391C103.577 68.5976 104.138 68.459 104.684 68.5318C106.491 68.7729 107.125 70.7383 107.628 72.2756C107.655 72.3608 107.477 72.2066 107.469 72.1997C107.265 72.0298 107.054 71.8683 106.835 71.7192C106.444 71.4523 104.723 70.4293 104.243 71.0694C103.307 72.3173 103.877 74.4126 104.675 75.5083C105.136 76.1404 105.73 76.6156 106.348 77.069Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M107.726 72.3399C107.471 71.6283 107.216 70.9687 107.112 70.8358L105.811 71.1488C106.228 71.3411 106.7 71.9849 107.162 72.6438C107.48 73.0963 107.912 72.8586 107.726 72.3399Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M98.6877 96.1268C99.5003 95.8658 100.702 95.5138 101.031 95.2548L100.828 94.9207C100.389 95.1888 99.1962 95.5183 98.1304 95.8129L98.1252 95.8143C96.1777 96.1501 94.9087 96.2014 93.8959 95.7698C92.6114 95.2224 92.1918 93.5742 92.7493 92.31C93.0041 91.7323 93.3593 91.2523 93.8723 90.761C94.2078 90.4396 94.2114 89.8762 93.8008 89.6513C93.2219 89.3342 92.6783 89.251 91.8882 89.4665C91.4884 89.5756 91.1485 89.8342 90.9076 90.1679C90.4865 90.7512 90.2197 91.248 90.0881 91.7214C89.647 93.3073 90.7406 94.9393 92.1148 95.8749C93.5071 96.8229 95.3691 96.7716 97.0297 96.4971L97.5764 96.4067C97.954 96.3443 98.3238 96.2437 98.6877 96.1268Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M116.379 93.0842C117.51 90.3685 115.665 89.2806 110.568 88.1694L116.057 88.1138L118.293 92.4778L116.379 93.0842Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M112.768 77.8714C113.764 76.7518 113.233 76.4233 112.288 75.7587C114.16 75.4539 114.658 75.7738 114.417 77.3466L112.768 77.8714Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        fill-rule=\"evenodd\"\r\n        clip-rule=\"evenodd\"\r\n        d=\"M111.501 56.7202C111.463 56.9528 111.244 57.1108 111.011 57.073C93.2249 54.1969 76.0628 64.4512 71.5619 81.2488C66.7418 99.2374 78.2505 117.99 97.3253 123.101C97.5536 123.162 97.6893 123.396 97.6283 123.624C97.5674 123.851 97.3328 123.986 97.1045 123.925C77.6143 118.702 65.7823 99.511 70.735 81.0272C75.3595 63.7684 92.9677 53.2912 111.146 56.2308C111.379 56.2685 111.538 56.4877 111.501 56.7202ZM121.246 59.7786C121.348 59.5664 121.604 59.4777 121.817 59.5802C123.053 60.1756 124.245 60.8318 125.389 61.5436C125.59 61.6684 125.651 61.9316 125.527 62.1314C125.402 62.3313 125.138 62.3921 124.937 62.2674C123.819 61.5717 122.654 60.9304 121.446 60.3484C121.233 60.2458 121.143 59.9907 121.246 59.7786ZM141.791 95.8275C142.025 95.8629 142.186 96.0804 142.151 96.3134C141.968 97.5292 141.715 98.7459 141.39 99.9592C139.644 106.474 136.046 112.026 131.264 116.253C131.087 116.409 130.817 116.393 130.66 116.217C130.503 116.04 130.519 115.77 130.695 115.614C135.358 111.493 138.863 106.084 140.563 99.7376C140.88 98.5551 141.126 97.3697 141.304 96.1853C141.34 95.9524 141.557 95.7922 141.791 95.8275Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M102.691 124.015C102.623 124.34 102.532 124.637 102.416 124.907C102.303 125.175 102.167 125.408 102.008 125.607C101.85 125.805 101.664 125.947 101.451 126.036C101.24 126.123 101.014 126.141 100.774 126.091C100.527 126.04 100.328 125.9 100.175 125.669C100.022 125.437 99.9266 125.162 99.8894 124.843C99.854 124.524 99.8718 124.193 99.9428 123.851C100.01 123.526 100.1 123.232 100.212 122.97C100.326 122.708 100.462 122.483 100.618 122.293C100.777 122.102 100.962 121.966 101.172 121.884C101.384 121.802 101.611 121.785 101.854 121.836C102.102 121.887 102.302 122.024 102.455 122.246C102.608 122.467 102.704 122.731 102.741 123.041C102.778 123.35 102.762 123.675 102.691 124.015ZM100.427 123.717C100.38 123.945 100.352 124.181 100.343 124.425C100.336 124.67 100.35 124.903 100.383 125.124C100.417 125.345 100.482 125.533 100.58 125.688C100.679 125.844 100.803 125.937 100.951 125.968C101.077 125.994 101.2 125.969 101.319 125.893C101.441 125.815 101.547 125.708 101.637 125.572C101.729 125.434 101.814 125.274 101.891 125.092C101.971 124.91 102.036 124.737 102.086 124.573C102.135 124.409 102.176 124.251 102.208 124.099C102.255 123.871 102.282 123.639 102.289 123.405C102.296 123.17 102.282 122.95 102.247 122.745C102.214 122.538 102.151 122.363 102.057 122.22C101.966 122.076 101.85 121.99 101.711 121.961C101.585 121.935 101.462 121.954 101.341 122.018C101.221 122.08 101.114 122.172 101.021 122.293C100.929 122.413 100.842 122.556 100.759 122.721C100.679 122.887 100.612 123.053 100.557 123.22C100.505 123.386 100.462 123.552 100.427 123.717Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M105.712 122.517C105.27 122.553 104.906 122.746 104.62 123.097C104.336 123.446 104.14 123.958 104.031 124.632C104.169 124.513 104.326 124.427 104.501 124.376C104.677 124.323 104.855 124.305 105.035 124.322C105.175 124.335 105.305 124.37 105.427 124.427C105.549 124.484 105.656 124.559 105.749 124.654C105.842 124.749 105.911 124.869 105.956 125.013C106.003 125.156 106.018 125.316 106.001 125.492C105.978 125.735 105.905 125.953 105.781 126.144C105.657 126.333 105.495 126.476 105.294 126.574C105.095 126.672 104.876 126.709 104.637 126.686C104.243 126.648 103.947 126.48 103.749 126.182C103.552 125.882 103.478 125.481 103.525 124.979C103.565 124.561 103.65 124.185 103.779 123.85C103.911 123.515 104.074 123.24 104.269 123.025C104.463 122.81 104.683 122.646 104.926 122.535C105.172 122.422 105.432 122.367 105.708 122.37L105.712 122.517ZM104.826 124.51C104.685 124.496 104.542 124.519 104.397 124.58C104.252 124.64 104.119 124.736 103.997 124.869L103.978 125.069C103.964 125.216 103.964 125.365 103.979 125.517C103.994 125.668 104.025 125.82 104.071 125.97C104.118 126.119 104.193 126.245 104.297 126.346C104.402 126.448 104.531 126.506 104.682 126.521C104.808 126.533 104.924 126.512 105.029 126.458C105.136 126.402 105.224 126.322 105.292 126.22C105.361 126.117 105.415 126.004 105.456 125.881C105.498 125.756 105.525 125.625 105.538 125.488C105.565 125.204 105.509 124.975 105.371 124.802C105.233 124.629 105.051 124.531 104.826 124.51Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M107.707 126.603L107.648 126.66C107.472 126.677 107.314 126.727 107.172 126.81C107.092 126.603 107.037 126.43 107.007 126.292C107.207 126.194 107.405 126.136 107.6 126.117C107.598 126.261 107.634 126.423 107.707 126.603Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M111.543 124.232C111.567 124.563 111.561 124.874 111.524 125.165C111.488 125.454 111.422 125.716 111.324 125.95C111.225 126.183 111.086 126.371 110.905 126.515C110.726 126.656 110.514 126.735 110.269 126.753C110.019 126.771 109.788 126.69 109.578 126.51C109.367 126.328 109.2 126.089 109.077 125.792C108.955 125.495 108.882 125.172 108.856 124.823C108.832 124.492 108.838 124.185 108.874 123.902C108.911 123.619 108.98 123.365 109.078 123.14C109.179 122.912 109.319 122.731 109.498 122.596C109.68 122.458 109.894 122.38 110.14 122.363C110.393 122.345 110.623 122.422 110.831 122.594C111.039 122.764 111.203 122.993 111.324 123.281C111.445 123.568 111.518 123.885 111.543 124.232ZM109.285 124.562C109.302 124.794 109.34 125.029 109.398 125.267C109.459 125.504 109.536 125.724 109.629 125.928C109.722 126.132 109.836 126.295 109.972 126.418C110.11 126.54 110.255 126.596 110.406 126.585C110.535 126.576 110.646 126.519 110.739 126.413C110.835 126.305 110.907 126.173 110.956 126.017C111.007 125.86 111.045 125.683 111.07 125.487C111.096 125.29 111.111 125.106 111.114 124.934C111.117 124.763 111.113 124.599 111.102 124.444C111.085 124.212 111.047 123.982 110.99 123.754C110.932 123.527 110.858 123.319 110.768 123.13C110.68 122.94 110.571 122.789 110.442 122.677C110.314 122.564 110.18 122.512 110.038 122.522C109.91 122.531 109.796 122.583 109.698 122.678C109.599 122.77 109.522 122.888 109.466 123.03C109.41 123.17 109.365 123.331 109.331 123.513C109.3 123.694 109.281 123.873 109.274 124.049C109.269 124.222 109.273 124.393 109.285 124.562Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M113.325 126.232C113.768 126.07 114.087 125.785 114.281 125.376C114.475 124.968 114.521 124.441 114.42 123.796C114.353 123.919 114.237 124.039 114.07 124.156C113.903 124.271 113.732 124.345 113.556 124.377C113.416 124.402 113.283 124.408 113.158 124.393C113.034 124.378 112.913 124.341 112.795 124.281C112.679 124.221 112.578 124.123 112.491 123.987C112.405 123.851 112.343 123.682 112.306 123.481C112.262 123.243 112.27 123.016 112.329 122.802C112.39 122.587 112.501 122.404 112.661 122.253C112.823 122.101 113.023 122.003 113.261 121.96C113.661 121.887 113.997 121.981 114.269 122.242C114.543 122.502 114.726 122.882 114.819 123.383C114.874 123.685 114.894 123.976 114.876 124.258C114.861 124.539 114.812 124.794 114.729 125.022C114.649 125.25 114.542 125.456 114.41 125.64C114.277 125.824 114.123 125.978 113.945 126.101C113.768 126.224 113.576 126.313 113.368 126.369L113.325 126.232ZM113.676 124.112C113.827 124.084 113.976 124.008 114.121 123.883C114.268 123.756 114.352 123.646 114.375 123.555C114.35 123.439 114.321 123.328 114.29 123.221C114.258 123.114 114.219 123.001 114.173 122.881C114.127 122.761 114.073 122.655 114.011 122.564C113.95 122.47 113.882 122.387 113.807 122.314C113.732 122.24 113.646 122.189 113.547 122.16C113.45 122.128 113.347 122.122 113.238 122.142C113.113 122.164 113.011 122.214 112.929 122.29C112.848 122.364 112.791 122.455 112.757 122.564C112.726 122.672 112.708 122.787 112.705 122.908C112.703 123.027 112.714 123.151 112.738 123.281C112.796 123.593 112.902 123.821 113.058 123.967C113.215 124.11 113.421 124.158 113.676 124.112Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M117.061 125.365L117.02 125.436C116.855 125.499 116.716 125.59 116.603 125.708C116.469 125.53 116.369 125.378 116.304 125.253C116.47 125.105 116.644 124.996 116.827 124.926C116.864 125.065 116.942 125.211 117.061 125.365Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M118.647 124.582L118.666 124.603C118.818 124.558 118.959 124.514 119.091 124.472C119.224 124.429 119.349 124.387 119.464 124.346C119.608 124.295 119.738 124.241 119.856 124.183C119.975 124.124 120.079 124.056 120.167 123.977C120.256 123.898 120.329 123.806 120.384 123.7C120.439 123.594 120.474 123.467 120.487 123.32L120.579 123.325C120.592 123.537 120.601 123.669 120.606 123.723C120.611 123.777 120.616 123.879 120.622 124.027C120.629 124.175 120.632 124.268 120.631 124.305C120.631 124.34 120.63 124.369 120.627 124.39C120.569 124.407 120.49 124.43 120.392 124.461C120.293 124.491 120.188 124.524 120.077 124.56C119.965 124.595 119.854 124.631 119.744 124.668C119.635 124.704 119.54 124.737 119.459 124.765C119.417 124.78 119.205 124.857 118.825 124.995C118.446 125.133 118.239 125.208 118.202 125.221L118.11 125.146C118.527 124.263 118.772 123.722 118.846 123.525C118.921 123.328 118.982 123.14 119.03 122.962C119.079 122.782 119.109 122.623 119.12 122.485C119.129 122.387 119.133 122.3 119.132 122.222C119.132 122.141 119.126 122.065 119.115 121.992C119.106 121.92 119.091 121.847 119.072 121.776C119.052 121.702 119.027 121.624 118.997 121.539C118.948 121.402 118.887 121.29 118.816 121.205C118.743 121.117 118.661 121.053 118.57 121.013C118.479 120.971 118.379 120.953 118.269 120.958C118.159 120.962 118.042 120.986 117.919 121.029C117.86 121.05 117.797 121.081 117.73 121.124C117.664 121.166 117.6 121.214 117.537 121.269C117.473 121.323 117.414 121.38 117.36 121.443C117.308 121.505 117.264 121.565 117.23 121.625L117.115 121.573C117.161 121.47 117.218 121.374 117.285 121.284C117.354 121.194 117.429 121.112 117.511 121.04C117.593 120.968 117.679 120.905 117.769 120.85C117.861 120.795 117.952 120.751 118.044 120.719C118.208 120.661 118.362 120.632 118.508 120.63C118.654 120.626 118.786 120.649 118.905 120.7C119.026 120.75 119.132 120.827 119.223 120.931C119.316 121.034 119.39 121.164 119.445 121.319C119.49 121.444 119.517 121.574 119.526 121.711C119.536 121.848 119.533 121.987 119.517 122.129C119.503 122.268 119.477 122.408 119.44 122.549C119.406 122.689 119.366 122.825 119.323 122.958C119.279 123.089 119.232 123.214 119.183 123.332C119.135 123.45 119.089 123.558 119.048 123.655L118.838 124.137C118.756 124.323 118.692 124.471 118.647 124.582Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M123.516 120.469C123.661 120.768 123.771 121.059 123.845 121.343C123.919 121.625 123.955 121.893 123.951 122.147C123.947 122.4 123.887 122.626 123.773 122.827C123.659 123.024 123.492 123.176 123.271 123.283C123.045 123.392 122.801 123.402 122.539 123.313C122.276 123.222 122.032 123.061 121.807 122.831C121.584 122.6 121.395 122.327 121.242 122.012C121.096 121.713 120.987 121.426 120.915 121.149C120.845 120.872 120.814 120.611 120.822 120.365C120.831 120.117 120.893 119.897 121.009 119.704C121.126 119.509 121.296 119.358 121.519 119.251C121.746 119.141 121.989 119.127 122.246 119.21C122.502 119.292 122.739 119.443 122.958 119.666C123.177 119.888 123.363 120.156 123.516 120.469ZM121.543 121.611C121.645 121.82 121.768 122.025 121.91 122.224C122.054 122.422 122.208 122.598 122.37 122.753C122.532 122.908 122.699 123.017 122.871 123.081C123.044 123.144 123.199 123.143 123.336 123.077C123.452 123.021 123.533 122.926 123.581 122.793C123.629 122.657 123.647 122.508 123.635 122.345C123.624 122.18 123.593 122.002 123.543 121.81C123.494 121.617 123.44 121.441 123.379 121.28C123.318 121.12 123.253 120.97 123.185 120.83C123.083 120.62 122.962 120.42 122.824 120.23C122.686 120.04 122.54 119.874 122.386 119.732C122.234 119.587 122.077 119.487 121.915 119.432C121.755 119.373 121.61 119.375 121.483 119.437C121.367 119.492 121.281 119.583 121.225 119.707C121.168 119.83 121.14 119.967 121.141 120.12C121.141 120.271 121.159 120.438 121.195 120.619C121.234 120.799 121.282 120.972 121.341 121.138C121.402 121.301 121.469 121.459 121.543 121.611Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M125.854 121.301L125.878 121.317C126.015 121.24 126.144 121.166 126.263 121.096C126.383 121.025 126.496 120.957 126.6 120.892C126.728 120.812 126.843 120.73 126.946 120.648C127.049 120.564 127.135 120.475 127.204 120.379C127.274 120.283 127.324 120.176 127.355 120.061C127.385 119.945 127.391 119.814 127.372 119.668L127.462 119.652C127.522 119.856 127.56 119.984 127.577 120.035C127.593 120.087 127.62 120.185 127.658 120.329C127.698 120.471 127.721 120.561 127.728 120.598C127.736 120.632 127.741 120.66 127.743 120.682C127.69 120.71 127.619 120.751 127.529 120.802C127.44 120.853 127.345 120.909 127.244 120.967C127.143 121.026 127.042 121.085 126.942 121.146C126.844 121.205 126.759 121.257 126.686 121.303C126.648 121.327 126.459 121.447 126.118 121.666C125.779 121.883 125.593 122.001 125.56 122.022L125.454 121.968C125.666 121.015 125.787 120.435 125.816 120.226C125.846 120.017 125.864 119.821 125.872 119.637C125.881 119.45 125.875 119.288 125.855 119.151C125.842 119.054 125.827 118.967 125.809 118.891C125.791 118.813 125.769 118.739 125.742 118.671C125.717 118.602 125.687 118.535 125.652 118.469C125.617 118.402 125.575 118.33 125.527 118.255C125.45 118.131 125.366 118.036 125.277 117.967C125.187 117.898 125.093 117.853 124.996 117.834C124.898 117.813 124.796 117.817 124.69 117.846C124.583 117.874 124.475 117.923 124.364 117.992C124.312 118.025 124.257 118.069 124.2 118.125C124.145 118.181 124.093 118.242 124.044 118.31C123.994 118.375 123.949 118.445 123.91 118.518C123.872 118.589 123.843 118.658 123.823 118.724L123.699 118.698C123.721 118.587 123.756 118.481 123.801 118.379C123.849 118.276 123.905 118.18 123.969 118.092C124.032 118.003 124.102 117.923 124.178 117.85C124.256 117.776 124.336 117.713 124.418 117.662C124.565 117.57 124.709 117.507 124.851 117.473C124.992 117.438 125.126 117.432 125.254 117.455C125.383 117.477 125.503 117.529 125.615 117.611C125.728 117.692 125.828 117.802 125.917 117.942C125.987 118.054 126.042 118.175 126.081 118.307C126.121 118.438 126.148 118.575 126.164 118.717C126.181 118.856 126.186 118.998 126.182 119.143C126.178 119.287 126.17 119.429 126.157 119.568C126.143 119.706 126.125 119.838 126.103 119.964C126.081 120.09 126.061 120.205 126.041 120.309L125.943 120.825C125.903 121.024 125.873 121.183 125.854 121.301Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M127.835 117.934L127.706 117.926C127.608 117.793 127.51 117.662 127.412 117.533C127.315 117.405 127.215 117.275 127.114 117.144C127.012 117.014 126.911 116.885 126.811 116.759C126.71 116.632 126.607 116.505 126.503 116.377L126.495 116.339C126.625 116.248 126.749 116.16 126.868 116.073C126.988 115.985 127.104 115.898 127.216 115.812C127.359 115.701 127.469 115.61 127.546 115.538C127.622 115.465 127.677 115.398 127.712 115.337C127.746 115.277 127.764 115.216 127.766 115.155C127.767 115.093 127.762 115.018 127.753 114.929C127.75 114.907 127.747 114.887 127.744 114.87C127.742 114.852 127.741 114.836 127.741 114.824L127.829 114.804C128.021 115.266 128.126 115.544 128.146 115.64C127.987 115.743 127.83 115.851 127.674 115.964C127.519 116.075 127.363 116.192 127.204 116.315C127.152 116.355 127.1 116.396 127.047 116.436C126.997 116.475 126.946 116.516 126.894 116.558C126.963 116.652 127.031 116.746 127.098 116.839C127.167 116.931 127.239 117.025 127.313 117.12C127.386 117.214 127.46 117.307 127.535 117.402C127.613 117.494 127.69 117.588 127.769 117.683C127.879 117.511 128.028 117.353 128.216 117.208C128.285 117.155 128.365 117.103 128.454 117.054C128.543 117.003 128.637 116.961 128.737 116.928C128.836 116.893 128.939 116.871 129.046 116.859C129.153 116.848 129.259 116.855 129.364 116.879C129.471 116.902 129.575 116.947 129.678 117.013C129.783 117.077 129.881 117.169 129.973 117.287C130.505 117.972 130.234 118.806 129.16 119.787L129.058 119.685C129.849 118.905 130.021 118.228 129.574 117.653C129.485 117.538 129.387 117.446 129.282 117.377C129.178 117.307 129.068 117.264 128.951 117.246C128.834 117.228 128.711 117.239 128.584 117.278C128.457 117.317 128.327 117.388 128.193 117.492C128.148 117.526 128.107 117.563 128.068 117.602C128.03 117.642 127.996 117.682 127.966 117.722C127.935 117.763 127.909 117.801 127.886 117.839C127.865 117.875 127.848 117.906 127.835 117.934Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M135.794 68.9442C135.981 69.3904 130.948 65.5342 129.417 64.6582C128.118 63.9148 129.095 61.8891 130.467 62.5382C132.853 63.6678 134.808 66.5989 135.794 68.9442ZM139.84 68.7923C139.658 69.9239 137.291 67.3854 138.996 63.7C139.289 63.0664 140.031 62.7537 140.673 63.0958C141.705 63.646 140.05 67.4896 139.84 68.7923ZM140.616 75.8978C139.107 75.6226 142.215 73.2105 146.16 75.185C148.666 76.4396 145.458 77.6147 143.825 76.7871C142.801 76.2679 141.732 76.1015 140.616 75.8978ZM137.552 78.1136C137.41 76.6762 139.254 80.1422 139.46 81.1944C139.959 83.7401 139.953 86.4871 139.441 89.0313C139.294 89.7566 138.635 90.278 137.879 90.1434C137.023 89.9911 137.75 80.1184 137.552 78.1136ZM134.752 77.844C135.022 77.7278 132.187 81.9168 131.991 83.7445C131.828 85.2644 129.548 84.946 129.806 83.4394C130.279 80.6716 132.268 78.9111 134.752 77.844ZM131.614 74.9895C132.526 75.972 127.069 76.7982 128.286 75.9646C128.304 75.9524 126.688 74.746 127.228 74.4492C127.611 74.2383 128.857 74.6067 127.905 74.3626C127.878 74.3556 127.795 74.3424 127.823 74.3456C128.684 74.4461 131.179 74.5205 131.614 74.9895ZM127.347 74.3939C127.827 74.2126 128.365 74.4541 128.548 74.9332C128.73 75.4123 128.489 75.9477 128.009 76.129C127.528 76.3103 126.991 76.0689 126.808 75.5898C126.626 75.1106 126.867 74.5752 127.347 74.3939ZM132.809 69.7963C132.914 69.8797 125.792 68.396 123.561 68.2173C121.872 68.0821 121.892 65.5359 123.609 65.5434C126.774 65.5574 130.435 67.9236 132.809 69.7963Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M129.304 60.3543C129.518 60.9176 129.12 61.5903 128.414 61.8568C127.709 62.1232 126.962 61.8825 126.748 61.3192C126.533 60.7559 126.931 60.0832 127.637 59.8167C128.342 59.5502 129.089 59.7909 129.304 60.3543Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M138.936 73.3451C139.312 74.3309 138.701 75.4757 137.572 75.9021C136.442 76.3284 135.222 75.8748 134.846 74.889C134.47 73.9031 135.081 72.7583 136.21 72.332C137.34 71.9056 138.56 72.3592 138.936 73.3451Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M140.849 92.1679C141.171 93.0129 140.746 93.9572 139.899 94.2769C139.052 94.5967 138.104 94.1709 137.782 93.3259C137.46 92.4808 137.885 91.5366 138.732 91.2169C139.579 90.8971 140.527 91.3229 140.849 92.1679Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M116.406 54.1555C116.586 53.5681 117.43 53.5977 117.571 54.1964L118.069 56.313C118.109 56.4793 118.217 56.6213 118.367 56.7038L120.331 57.7826C120.765 58.0209 120.744 58.6493 120.295 58.8566L118.263 59.7949C118.108 59.8666 117.99 60.0007 117.94 60.1639L117.301 62.2404C117.12 62.8278 116.276 62.7981 116.135 62.1994L115.637 60.0829C115.598 59.9166 115.49 59.7746 115.34 59.6921L113.376 58.6133C112.942 58.375 112.963 57.7466 113.412 57.5393L115.444 56.601C115.599 56.5293 115.716 56.3952 115.766 56.232L116.406 54.1555Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M219.273 61.3026C220.994 54.8782 227.616 51.0705 234.063 52.798L283.09 65.9347C289.537 67.6621 293.367 74.2705 291.646 80.6949L263.594 185.387C261.872 191.811 255.251 195.619 248.804 193.891L199.777 180.755C193.33 179.027 189.499 172.419 191.221 165.994L219.273 61.3026Z\"\r\n        fill=\"#294069\"\r\n      />\r\n      <path\r\n        d=\"M209.271 152.325L210.304 148.47L246.491 158.167L245.458 162.022L209.271 152.325Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M211.337 144.615L212.37 140.761L248.557 150.457L247.524 154.312L211.337 144.615Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M211.337 144.615L212.37 140.761L248.557 150.457L247.524 154.312L211.337 144.615Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M212.577 139.99L213.61 136.135L249.796 145.831L248.763 149.686L212.577 139.99Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M212.577 139.99L213.61 136.135L249.796 145.831L248.763 149.686L212.577 139.99Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M217.121 123.028L218.154 119.173L254.341 128.869L253.308 132.724L217.121 123.028Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M219.807 113.005L220.84 109.15L257.027 118.846L255.994 122.701L219.807 113.005Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M226.211 89.1045L227.244 85.2495L263.431 94.9457L262.398 98.8006L226.211 89.1045Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M227.451 84.4786L228.484 80.6237L264.67 90.3198L263.637 94.1748L227.451 84.4786Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M228.69 79.8526L229.723 75.9977L265.91 85.6938L264.877 89.5488L228.69 79.8526Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M206.999 160.806L207.412 159.264L243.599 168.96L243.185 170.502L206.999 160.806Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M208.032 156.951L208.445 155.409L244.631 165.105L244.218 166.647L208.032 156.951Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M208.651 154.638L209.065 153.096L245.251 162.793L244.838 164.335L208.651 154.638Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M213.816 135.364L214.229 133.822L250.416 143.518L250.003 145.06L213.816 135.364Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M215.262 129.967L215.675 128.425L251.862 138.121L251.449 139.663L215.262 129.967Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M215.882 127.654L216.295 126.112L252.482 135.808L252.069 137.35L215.882 127.654Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M218.361 118.402L218.774 116.86L254.961 126.556L254.548 128.098L218.361 118.402Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M221.666 106.066L222.08 104.524L258.266 114.22L257.853 115.762L221.666 106.066Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M222.286 103.753L222.699 102.211L258.886 111.907L258.473 113.449L222.286 103.753Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M222.906 101.44L223.319 99.8984L259.506 109.595L259.092 111.136L222.906 101.44Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M223.526 99.1273L223.939 97.5854L260.125 107.282L259.712 108.823L223.526 99.1273Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M224.972 93.7304L225.385 92.1885L261.571 101.885L261.158 103.427L224.972 93.7304Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M229.93 75.2268L230.343 73.6848L266.529 83.3809L266.116 84.9229L229.93 75.2268Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M258.491 150.605L257.896 150.446C257.686 151.176 257.489 151.913 257.304 152.658L257.207 152.705C256.839 152.144 256.327 151.489 255.67 150.741C255.011 149.989 254.468 149.421 254.04 149.037L254.113 148.877C254.207 148.897 254.339 148.93 254.508 148.975L257.603 149.805L257.604 149.798C257.645 149.646 257.651 149.513 257.623 149.401C257.594 149.289 257.516 149.164 257.389 149.028L257.454 148.95L258.203 149.41C258.131 149.644 258.08 149.816 258.051 149.925L258.632 150.081C258.812 150.129 258.957 150.123 259.066 150.062C259.175 150.001 259.278 149.869 259.374 149.666L259.448 149.715C259.342 149.966 259.254 150.223 259.184 150.484C259.105 150.777 259.049 151.058 259.017 151.327L258.926 151.336C258.945 151.112 258.922 150.946 258.858 150.839C258.794 150.731 258.672 150.654 258.491 150.605ZM257.006 151.921C257.127 151.544 257.279 151.013 257.462 150.33L255.718 149.862C255.465 149.794 255.219 149.703 254.981 149.588L254.955 149.618C255.82 150.495 256.494 151.265 256.979 151.928L257.006 151.921Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M257.078 146.687L257.114 146.69C257.16 146.556 257.213 146.431 257.273 146.316C257.331 146.2 257.409 146.083 257.506 145.966C257.604 145.848 257.711 145.754 257.827 145.683C257.945 145.609 258.087 145.562 258.254 145.541C258.419 145.517 258.596 145.531 258.786 145.582C259.034 145.648 259.243 145.753 259.413 145.896C259.583 146.036 259.709 146.197 259.793 146.377C259.874 146.557 259.927 146.763 259.95 146.993C259.972 147.223 259.969 147.452 259.942 147.681C259.915 147.91 259.867 148.152 259.799 148.406C259.793 148.429 259.782 148.464 259.767 148.511C259.753 148.556 259.743 148.59 259.737 148.612L259.577 148.592C259.619 148.389 259.651 148.206 259.673 148.044C259.692 147.881 259.702 147.711 259.703 147.533C259.704 147.356 259.685 147.198 259.646 147.061C259.606 146.921 259.547 146.79 259.47 146.667C259.391 146.541 259.283 146.433 259.146 146.343C259.007 146.252 258.84 146.181 258.646 146.129C257.919 145.934 257.447 146.241 257.23 147.05C257.198 147.17 257.171 147.298 257.149 147.433L256.939 147.399C256.969 146.949 256.919 146.586 256.79 146.311C256.662 146.033 256.459 145.857 256.181 145.782C255.912 145.71 255.692 145.729 255.52 145.839C255.35 145.947 255.234 146.114 255.173 146.341C255.131 146.498 255.119 146.666 255.137 146.847C255.153 147.024 255.196 147.191 255.266 147.349L255.124 147.428C254.996 147.232 254.914 147.011 254.881 146.763C254.847 146.513 254.861 146.274 254.923 146.044C255.003 145.744 255.153 145.515 255.371 145.357C255.59 145.196 255.856 145.158 256.168 145.242C256.446 145.316 256.666 145.49 256.828 145.762C256.99 146.032 257.073 146.34 257.078 146.687Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M260.868 144.2C260.828 144.348 260.794 144.492 260.766 144.633C260.739 144.772 260.717 144.908 260.7 145.043L260.61 145.051C260.62 144.94 260.621 144.843 260.61 144.763C260.6 144.682 260.578 144.613 260.545 144.555C260.512 144.498 260.464 144.451 260.403 144.415C260.342 144.377 260.266 144.346 260.175 144.321L256.947 143.456C256.762 143.407 256.612 143.374 256.497 143.357C256.379 143.341 256.285 143.342 256.213 143.362C256.141 143.379 256.086 143.414 256.049 143.468C256.011 143.518 255.981 143.588 255.957 143.677C255.945 143.722 255.934 143.769 255.926 143.818C255.919 143.865 255.913 143.913 255.909 143.963L255.764 143.946C255.767 143.869 255.773 143.783 255.781 143.688C255.79 143.593 255.8 143.497 255.811 143.4C255.822 143.303 255.835 143.211 255.849 143.122C255.861 143.03 255.873 142.949 255.885 142.879C255.894 142.809 255.901 142.753 255.907 142.714C255.913 142.672 255.916 142.652 255.916 142.654C256.011 142.655 256.193 142.692 256.462 142.764L260.316 143.796C260.407 143.821 260.488 143.833 260.559 143.832C260.631 143.83 260.695 143.812 260.753 143.778C260.811 143.745 260.864 143.696 260.914 143.631C260.963 143.567 261.011 143.483 261.058 143.381L261.132 143.431C261.079 143.558 261.03 143.685 260.986 143.812C260.942 143.939 260.903 144.068 260.868 144.2Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M257.063 138.509L257.12 138.462C258.556 139.611 259.886 140.505 261.108 141.141C261.295 141.235 261.468 141.311 261.626 141.368L261.512 141.794C261.441 141.767 261.346 141.722 261.226 141.659C260.681 141.357 260.048 140.958 259.325 140.463C258.601 139.964 257.984 139.512 257.475 139.105L257.437 139.124C257.379 139.306 257.291 139.616 257.173 140.054C257.108 140.297 257.067 140.505 257.05 140.678C257.033 140.852 257.04 140.991 257.073 141.097C257.104 141.201 257.137 141.278 257.172 141.329C257.205 141.379 257.252 141.434 257.311 141.494C257.327 141.508 257.338 141.518 257.344 141.524L257.289 141.619C256.767 141.316 256.46 141.124 256.369 141.044C256.48 140.759 256.628 140.268 256.815 139.571C256.908 139.226 256.99 138.872 257.063 138.509Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M261.879 138.345L261.914 138.34C261.972 138.158 262.025 137.988 262.073 137.828C262.121 137.665 262.165 137.512 262.203 137.369C262.25 137.192 262.285 137.025 262.308 136.868C262.331 136.708 262.334 136.558 262.315 136.417C262.297 136.273 262.254 136.138 262.186 136.01C262.118 135.882 262.015 135.76 261.877 135.646L261.944 135.558C262.165 135.69 262.305 135.772 262.362 135.805C262.419 135.837 262.524 135.902 262.677 135.999C262.83 136.093 262.924 136.154 262.961 136.181C262.996 136.205 263.024 136.226 263.044 136.243C263.02 136.312 262.99 136.406 262.953 136.526C262.916 136.645 262.877 136.772 262.836 136.907C262.795 137.042 262.755 137.178 262.716 137.313C262.678 137.447 262.646 137.563 262.619 137.663C262.605 137.716 262.537 137.979 262.415 138.452C262.293 138.924 262.227 139.182 262.214 139.228L262.076 139.267C261.477 138.245 261.105 137.629 260.958 137.419C260.811 137.21 260.666 137.019 260.521 136.849C260.374 136.676 260.235 136.537 260.105 136.431C260.013 136.355 259.927 136.291 259.849 136.238C259.768 136.182 259.688 136.135 259.608 136.097C259.528 136.056 259.446 136.021 259.362 135.991C259.274 135.96 259.178 135.931 259.074 135.903C258.903 135.857 258.749 135.84 258.614 135.852C258.477 135.864 258.357 135.902 258.254 135.964C258.15 136.026 258.063 136.114 257.993 136.227C257.922 136.339 257.866 136.471 257.825 136.624C257.805 136.696 257.794 136.781 257.79 136.877C257.787 136.971 257.791 137.069 257.803 137.169C257.813 137.269 257.831 137.368 257.856 137.465C257.882 137.559 257.913 137.644 257.949 137.72L257.818 137.798C257.747 137.681 257.689 137.559 257.645 137.43C257.602 137.299 257.572 137.168 257.556 137.037C257.54 136.906 257.536 136.777 257.543 136.65C257.55 136.521 257.57 136.399 257.6 136.286C257.654 136.084 257.73 135.909 257.828 135.762C257.924 135.615 258.038 135.5 258.17 135.416C258.303 135.33 258.453 135.277 258.619 135.259C258.786 135.237 258.967 135.253 259.16 135.305C259.315 135.346 259.465 135.41 259.608 135.494C259.752 135.579 259.889 135.678 260.02 135.791C260.149 135.901 260.272 136.023 260.387 136.156C260.504 136.287 260.614 136.42 260.717 136.555C260.818 136.689 260.911 136.821 260.996 136.951C261.08 137.081 261.157 137.2 261.226 137.308L261.565 137.849C261.694 138.059 261.799 138.224 261.879 138.345Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M260.709 133.137L260.745 133.14C260.791 133.006 260.843 132.881 260.904 132.766C260.962 132.65 261.039 132.533 261.137 132.416C261.234 132.298 261.341 132.204 261.458 132.133C261.576 132.06 261.718 132.012 261.885 131.991C262.05 131.967 262.227 131.981 262.416 132.032C262.665 132.098 262.874 132.203 263.043 132.346C263.213 132.486 263.34 132.647 263.424 132.827C263.505 133.008 263.557 133.213 263.581 133.443C263.603 133.673 263.6 133.902 263.573 134.131C263.546 134.36 263.498 134.602 263.43 134.856C263.424 134.879 263.413 134.914 263.398 134.961C263.384 135.006 263.373 135.04 263.367 135.062L263.208 135.042C263.25 134.839 263.282 134.656 263.303 134.494C263.323 134.331 263.333 134.161 263.334 133.983C263.335 133.806 263.316 133.648 263.277 133.511C263.236 133.371 263.177 133.24 263.1 133.117C263.022 132.991 262.914 132.883 262.777 132.793C262.637 132.702 262.471 132.631 262.277 132.579C261.55 132.384 261.078 132.691 260.861 133.5C260.829 133.62 260.802 133.748 260.78 133.883L260.569 133.849C260.6 133.399 260.55 133.036 260.421 132.761C260.293 132.483 260.09 132.307 259.811 132.232C259.542 132.16 259.322 132.179 259.151 132.289C258.981 132.397 258.865 132.564 258.804 132.791C258.762 132.948 258.75 133.117 258.767 133.297C258.784 133.474 258.827 133.641 258.897 133.799L258.755 133.878C258.626 133.682 258.545 133.461 258.511 133.213C258.478 132.963 258.492 132.724 258.554 132.494C258.634 132.194 258.783 131.965 259.002 131.807C259.221 131.646 259.486 131.608 259.799 131.692C260.077 131.766 260.297 131.94 260.458 132.212C260.621 132.482 260.704 132.79 260.709 133.137Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M262.322 127.813C262.712 127.918 263.067 128.049 263.386 128.208C263.703 128.363 263.978 128.544 264.208 128.75C264.437 128.954 264.598 129.189 264.691 129.452C264.782 129.713 264.79 129.986 264.713 130.273C264.634 130.566 264.45 130.797 264.161 130.965C263.869 131.133 263.528 131.228 263.139 131.25C262.75 131.27 262.35 131.225 261.94 131.115C261.55 131.01 261.2 130.881 260.889 130.727C260.579 130.571 260.314 130.392 260.095 130.19C259.874 129.984 259.721 129.752 259.636 129.493C259.55 129.231 259.546 128.956 259.623 128.668C259.702 128.372 259.881 128.14 260.161 127.972C260.439 127.803 260.766 127.707 261.144 127.684C261.521 127.661 261.914 127.704 262.322 127.813ZM261.809 130.521C262.083 130.594 262.368 130.645 262.663 130.673C262.959 130.699 263.242 130.699 263.513 130.674C263.784 130.65 264.016 130.584 264.211 130.478C264.406 130.369 264.527 130.227 264.575 130.049C264.615 129.9 264.593 129.75 264.508 129.601C264.422 129.448 264.299 129.313 264.14 129.195C263.98 129.074 263.791 128.96 263.576 128.854C263.36 128.745 263.155 128.655 262.959 128.583C262.763 128.511 262.574 128.451 262.392 128.402C262.118 128.328 261.84 128.279 261.555 128.254C261.271 128.229 261.003 128.23 260.752 128.258C260.498 128.283 260.282 128.346 260.103 128.449C259.922 128.55 259.81 128.683 259.765 128.848C259.725 128.998 259.74 129.148 259.809 129.299C259.877 129.448 259.981 129.583 260.122 129.704C260.261 129.824 260.428 129.939 260.623 130.05C260.819 130.158 261.017 130.251 261.216 130.329C261.413 130.404 261.611 130.468 261.809 130.521Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M261.524 126.058C262.001 126.186 262.453 125.985 262.88 125.457C262.767 124.967 262.473 124.657 261.996 124.53C261.638 124.434 261.361 124.438 261.165 124.541C260.969 124.642 260.841 124.807 260.779 125.036C260.713 125.284 260.746 125.496 260.88 125.673C261.011 125.85 261.226 125.978 261.524 126.058ZM264.275 127.474C264.096 127.424 263.941 127.352 263.812 127.259C263.681 127.165 263.568 127.057 263.474 126.935C263.381 126.81 263.301 126.674 263.235 126.527C263.17 126.378 263.11 126.224 263.055 126.063C262.824 126.332 262.58 126.505 262.322 126.582C262.062 126.659 261.813 126.665 261.573 126.601C261.405 126.556 261.251 126.481 261.112 126.379C260.971 126.275 260.854 126.151 260.761 126.007C260.668 125.863 260.608 125.693 260.582 125.499C260.556 125.304 260.571 125.101 260.628 124.89C260.712 124.574 260.892 124.33 261.165 124.157C261.439 123.982 261.745 123.94 262.082 124.031C262.351 124.103 262.566 124.249 262.727 124.47C262.886 124.69 262.994 124.957 263.052 125.269C263.622 124.609 264.218 124.362 264.841 124.529C265.203 124.626 265.478 124.844 265.666 125.184C265.854 125.522 265.888 125.916 265.767 126.366C265.7 126.616 265.595 126.835 265.452 127.023C265.309 127.211 265.134 127.349 264.927 127.437C264.718 127.522 264.501 127.535 264.275 127.474ZM264.86 125.074C264.31 124.927 263.771 125.194 263.241 125.875C263.339 126.186 263.469 126.426 263.632 126.593C263.794 126.761 264.036 126.888 264.358 126.974C264.647 127.052 264.909 127.029 265.142 126.907C265.375 126.784 265.532 126.574 265.611 126.276C265.683 126.011 265.652 125.765 265.519 125.54C265.385 125.311 265.165 125.156 264.86 125.074Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M265.899 123.344L265.933 123.338C265.992 123.157 266.045 122.986 266.093 122.826C266.141 122.663 266.184 122.511 266.223 122.368C266.27 122.19 266.305 122.023 266.328 121.866C266.351 121.707 266.353 121.556 266.335 121.415C266.317 121.272 266.274 121.136 266.206 121.008C266.137 120.88 266.034 120.759 265.896 120.644L265.964 120.556C266.185 120.688 266.324 120.771 266.382 120.803C266.439 120.835 266.544 120.9 266.696 120.997C266.849 121.091 266.944 121.152 266.981 121.179C267.016 121.203 267.043 121.224 267.063 121.241C267.04 121.311 267.01 121.405 266.973 121.524C266.936 121.643 266.897 121.77 266.856 121.905C266.815 122.04 266.775 122.176 266.736 122.312C266.698 122.445 266.665 122.562 266.639 122.662C266.625 122.714 266.557 122.977 266.435 123.451C266.313 123.922 266.246 124.181 266.234 124.226L266.095 124.266C265.497 123.243 265.124 122.627 264.978 122.418C264.831 122.208 264.685 122.018 264.54 121.847C264.394 121.674 264.255 121.535 264.125 121.429C264.032 121.353 263.947 121.289 263.868 121.236C263.788 121.181 263.708 121.134 263.628 121.095C263.548 121.054 263.466 121.019 263.381 120.989C263.294 120.958 263.198 120.929 263.093 120.901C262.922 120.855 262.769 120.838 262.634 120.851C262.496 120.863 262.376 120.9 262.274 120.963C262.169 121.025 262.082 121.112 262.013 121.225C261.941 121.337 261.885 121.47 261.844 121.622C261.825 121.694 261.813 121.779 261.809 121.875C261.806 121.97 261.811 122.067 261.823 122.168C261.833 122.268 261.85 122.366 261.876 122.463C261.902 122.558 261.933 122.643 261.969 122.718L261.838 122.796C261.766 122.68 261.709 122.557 261.665 122.428C261.622 122.298 261.592 122.167 261.576 122.036C261.56 121.905 261.555 121.776 261.562 121.648C261.57 121.519 261.589 121.398 261.62 121.284C261.674 121.082 261.75 120.907 261.848 120.761C261.944 120.613 262.058 120.498 262.19 120.414C262.323 120.328 262.473 120.276 262.639 120.257C262.806 120.236 262.986 120.251 263.18 120.303C263.335 120.345 263.484 120.408 263.628 120.493C263.771 120.577 263.909 120.676 264.04 120.789C264.169 120.899 264.291 121.021 264.407 121.154C264.524 121.285 264.633 121.418 264.737 121.553C264.837 121.687 264.93 121.819 265.015 121.949C265.1 122.079 265.177 122.198 265.246 122.307L265.585 122.847C265.714 123.057 265.819 123.222 265.899 123.344Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M264.729 118.136L264.765 118.138C264.81 118.004 264.863 117.879 264.923 117.764C264.981 117.648 265.059 117.531 265.157 117.414C265.254 117.296 265.361 117.202 265.478 117.131C265.595 117.058 265.737 117.011 265.904 116.99C266.07 116.966 266.247 116.979 266.436 117.03C266.684 117.096 266.893 117.201 267.063 117.344C267.233 117.484 267.36 117.645 267.443 117.826C267.525 118.006 267.577 118.211 267.601 118.441C267.622 118.671 267.62 118.901 267.592 119.129C267.565 119.358 267.518 119.6 267.449 119.855C267.443 119.877 267.433 119.912 267.418 119.959C267.403 120.004 267.393 120.038 267.387 120.061L267.228 120.04C267.27 119.837 267.302 119.654 267.323 119.492C267.342 119.329 267.352 119.159 267.354 118.981C267.355 118.804 267.336 118.647 267.297 118.51C267.256 118.37 267.197 118.238 267.12 118.115C267.041 117.99 266.934 117.881 266.796 117.791C266.657 117.7 266.491 117.629 266.297 117.577C265.569 117.382 265.097 117.689 264.881 118.498C264.848 118.618 264.822 118.746 264.8 118.882L264.589 118.847C264.619 118.397 264.57 118.035 264.441 117.759C264.313 117.481 264.109 117.305 263.831 117.23C263.562 117.158 263.342 117.177 263.171 117.287C263 117.395 262.884 117.562 262.824 117.79C262.782 117.946 262.769 118.115 262.787 118.295C262.803 118.472 262.846 118.639 262.917 118.797L262.774 118.876C262.646 118.681 262.565 118.459 262.531 118.212C262.498 117.962 262.512 117.722 262.573 117.492C262.654 117.193 262.803 116.963 263.021 116.805C263.24 116.645 263.506 116.606 263.818 116.69C264.096 116.765 264.316 116.938 264.478 117.21C264.64 117.48 264.724 117.789 264.729 118.136Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M268.142 114.59L267.547 114.431C267.336 115.161 267.139 115.898 266.954 116.643L266.857 116.69C266.489 116.129 265.977 115.474 265.32 114.725C264.661 113.974 264.118 113.406 263.691 113.021L263.763 112.862C263.858 112.882 263.989 112.915 264.158 112.96L267.253 113.79L267.255 113.783C267.295 113.631 267.302 113.498 267.273 113.386C267.245 113.274 267.167 113.149 267.039 113.013L267.104 112.935L267.853 113.395C267.781 113.629 267.73 113.801 267.701 113.91L268.282 114.066C268.462 114.114 268.607 114.107 268.716 114.047C268.825 113.986 268.928 113.854 269.024 113.651L269.099 113.7C268.992 113.951 268.904 114.208 268.834 114.469C268.755 114.762 268.7 115.043 268.667 115.312L268.576 115.32C268.595 115.097 268.572 114.931 268.508 114.824C268.444 114.716 268.322 114.639 268.142 114.59ZM266.657 115.905C266.777 115.529 266.929 114.998 267.112 114.315L265.368 113.847C265.115 113.779 264.87 113.688 264.632 113.573L264.605 113.603C265.47 114.48 266.144 115.25 266.629 115.913L266.657 115.905Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M266.851 111.761L266.722 111.847C266.529 111.79 266.338 111.735 266.15 111.682C265.961 111.629 265.77 111.577 265.576 111.525C265.382 111.473 265.191 111.423 265.001 111.375C264.811 111.326 264.618 111.278 264.423 111.231L264.388 111.199C264.446 111.018 264.501 110.841 264.552 110.67C264.603 110.498 264.65 110.33 264.695 110.164C264.751 109.953 264.79 109.784 264.812 109.658C264.831 109.532 264.835 109.427 264.823 109.343C264.811 109.26 264.784 109.188 264.741 109.128C264.696 109.067 264.637 108.998 264.563 108.919C264.543 108.9 264.526 108.883 264.51 108.869C264.495 108.853 264.483 108.838 264.474 108.826L264.544 108.743C265.068 109.049 265.375 109.241 265.464 109.318C265.387 109.533 265.314 109.753 265.247 109.976C265.181 110.197 265.116 110.424 265.053 110.658C265.033 110.735 265.012 110.813 264.991 110.89C264.971 110.965 264.952 111.041 264.934 111.119C265.069 111.16 265.204 111.201 265.337 111.242C265.471 111.28 265.608 111.318 265.75 111.356C265.889 111.393 266.029 111.43 266.171 111.465C266.314 111.499 266.458 111.532 266.602 111.566C266.583 111.32 266.61 111.058 266.685 110.781C266.712 110.679 266.751 110.571 266.8 110.458C266.848 110.344 266.908 110.235 266.98 110.13C267.05 110.024 267.132 109.927 267.227 109.838C267.322 109.749 267.429 109.678 267.548 109.624C267.668 109.569 267.802 109.535 267.949 109.524C268.097 109.51 268.258 109.526 268.434 109.573C269.451 109.846 269.803 110.848 269.49 112.581L269.317 112.557C269.505 111.226 269.172 110.447 268.32 110.218C268.149 110.173 267.987 110.155 267.835 110.165C267.684 110.174 267.546 110.212 267.42 110.28C267.294 110.349 267.184 110.449 267.09 110.579C266.997 110.71 266.923 110.874 266.87 111.072C266.853 111.138 266.84 111.204 266.832 111.27C266.824 111.336 266.821 111.399 266.821 111.461C266.822 111.522 266.825 111.578 266.831 111.631C266.837 111.681 266.843 111.725 266.851 111.761Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M270.231 108.831C270.283 108.263 270.135 107.767 269.787 107.342C269.439 106.918 268.884 106.593 268.124 106.367C268.224 106.504 268.295 106.693 268.338 106.936C268.378 107.178 268.37 107.404 268.314 107.613C268.27 107.778 268.207 107.926 268.126 108.055C268.046 108.182 267.942 108.295 267.816 108.392C267.69 108.488 267.53 108.547 267.336 108.57C267.141 108.594 266.924 108.573 266.685 108.509C266.4 108.433 266.155 108.306 265.951 108.13C265.747 107.951 265.603 107.735 265.52 107.481C265.437 107.225 265.433 106.956 265.509 106.675C265.636 106.2 265.913 105.882 266.34 105.721C266.767 105.558 267.279 105.556 267.877 105.717C268.237 105.813 268.567 105.944 268.867 106.11C269.168 106.273 269.422 106.459 269.63 106.669C269.839 106.875 270.01 107.099 270.143 107.339C270.277 107.58 270.365 107.829 270.409 108.086C270.452 108.344 270.45 108.6 270.404 108.856L270.231 108.831ZM268.086 107.343C268.134 107.164 268.127 106.962 268.065 106.738C268.001 106.512 267.925 106.363 267.837 106.29C267.696 106.257 267.559 106.231 267.426 106.209C267.292 106.188 267.148 106.171 266.992 106.159C266.837 106.146 266.693 106.15 266.56 106.171C266.426 106.189 266.299 106.219 266.18 106.263C266.061 106.306 265.959 106.374 265.876 106.466C265.791 106.555 265.731 106.665 265.696 106.794C265.657 106.942 265.658 107.08 265.699 107.208C265.738 107.335 265.809 107.445 265.911 107.539C266.014 107.629 266.131 107.708 266.262 107.775C266.392 107.839 266.534 107.892 266.689 107.933C267.06 108.033 267.366 108.036 267.607 107.942C267.845 107.845 268.005 107.645 268.086 107.343Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M211.337 144.615L210.854 144.486L210.725 144.969L211.208 145.098L211.337 144.615ZM212.37 140.761L212.499 140.278L212.016 140.148L211.887 140.631L212.37 140.761ZM248.557 150.457L249.04 150.586L249.169 150.103L248.686 149.974L248.557 150.457ZM247.524 154.312L247.394 154.795L247.877 154.924L248.007 154.441L247.524 154.312ZM212.577 139.99L212.094 139.86L211.964 140.343L212.447 140.473L212.577 139.99ZM213.61 136.135L213.739 135.652L213.256 135.522L213.127 136.005L213.61 136.135ZM249.796 145.831L250.279 145.96L250.408 145.477L249.925 145.348L249.796 145.831ZM248.763 149.686L248.634 150.169L249.117 150.298L249.246 149.815L248.763 149.686ZM218.79 61.1732L190.738 165.865L191.704 166.124L219.756 61.432L218.79 61.1732ZM100.7 95.4455C100.65 95.4623 100.619 95.4603 100.631 95.4602C100.635 95.4602 100.65 95.4607 100.674 95.4639C100.723 95.4706 100.78 95.4845 100.824 95.5006C100.834 95.5042 100.842 95.5075 100.848 95.5102C100.854 95.513 100.857 95.5145 100.856 95.5143C100.856 95.5142 100.855 95.5135 100.852 95.512C100.85 95.5105 100.847 95.508 100.842 95.5044C100.833 95.4979 100.816 95.4839 100.797 95.4612C100.76 95.418 100.685 95.3047 100.704 95.1405C100.723 94.9808 100.817 94.8945 100.848 94.8705L101.467 95.6558C101.552 95.5887 101.673 95.4591 101.697 95.2569C101.721 95.0502 101.629 94.8953 101.558 94.8122C101.435 94.6678 101.26 94.5955 101.168 94.5616C101.052 94.5191 100.924 94.4888 100.808 94.473C100.718 94.4607 100.544 94.4434 100.384 94.4968L100.7 95.4455ZM211.82 144.745L212.853 140.89L211.887 140.631L210.854 144.486L211.82 144.745ZM212.241 141.244L248.427 150.94L248.686 149.974L212.499 140.278L212.241 141.244ZM248.074 150.327L247.041 154.182L248.007 154.441L249.04 150.586L248.074 150.327ZM247.653 153.829L211.467 144.133L211.208 145.098L247.394 154.795L247.653 153.829ZM213.06 140.119L214.092 136.264L213.127 136.005L212.094 139.86L213.06 140.119ZM213.48 136.618L249.667 146.314L249.925 145.348L213.739 135.652L213.48 136.618ZM249.313 145.701L248.28 149.556L249.246 149.815L250.279 145.96L249.313 145.701ZM248.893 149.203L212.706 139.507L212.447 140.473L248.634 150.169L248.893 149.203ZM117.256 84.5006L117.782 83.6499L117.256 84.5006ZM115.354 87.5661L114.581 86.9325L115.354 87.5661ZM110.334 93.7737L111.104 94.4117L110.334 93.7737ZM89.6101 108.569L89.6358 109.568L89.6101 108.569ZM77.3152 100.629L76.336 100.832L77.3152 100.629ZM88.6933 92.8467L88.2379 93.737L88.6933 92.8467ZM88.9391 95.0096L89.5689 95.7864L88.9391 95.0096ZM86.2876 95.9359L85.8018 95.0618L86.2876 95.9359ZM83.2864 104.257L84.0772 103.645L83.2864 104.257ZM96.5091 105.216L96.9864 106.094L96.5091 105.216ZM116.664 84.5888L117.392 85.2744L116.664 84.5888ZM124.215 81.9635L123.4 81.3835L124.215 81.9635ZM120.032 85.619L119.335 84.9019L120.032 85.619ZM111.768 98.3369L110.798 98.0938L111.768 98.3369ZM114.454 107.258L114.436 108.258L114.454 107.258ZM110.853 107.536L111.399 106.698L110.853 107.536ZM109.292 98.5141L110.287 98.612L109.292 98.5141ZM122.01 79.9688L122.605 80.7725L122.01 79.9688ZM100.449 95.3199L99.6104 95.8654L100.449 95.3199ZM101.39 94.5525L100.826 93.7267L101.39 94.5525ZM101.406 94.5429L100.833 93.7232L101.406 94.5429ZM101.954 95.0117L102.523 95.8345L101.954 95.0117ZM100.62 95.3892L100.584 96.3885L100.62 95.3892ZM101.3 94.6145L101.87 95.4356L101.3 94.6145ZM102.24 93.9142L102.944 94.6241L102.24 93.9142ZM103.383 91.5962L102.395 91.4464L103.383 91.5962ZM102.967 90.0712L102.614 91.0069L102.967 90.0712ZM100.176 92.4786L99.1797 92.3962L100.176 92.4786ZM100.913 95.0416L99.9993 95.4486L100.913 95.0416ZM100.435 95.553L100.956 94.6993L100.435 95.553ZM99.8816 94.6689L100.783 94.2355L99.8816 94.6689ZM99.0382 91.1046L100.036 91.1632L99.0382 91.1046ZM103.408 87.6417L103.16 88.6106L103.408 87.6417ZM105.224 92.0871L106.156 92.448L105.224 92.0871ZM101.633 95.1569L101.904 96.1195L101.633 95.1569ZM100.827 94.9294L100.165 95.6783L100.827 94.9294ZM101.317 95.6352L100.516 96.2344L100.516 96.2344L101.317 95.6352ZM102.986 97.1167L103.462 96.2374L102.986 97.1167ZM107.573 99.348L108.053 100.225L107.573 99.348ZM100.152 95.2174L99.2528 95.654L100.152 95.2174ZM105.785 98.0296L105.665 97.0368L105.785 98.0296ZM109.747 97.4702L109.955 98.4485L109.747 97.4702ZM111.978 96.854L111.638 95.9136L111.978 96.854ZM113.49 96.16L113.992 97.0246L113.49 96.16ZM116.618 92.3364L115.656 92.0646L116.618 92.3364ZM116.783 90.738L115.868 91.141L116.783 90.738ZM116.031 89.6871L115.423 90.481L116.031 89.6871ZM116.534 85.5922L116.842 86.5434L116.842 86.5434L116.534 85.5922ZM120.232 87.032L119.53 87.7435L120.232 87.032ZM118.032 97.7211L118.636 98.5176L118.032 97.7211ZM116.693 90.5772L117.384 89.8547L116.693 90.5772ZM113.229 88.7682L113.499 87.8054L113.229 88.7682ZM107.929 87.3738L108.344 86.4637L107.929 87.3738ZM104.287 79.256L103.377 78.8402L104.287 79.256ZM105.769 77.0207L105.04 76.3365L105.769 77.0207ZM106.623 77.5771L107.552 77.9488L106.623 77.5771ZM105.689 78.7136L104.886 78.1165L105.689 78.7136ZM104.471 81.6551L105.468 81.7396L104.471 81.6551ZM109.22 85.492L109.223 86.492L109.22 85.492ZM117.931 85.5985L117.572 86.532L117.931 85.5985ZM106.188 77.0102L106.09 78.0053L106.188 77.0102ZM107.59 77.6643L107.155 78.5646L107.59 77.6643ZM107.516 78.5692L107.25 77.6051L107.516 78.5692ZM105.934 77.6839L105.303 78.459L105.934 77.6839ZM107.016 77.3461L106.507 78.207L107.016 77.3461ZM108.939 78.0508L108.714 79.0253L108.939 78.0508ZM111.958 78.1069L111.744 77.1301L111.958 78.1069ZM112.85 77.8424L112.5 76.9057L112.85 77.8424ZM112.686 75.9089L113.326 75.1409L112.686 75.9089ZM113.22 73.2897L112.954 72.3258L113.22 73.2897ZM116.114 74.8166L115.316 75.4196L116.114 74.8166ZM114.419 79.9836L114.169 79.0155L114.419 79.9836ZM106.336 78.0094L106.998 77.2599L106.336 78.0094ZM113.805 76.9974L112.974 77.5541L113.805 76.9974ZM110.892 75.4664L110.887 74.4664L110.892 75.4664ZM106.477 77.786L107.111 78.5593L106.477 77.786ZM105.666 77.1906L106.6 77.5486L105.666 77.1906ZM109.491 73.7285L108.997 72.8588L109.491 73.7285ZM114.161 73.3519L114.489 72.4072L114.161 73.3519ZM106.095 77.7487L106.222 76.7568L106.095 77.7487ZM103.976 76.1635L104.707 75.4819L103.976 76.1635ZM102.355 69.9452L101.434 69.5557L102.355 69.9452ZM103.123 68.9391L103.725 69.7381L103.123 68.9391ZM104.684 68.5318L104.816 67.5406L104.684 68.5318ZM107.628 72.2756L108.578 71.965L107.628 72.2756ZM107.469 72.1997L106.829 72.968L107.469 72.1997ZM106.835 71.7192L107.398 70.8929L106.835 71.7192ZM104.243 71.0694L105.043 71.6694L104.243 71.0694ZM104.675 75.5083L105.484 74.9195L104.675 75.5083ZM106.348 77.069L105.757 77.8755L106.348 77.069ZM107.112 70.8358L107.898 70.2175L107.501 69.7135L106.878 69.8636L107.112 70.8358ZM107.726 72.3399L108.667 72.002L107.726 72.3399ZM107.162 72.6438L107.981 72.0693L107.981 72.0693L107.162 72.6438ZM105.811 71.1488L105.577 70.1766L102.778 70.8503L105.392 72.0568L105.811 71.1488ZM101.031 95.2548L101.65 96.0401L102.344 95.4928L101.886 94.7365L101.031 95.2548ZM98.6877 96.1268L98.3819 95.1747L98.6877 96.1268ZM98.1252 95.8143L98.2951 96.7998L98.3444 96.7913L98.3925 96.778L98.1252 95.8143ZM98.1304 95.8129L97.864 94.849L97.8632 94.8493L98.1304 95.8129ZM100.828 94.9207L101.684 94.4025L101.164 93.5451L100.308 94.0668L100.828 94.9207ZM93.8959 95.7698L94.288 94.8499L93.8959 95.7698ZM92.7493 92.31L93.6642 92.7136L92.7493 92.31ZM93.8723 90.761L93.1806 90.0388L93.8723 90.761ZM93.8008 89.6513L94.2812 88.7742L93.8008 89.6513ZM91.8882 89.4665L91.625 88.5018L91.8882 89.4665ZM90.9076 90.1679L90.0968 89.5826L90.9076 90.1679ZM90.0881 91.7214L89.1246 91.4535L90.0881 91.7214ZM97.0297 96.4971L96.8666 95.5105L96.8666 95.5105L97.0297 96.4971ZM97.5764 96.4067L97.7395 97.3933L97.7395 97.3933L97.5764 96.4067ZM92.1148 95.8749L91.552 96.7015L92.1148 95.8749ZM110.568 88.1694L110.558 87.1694L110.355 89.1464L110.568 88.1694ZM116.379 93.0842L115.456 92.6999L114.628 94.6878L116.681 94.0375L116.379 93.0842ZM116.057 88.1138L116.947 87.6577L116.665 87.1076L116.047 87.1138L116.057 88.1138ZM118.293 92.4778L118.595 93.4311L119.723 93.074L119.183 92.0217L118.293 92.4778ZM112.288 75.7587L112.127 74.7717L109.706 75.166L111.713 76.5767L112.288 75.7587ZM112.768 77.8714L112.021 77.2068L109.599 79.9295L113.071 78.8243L112.768 77.8714ZM114.417 77.3466L114.72 78.2995L115.311 78.1114L115.405 77.4983L114.417 77.3466ZM111.011 57.073L110.851 58.0602L111.011 57.073ZM71.5619 81.2488L70.5959 80.99L71.5619 81.2488ZM97.3253 123.101L97.5841 122.135L97.3253 123.101ZM97.1045 123.925L97.3633 122.959L97.1045 123.925ZM70.735 81.0272L69.7691 80.7684L70.735 81.0272ZM111.146 56.2308L110.986 57.218L111.146 56.2308ZM121.817 59.5802L122.251 58.6794L121.817 59.5802ZM121.246 59.7786L120.346 59.3433L120.346 59.3434L121.246 59.7786ZM125.389 61.5436L124.861 62.3928L124.861 62.3928L125.389 61.5436ZM124.937 62.2674L125.465 61.4182L124.937 62.2674ZM121.446 60.3484L121.88 59.4475L121.446 60.3484ZM142.151 96.3134L141.162 96.1645L141.162 96.1645L142.151 96.3134ZM141.791 95.8275L141.642 96.8163L141.642 96.8163L141.791 95.8275ZM141.39 99.9592L140.424 99.7003L141.39 99.9592ZM131.264 116.253L130.601 115.504L131.264 116.253ZM130.695 115.614L131.358 116.364L131.358 116.364L130.695 115.614ZM140.563 99.7376L141.529 99.9964L140.563 99.7376ZM141.304 96.1853L142.293 96.3341L141.304 96.1853ZM102.691 124.015L103.67 124.218L102.691 124.015ZM102.416 124.907L101.497 124.513L101.495 124.517L102.416 124.907ZM102.008 125.607L102.788 126.234L102.79 126.231L102.008 125.607ZM101.451 126.036L101.832 126.96L101.834 126.96L101.451 126.036ZM100.774 126.091L100.57 127.071L100.774 126.091ZM100.175 125.669L99.3393 126.219L99.3421 126.224L100.175 125.669ZM99.8894 124.843L98.8955 124.953L98.8961 124.959L99.8894 124.843ZM99.9428 123.851L98.9637 123.648L99.9428 123.851ZM100.212 122.97L99.2954 122.571L99.2927 122.577L100.212 122.97ZM100.618 122.293L99.8498 121.653L99.8478 121.656L100.618 122.293ZM101.172 121.884L101.533 122.817L101.535 122.816L101.172 121.884ZM101.854 121.836L102.057 120.857L101.854 121.836ZM102.455 122.246L101.631 122.813L101.634 122.818L102.455 122.246ZM100.427 123.717L101.407 123.92L100.427 123.717ZM100.343 124.425L99.3438 124.389L99.3435 124.397L100.343 124.425ZM100.58 125.688L99.7322 126.219L99.7363 126.226L100.58 125.688ZM100.951 125.968L100.748 126.947L100.951 125.968ZM101.319 125.893L101.858 126.735L101.858 126.735L101.319 125.893ZM101.637 125.572L100.806 125.015L100.802 125.02L101.637 125.572ZM101.891 125.092L100.975 124.692L100.971 124.7L101.891 125.092ZM102.208 124.099L101.229 123.896L102.208 124.099ZM102.247 122.745L101.259 122.9L101.261 122.912L102.247 122.745ZM102.057 122.22L101.213 122.757L101.218 122.764L101.222 122.77L102.057 122.22ZM101.711 121.961L101.915 120.982L101.711 121.961ZM101.341 122.018L101.8 122.906L101.81 122.901L101.341 122.018ZM101.021 122.293L101.812 122.905L101.816 122.901L101.021 122.293ZM100.759 122.721L99.8636 122.276L99.8592 122.286L100.759 122.721ZM100.557 123.22L99.6067 122.91L99.6037 122.919L100.557 123.22ZM105.712 122.517L105.792 123.514L106.735 123.438L106.711 122.492L105.712 122.517ZM104.62 123.097L103.845 122.465L103.844 122.466L104.62 123.097ZM104.031 124.632L103.044 124.472L102.606 127.179L104.683 125.39L104.031 124.632ZM104.501 124.376L104.783 125.336L104.793 125.333L104.501 124.376ZM105.035 124.322L104.939 125.317L105.035 124.322ZM105.956 125.013L105.001 125.31L105.003 125.318L105.006 125.326L105.956 125.013ZM106.001 125.492L105.006 125.397L106.001 125.492ZM105.781 126.144L106.618 126.691L106.62 126.688L105.781 126.144ZM105.294 126.574L104.857 125.674L104.852 125.676L105.294 126.574ZM104.637 126.686L104.541 127.682L104.637 126.686ZM103.749 126.182L102.912 126.731L102.916 126.737L103.749 126.182ZM103.525 124.979L104.521 125.073L103.525 124.979ZM103.779 123.85L102.849 123.484L102.847 123.489L103.779 123.85ZM104.926 122.535L105.341 123.445L105.344 123.444L104.926 122.535ZM105.708 122.37L106.708 122.345L106.683 121.381L105.719 121.371L105.708 122.37ZM104.826 124.51L104.922 123.514L104.826 124.51ZM103.997 124.869L103.261 124.191L103.033 124.439L103.001 124.774L103.997 124.869ZM103.978 125.069L102.982 124.974L103.978 125.069ZM104.071 125.97L103.115 126.264L103.117 126.269L104.071 125.97ZM104.297 126.346L103.597 127.061L103.603 127.067L104.297 126.346ZM104.682 126.521L104.778 125.525L104.682 126.521ZM105.029 126.458L105.488 127.346L105.492 127.344L105.029 126.458ZM105.456 125.881L106.405 126.198L106.406 126.195L105.456 125.881ZM105.538 125.488L106.533 125.583L105.538 125.488ZM107.707 126.603L108.402 127.322L108.889 126.851L108.633 126.225L107.707 126.603ZM107.648 126.66L107.742 127.656L108.091 127.623L108.343 127.379L107.648 126.66ZM107.172 126.81L106.241 127.173L106.668 128.267L107.679 127.672L107.172 126.81ZM107.007 126.292L106.568 125.393L105.868 125.735L106.029 126.498L107.007 126.292ZM107.6 126.117L108.6 126.132L108.616 125.018L107.507 125.122L107.6 126.117ZM111.543 124.232L112.54 124.159L111.543 124.232ZM111.524 125.165L110.532 125.038L110.531 125.043L111.524 125.165ZM111.324 125.95L112.245 126.339L112.246 126.336L111.324 125.95ZM110.905 126.515L111.524 127.3L111.526 127.298L110.905 126.515ZM110.269 126.753L110.34 127.75L110.269 126.753ZM109.578 126.51L108.924 127.267L108.928 127.27L109.578 126.51ZM109.077 125.792L108.151 126.17L108.153 126.176L109.077 125.792ZM108.856 124.823L109.854 124.75L108.856 124.823ZM108.874 123.902L107.882 123.77L107.881 123.776L108.874 123.902ZM109.078 123.14L108.164 122.735L108.162 122.738L109.078 123.14ZM109.498 122.596L110.101 123.394L110.103 123.392L109.498 122.596ZM110.14 122.363L110.069 121.365L110.14 122.363ZM110.831 122.594L110.193 123.364L110.198 123.368L110.831 122.594ZM109.285 124.562L108.288 124.635L109.285 124.562ZM109.398 125.267L108.427 125.506L108.429 125.513L109.398 125.267ZM109.972 126.418L109.302 127.16L109.308 127.165L109.972 126.418ZM110.406 126.585L110.335 125.588L110.406 126.585ZM110.739 126.413L111.488 127.075L111.488 127.075L110.739 126.413ZM110.956 126.017L110.005 125.71L110.003 125.716L110.956 126.017ZM111.07 125.487L110.079 125.353L110.078 125.362L111.07 125.487ZM111.102 124.444L112.099 124.371L111.102 124.444ZM110.768 123.13L109.861 123.551L109.866 123.561L110.768 123.13ZM110.442 122.677L109.776 123.424L109.782 123.429L109.789 123.434L110.442 122.677ZM110.038 122.522L110.109 123.52L110.038 122.522ZM109.698 122.678L110.383 123.407L110.391 123.399L109.698 122.678ZM109.466 123.03L110.394 123.401L110.396 123.396L109.466 123.03ZM109.331 123.513L108.348 123.331L108.346 123.341L109.331 123.513ZM109.274 124.049L108.275 124.011L108.274 124.021L109.274 124.049ZM113.325 126.232L112.982 125.292L112.084 125.62L112.371 126.532L113.325 126.232ZM114.42 123.796L115.408 123.641L114.949 120.72L113.54 123.32L114.42 123.796ZM114.07 124.156L114.639 124.979L114.646 124.974L114.07 124.156ZM113.556 124.377L113.377 123.393L113.556 124.377ZM113.158 124.393L113.037 125.386L113.041 125.386L113.158 124.393ZM112.795 124.281L112.337 125.17L112.345 125.174L112.795 124.281ZM112.306 123.481L113.289 123.3L112.306 123.481ZM112.329 122.802L111.368 122.527L111.365 122.534L112.329 122.802ZM112.661 122.253L111.977 121.523L111.974 121.526L112.661 122.253ZM113.261 121.96L113.44 122.944L113.261 121.96ZM114.269 122.242L113.577 122.963L113.58 122.966L114.269 122.242ZM114.819 123.383L115.802 123.201L114.819 123.383ZM114.876 124.258L113.878 124.197L113.878 124.203L114.876 124.258ZM114.729 125.022L113.789 124.682L113.787 124.689L114.729 125.022ZM113.368 126.369L112.414 126.669L112.702 127.583L113.627 127.335L113.368 126.369ZM113.676 124.112L113.497 123.128L113.676 124.112ZM114.121 123.883L114.774 124.64L114.776 124.638L114.121 123.883ZM114.375 123.555L115.345 123.798L115.402 123.571L115.352 123.341L114.375 123.555ZM114.011 122.564L113.172 123.109L113.179 123.119L113.185 123.128L114.011 122.564ZM113.547 122.16L113.236 123.11L113.248 123.114L113.26 123.118L113.547 122.16ZM113.238 122.142L113.059 121.158L113.238 122.142ZM112.929 122.29L113.603 123.029L113.608 123.024L113.613 123.019L112.929 122.29ZM112.757 122.564L111.801 122.271L111.799 122.278L111.797 122.285L112.757 122.564ZM112.705 122.908L111.705 122.88L111.705 122.893L112.705 122.908ZM112.738 123.281L113.722 123.1L112.738 123.281ZM113.058 123.967L112.375 124.697L112.384 124.706L113.058 123.967ZM117.061 125.365L117.925 125.869L118.266 125.285L117.851 124.751L117.061 125.365ZM117.02 125.436L117.379 126.369L117.706 126.243L117.884 125.94L117.02 125.436ZM116.603 125.708L115.804 126.309L116.509 127.248L117.323 126.401L116.603 125.708ZM116.304 125.253L115.638 124.506L115.056 125.025L115.417 125.716L116.304 125.253ZM116.827 124.926L117.794 124.669L117.508 123.594L116.469 123.992L116.827 124.926ZM118.647 124.582L117.721 124.204L117.476 124.803L117.922 125.272L118.647 124.582ZM118.666 124.603L117.942 125.292L118.365 125.736L118.952 125.561L118.666 124.603ZM119.091 124.472L119.397 125.424L119.397 125.423L119.091 124.472ZM119.464 124.346L119.132 123.403L119.464 124.346ZM119.856 124.183L119.415 123.285L119.414 123.286L119.856 124.183ZM120.167 123.977L119.505 123.227L119.501 123.232L120.167 123.977ZM120.487 123.32L120.539 122.322L119.581 122.272L119.492 123.228L120.487 123.32ZM120.579 123.325L121.577 123.261L121.52 122.373L120.631 122.326L120.579 123.325ZM120.622 124.027L119.622 124.064L119.623 124.076L120.622 124.027ZM120.631 124.305L119.631 124.276L119.631 124.292L119.631 124.308L120.631 124.305ZM120.627 124.39L120.898 125.353L121.538 125.172L121.62 124.512L120.627 124.39ZM119.744 124.668L120.06 125.616L120.061 125.616L119.744 124.668ZM119.459 124.765L119.792 125.708L119.792 125.708L119.459 124.765ZM118.825 124.995L118.483 124.055L118.483 124.055L118.825 124.995ZM118.202 125.221L117.567 125.994L118.003 126.352L118.535 126.164L118.202 125.221ZM118.11 125.146L117.205 124.719L116.873 125.423L117.475 125.918L118.11 125.146ZM119.03 122.962L118.066 122.698L118.065 122.701L119.03 122.962ZM119.12 122.485L118.124 122.399L118.123 122.407L119.12 122.485ZM119.132 122.222L118.132 122.219L118.132 122.226L118.132 122.234L119.132 122.222ZM119.115 121.992L118.123 122.121L118.125 122.134L118.127 122.147L119.115 121.992ZM119.072 121.776L120.037 121.515L120.037 121.513L119.072 121.776ZM118.997 121.539L119.939 121.204L118.997 121.539ZM118.816 121.205L118.045 121.842L118.049 121.847L118.816 121.205ZM118.57 121.013L118.153 121.922L118.166 121.927L118.57 121.013ZM118.269 120.958L118.304 121.958L118.312 121.957L118.321 121.957L118.269 120.958ZM117.919 121.029L117.586 120.086L117.919 121.029ZM117.73 121.124L117.198 120.277L117.194 120.28L117.73 121.124ZM117.537 121.269L118.179 122.035L118.188 122.028L118.196 122.021L117.537 121.269ZM117.36 121.443L116.605 120.787L116.597 120.796L117.36 121.443ZM117.23 121.625L116.815 122.535L117.64 122.911L118.095 122.126L117.23 121.625ZM117.115 121.573L116.202 121.164L115.797 122.071L116.7 122.483L117.115 121.573ZM117.285 121.284L116.49 120.677L116.485 120.684L117.285 121.284ZM117.769 120.85L117.254 119.993L117.251 119.995L117.769 120.85ZM118.044 120.719L117.711 119.776L118.044 120.719ZM118.508 120.63L118.522 121.63L118.535 121.629L118.508 120.63ZM118.905 120.7L118.514 121.62L118.524 121.624L118.905 120.7ZM119.223 120.931L118.47 121.589L118.478 121.598L119.223 120.931ZM119.445 121.319L118.503 121.655L119.445 121.319ZM119.517 122.129L118.523 122.019L118.522 122.025L119.517 122.129ZM119.44 122.549L118.473 122.297L118.47 122.308L119.44 122.549ZM119.323 122.958L120.27 123.278L120.273 123.269L119.323 122.958ZM119.048 123.655L119.965 124.053L119.966 124.05L119.048 123.655ZM118.838 124.137L119.752 124.543L119.755 124.535L118.838 124.137ZM123.516 120.469L122.617 120.907L123.516 120.469ZM123.845 121.343L122.877 121.594L122.878 121.599L123.845 121.343ZM123.951 122.147L124.951 122.165L124.951 122.162L123.951 122.147ZM123.773 122.827L124.639 123.325L124.64 123.323L123.773 122.827ZM123.271 123.283L122.836 122.383L123.271 123.283ZM122.539 123.313L122.212 124.258L122.217 124.26L122.539 123.313ZM121.807 122.831L121.087 123.525L121.091 123.529L121.807 122.831ZM121.242 122.012L120.343 122.451L121.242 122.012ZM120.915 121.149L119.946 121.395L119.948 121.402L120.915 121.149ZM120.822 120.365L119.822 120.33L119.822 120.333L120.822 120.365ZM121.009 119.704L121.865 120.222L121.866 120.219L121.009 119.704ZM121.519 119.251L121.954 120.151L121.519 119.251ZM122.246 119.21L121.938 120.162L121.943 120.163L122.246 119.21ZM121.543 121.611L122.442 121.172L121.543 121.611ZM121.91 122.224L121.097 122.806L121.102 122.812L121.91 122.224ZM122.871 123.081L122.523 124.019L122.53 124.021L122.871 123.081ZM123.336 123.077L122.901 122.176L123.336 123.077ZM123.581 122.793L124.522 123.13L124.522 123.129L123.581 122.793ZM123.635 122.345L122.638 122.414L122.638 122.42L123.635 122.345ZM123.543 121.81L122.573 122.054L122.576 122.063L123.543 121.81ZM123.185 120.83L122.286 121.268L123.185 120.83ZM122.386 119.732L121.699 120.458L121.708 120.467L122.386 119.732ZM121.915 119.432L121.573 120.371L121.581 120.374L121.588 120.377L121.915 119.432ZM121.483 119.437L121.918 120.337L121.483 119.437ZM121.225 119.707L122.132 120.129L122.136 120.119L121.225 119.707ZM121.141 120.12L122.141 120.119L122.141 120.114L121.141 120.12ZM121.195 120.619L120.215 120.816L120.217 120.826L121.195 120.619ZM121.341 121.138L120.4 121.474L120.403 121.483L121.341 121.138ZM125.854 121.301L124.867 121.136L124.761 121.773L125.298 122.132L125.854 121.301ZM125.878 121.317L125.321 122.148L125.831 122.489L126.366 122.19L125.878 121.317ZM126.263 121.096L126.77 121.958L126.77 121.958L126.263 121.096ZM126.6 120.892L127.131 121.74L126.6 120.892ZM126.946 120.648L126.319 119.868L126.318 119.869L126.946 120.648ZM127.204 120.379L126.394 119.793L126.39 119.798L127.204 120.379ZM127.372 119.668L127.205 118.682L126.257 118.843L126.38 119.796L127.372 119.668ZM127.462 119.652L128.422 119.372L128.172 118.518L127.295 118.667L127.462 119.652ZM127.658 120.329L126.691 120.584L126.695 120.596L127.658 120.329ZM127.728 120.598L126.747 120.789L126.75 120.804L126.753 120.82L127.728 120.598ZM127.743 120.682L128.219 121.562L128.804 121.245L128.738 120.583L127.743 120.682ZM126.942 121.146L127.459 122.002L127.459 122.002L126.942 121.146ZM126.686 121.303L126.155 120.455L126.686 121.303ZM126.118 121.666L125.579 120.823L125.579 120.823L126.118 121.666ZM125.56 122.022L125.109 122.914L125.613 123.169L126.091 122.869L125.56 122.022ZM125.454 121.968L124.478 121.75L124.308 122.51L125.003 122.861L125.454 121.968ZM125.872 119.637L124.873 119.591L124.873 119.593L125.872 119.637ZM125.855 119.151L124.864 119.285L124.866 119.294L125.855 119.151ZM125.809 118.891L124.832 119.108L124.834 119.115L124.836 119.122L125.809 118.891ZM125.742 118.671L124.803 119.014L124.807 119.026L124.812 119.038L125.742 118.671ZM125.652 118.469L126.537 118.003L126.536 118.002L125.652 118.469ZM125.527 118.255L124.682 118.789L125.527 118.255ZM125.277 117.967L124.664 118.758L124.669 118.761L125.277 117.967ZM124.996 117.834L124.787 118.812L124.801 118.814L124.996 117.834ZM124.69 117.846L124.942 118.814L124.95 118.812L124.958 118.809L124.69 117.846ZM124.364 117.992L124.895 118.839L124.364 117.992ZM124.2 118.125L123.496 117.415L123.492 117.419L124.2 118.125ZM124.044 118.31L124.839 118.916L124.846 118.907L124.852 118.899L124.044 118.31ZM123.91 118.518L123.029 118.044L123.024 118.054L123.91 118.518ZM123.823 118.724L123.616 119.702L124.505 119.89L124.777 119.023L123.823 118.724ZM123.699 118.698L122.719 118.5L122.523 119.472L123.493 119.676L123.699 118.698ZM123.801 118.379L122.893 117.961L122.889 117.969L123.801 118.379ZM124.178 117.85L123.489 117.126L123.486 117.128L124.178 117.85ZM124.418 117.662L124.949 118.509L124.418 117.662ZM124.851 117.473L125.083 118.446L125.095 118.443L124.851 117.473ZM125.254 117.455L125.073 118.439L125.083 118.44L125.254 117.455ZM125.615 117.611L125.023 118.418L125.034 118.425L125.615 117.611ZM125.917 117.942L125.071 118.476L125.917 117.942ZM126.164 118.717L125.17 118.828L125.171 118.834L126.164 118.717ZM126.182 119.143L125.182 119.11L125.182 119.121L126.182 119.143ZM126.157 119.568L127.152 119.672L127.152 119.663L126.157 119.568ZM126.041 120.309L127.024 120.496L127.024 120.492L126.041 120.309ZM125.943 120.825L126.924 121.02L126.925 121.012L125.943 120.825ZM127.835 117.934L127.772 118.932L128.444 118.974L128.736 118.368L127.835 117.934ZM127.706 117.926L126.903 118.521L127.179 118.895L127.644 118.924L127.706 117.926ZM126.503 116.377L125.522 116.572L125.571 116.816L125.728 117.009L126.503 116.377ZM126.495 116.339L125.924 115.518L125.387 115.892L125.514 116.534L126.495 116.339ZM127.216 115.812L127.827 116.603L127.216 115.812ZM127.546 115.538L128.228 116.27L128.235 116.264L128.241 116.258L127.546 115.538ZM127.766 115.155L128.765 115.19L128.766 115.18L128.766 115.17L127.766 115.155ZM127.753 114.929L128.747 114.821L128.746 114.81L127.753 114.929ZM127.744 114.87L126.749 114.971L126.754 115.019L126.763 115.065L127.744 114.87ZM127.741 114.824L127.52 113.849L126.753 114.022L126.741 114.809L127.741 114.824ZM127.829 114.804L128.753 114.421L128.43 113.643L127.608 113.829L127.829 114.804ZM128.146 115.64L128.69 116.479L129.265 116.106L129.125 115.436L128.146 115.64ZM127.674 115.964L128.26 116.774L128.26 116.773L127.674 115.964ZM127.204 116.315L126.593 115.523L127.204 116.315ZM127.047 116.436L126.436 115.644L127.047 116.436ZM126.894 116.558L126.261 115.784L125.532 116.382L126.085 117.145L126.894 116.558ZM127.098 116.839L126.288 117.426L126.293 117.432L126.298 117.439L127.098 116.839ZM127.313 117.12L126.523 117.733L127.313 117.12ZM127.535 117.402L126.756 118.028L126.761 118.034L126.766 118.04L127.535 117.402ZM127.769 117.683L126.999 118.321L127.869 119.371L128.609 118.225L127.769 117.683ZM128.216 117.208L128.827 118L128.216 117.208ZM128.454 117.054L128.938 117.929L128.946 117.925L128.954 117.92L128.454 117.054ZM128.737 116.928L129.05 117.878L129.058 117.875L129.066 117.872L128.737 116.928ZM129.364 116.879L129.137 117.853L129.151 117.856L129.364 116.879ZM129.678 117.013L129.14 117.855L129.146 117.859L129.152 117.863L129.678 117.013ZM129.973 117.287L129.183 117.901L129.973 117.287ZM129.16 119.787L128.451 120.492L129.127 121.172L129.835 120.525L129.16 119.787ZM129.058 119.685L128.356 118.973L127.642 119.678L128.349 120.39L129.058 119.685ZM129.574 117.653L130.364 117.04L129.574 117.653ZM129.282 117.377L128.722 118.206L128.728 118.21L128.735 118.214L129.282 117.377ZM128.193 117.492L127.582 116.7L128.193 117.492ZM127.886 117.839L127.033 117.317L127.029 117.324L127.025 117.331L127.886 117.839ZM129.417 64.6582L129.913 63.7902L129.417 64.6582ZM130.467 62.5382L130.039 63.4421L130.467 62.5382ZM135.794 68.9442L134.872 69.3318L135.794 68.9442ZM138.996 63.7L138.088 63.2803L138.996 63.7ZM140.673 63.0958L140.203 63.9782L140.673 63.0958ZM139.84 68.7923L138.853 68.6335L139.84 68.7923ZM146.16 75.185L146.607 74.2908L146.16 75.185ZM143.825 76.7871L143.373 77.6791L143.825 76.7871ZM140.616 75.8978L140.795 74.914L140.616 75.8978ZM139.46 81.1944L140.442 81.002L139.46 81.1944ZM139.441 89.0313L140.421 89.2288L139.441 89.0313ZM137.879 90.1434L138.054 89.1589L137.879 90.1434ZM137.552 78.1136L138.547 78.0152L137.552 78.1136ZM131.991 83.7445L132.985 83.851L131.991 83.7445ZM129.806 83.4394L130.792 83.6078L129.806 83.4394ZM134.752 77.844L135.147 78.7629L134.752 77.844ZM128.286 75.9646L128.851 76.7896L128.286 75.9646ZM127.228 74.4492L127.709 75.3254L127.228 74.4492ZM127.905 74.3626L128.154 73.394L127.905 74.3626ZM127.823 74.3456L127.707 75.3389L127.823 74.3456ZM131.614 74.9895L132.347 74.3093L131.614 74.9895ZM123.561 68.2173L123.641 67.2205L123.561 68.2173ZM123.609 65.5434L123.613 64.5434L123.609 65.5434ZM132.809 69.7963L133.428 69.0112L132.809 69.7963ZM115.444 56.601L115.024 55.6931L115.444 56.601ZM115.766 56.232L114.811 55.9378L115.766 56.232ZM113.376 58.6133L113.857 57.7368L113.376 58.6133ZM113.412 57.5393L113.831 58.4472L113.412 57.5393ZM115.637 60.0829L116.61 59.8538L115.637 60.0829ZM115.34 59.6921L114.858 60.5686L115.34 59.6921ZM117.301 62.2404L118.257 62.5346L118.257 62.5346L117.301 62.2404ZM116.135 62.1994L115.162 62.4285L116.135 62.1994ZM118.263 59.7949L118.682 60.7028L118.682 60.7027L118.263 59.7949ZM117.94 60.1639L116.984 59.8697L116.984 59.8697L117.94 60.1639ZM120.331 57.7826L120.812 56.9061L120.331 57.7826ZM120.295 58.8566L119.875 57.9487L119.875 57.9487L120.295 58.8566ZM118.069 56.313L117.096 56.5421L118.069 56.313ZM118.367 56.7038L117.885 57.5803L118.367 56.7038ZM117.571 54.1964L118.545 53.9673L118.545 53.9673L117.571 54.1964ZM116.406 54.1555L117.361 54.4496L116.406 54.1555ZM209.271 152.325L208.305 152.067L208.047 153.032L209.012 153.291L209.271 152.325ZM210.304 148.47L210.563 147.505L209.597 147.246L209.338 148.212L210.304 148.47ZM246.491 158.167L247.457 158.425L247.715 157.459L246.75 157.201L246.491 158.167ZM245.458 162.022L245.199 162.987L246.165 163.246L246.424 162.28L245.458 162.022ZM217.121 123.028L216.156 122.769L215.897 123.735L216.863 123.994L217.121 123.028ZM218.154 119.173L218.413 118.207L217.447 117.948L217.188 118.914L218.154 119.173ZM254.341 128.869L255.307 129.128L255.566 128.162L254.6 127.903L254.341 128.869ZM253.308 132.724L253.049 133.69L254.015 133.949L254.274 132.983L253.308 132.724ZM219.807 113.005L218.841 112.746L218.582 113.712L219.548 113.971L219.807 113.005ZM220.84 109.15L221.099 108.184L220.133 107.925L219.874 108.891L220.84 109.15ZM257.027 118.846L257.992 119.105L258.251 118.139L257.285 117.88L257.027 118.846ZM255.994 122.701L255.735 123.667L256.701 123.926L256.96 122.96L255.994 122.701ZM226.211 89.1045L225.245 88.8456L224.987 89.8116L225.952 90.0704L226.211 89.1045ZM227.244 85.2495L227.503 84.2836L226.537 84.0248L226.278 84.9907L227.244 85.2495ZM263.431 94.9457L264.397 95.2045L264.655 94.2386L263.69 93.9797L263.431 94.9457ZM262.398 98.8006L262.139 99.7665L263.105 100.025L263.364 99.0594L262.398 98.8006ZM227.451 84.4786L226.485 84.2198L226.226 85.1857L227.192 85.4445L227.451 84.4786ZM228.484 80.6237L228.742 79.6577L227.777 79.3989L227.518 80.3649L228.484 80.6237ZM264.67 90.3198L265.636 90.5786L265.895 89.6127L264.929 89.3539L264.67 90.3198ZM263.637 94.1748L263.378 95.1407L264.344 95.3995L264.603 94.4336L263.637 94.1748ZM228.69 79.8526L227.724 79.5938L227.466 80.5597L228.431 80.8185L228.69 79.8526ZM229.723 75.9977L229.982 75.0318L229.016 74.7729L228.757 75.7389L229.723 75.9977ZM265.91 85.6938L266.876 85.9527L267.134 84.9867L266.169 84.7279L265.91 85.6938ZM264.877 89.5488L264.618 90.5147L265.584 90.7735L265.843 89.8076L264.877 89.5488ZM206.999 160.806L206.033 160.547L205.774 161.513L206.74 161.772L206.999 160.806ZM207.412 159.264L207.671 158.298L206.705 158.039L206.446 159.005L207.412 159.264ZM243.599 168.96L244.564 169.219L244.823 168.253L243.857 167.994L243.599 168.96ZM243.185 170.502L242.927 171.468L243.892 171.727L244.151 170.761L243.185 170.502ZM208.032 156.951L207.066 156.692L206.807 157.658L207.773 157.917L208.032 156.951ZM208.445 155.409L208.704 154.443L207.738 154.184L207.479 155.15L208.445 155.409ZM244.631 165.105L245.597 165.364L245.856 164.398L244.89 164.139L244.631 165.105ZM244.218 166.647L243.959 167.613L244.925 167.872L245.184 166.906L244.218 166.647ZM208.651 154.638L207.686 154.38L207.427 155.345L208.393 155.604L208.651 154.638ZM209.065 153.096L209.323 152.13L208.358 151.872L208.099 152.838L209.065 153.096ZM245.251 162.793L246.217 163.051L246.476 162.085L245.51 161.827L245.251 162.793ZM244.838 164.335L244.579 165.3L245.545 165.559L245.804 164.593L244.838 164.335ZM213.816 135.364L212.85 135.105L212.591 136.071L213.557 136.33L213.816 135.364ZM214.229 133.822L214.488 132.856L213.522 132.597L213.263 133.563L214.229 133.822ZM250.416 143.518L251.382 143.777L251.641 142.811L250.675 142.552L250.416 143.518ZM250.003 145.06L249.744 146.026L250.71 146.285L250.969 145.319L250.003 145.06ZM215.262 129.967L214.296 129.708L214.037 130.674L215.003 130.933L215.262 129.967ZM215.675 128.425L215.934 127.459L214.968 127.2L214.709 128.166L215.675 128.425ZM251.862 138.121L252.828 138.38L253.087 137.414L252.121 137.155L251.862 138.121ZM251.449 139.663L251.19 140.629L252.156 140.888L252.415 139.922L251.449 139.663ZM215.882 127.654L214.916 127.395L214.657 128.361L215.623 128.62L215.882 127.654ZM216.295 126.112L216.554 125.146L215.588 124.887L215.329 125.853L216.295 126.112ZM252.482 135.808L253.448 136.067L253.706 135.101L252.741 134.842L252.482 135.808ZM252.069 137.35L251.81 138.316L252.776 138.575L253.034 137.609L252.069 137.35ZM218.361 118.402L217.395 118.143L217.136 119.109L218.102 119.368L218.361 118.402ZM218.774 116.86L219.033 115.894L218.067 115.635L217.808 116.601L218.774 116.86ZM254.961 126.556L255.927 126.815L256.185 125.849L255.22 125.59L254.961 126.556ZM254.548 128.098L254.289 129.064L255.255 129.323L255.513 128.357L254.548 128.098ZM221.666 106.066L220.7 105.807L220.442 106.773L221.408 107.032L221.666 106.066ZM222.08 104.524L222.338 103.558L221.372 103.299L221.114 104.265L222.08 104.524ZM258.266 114.22L259.232 114.479L259.491 113.513L258.525 113.254L258.266 114.22ZM257.853 115.762L257.594 116.728L258.56 116.987L258.819 116.021L257.853 115.762ZM222.286 103.753L221.32 103.494L221.061 104.46L222.027 104.719L222.286 103.753ZM222.699 102.211L222.958 101.245L221.992 100.986L221.733 101.952L222.699 102.211ZM258.886 111.907L259.852 112.166L260.111 111.2L259.145 110.941L258.886 111.907ZM258.473 113.449L258.214 114.415L259.18 114.674L259.439 113.708L258.473 113.449ZM222.906 101.44L221.94 101.182L221.681 102.147L222.647 102.406L222.906 101.44ZM223.319 99.8984L223.578 98.9324L222.612 98.6736L222.353 99.6395L223.319 99.8984ZM259.506 109.595L260.471 109.853L260.73 108.887L259.764 108.629L259.506 109.595ZM259.092 111.136L258.834 112.102L259.799 112.361L260.058 111.395L259.092 111.136ZM223.526 99.1273L222.56 98.8685L222.301 99.8344L223.267 100.093L223.526 99.1273ZM223.939 97.5854L224.198 96.6194L223.232 96.3606L222.973 97.3265L223.939 97.5854ZM260.125 107.282L261.091 107.54L261.35 106.574L260.384 106.316L260.125 107.282ZM259.712 108.823L259.453 109.789L260.419 110.048L260.678 109.082L259.712 108.823ZM224.972 93.7304L224.006 93.4716L223.747 94.4375L224.713 94.6964L224.972 93.7304ZM225.385 92.1885L225.644 91.2225L224.678 90.9637L224.419 91.9297L225.385 92.1885ZM261.571 101.885L262.537 102.143L262.796 101.178L261.83 100.919L261.571 101.885ZM261.158 103.427L260.899 104.393L261.865 104.651L262.124 103.685L261.158 103.427ZM229.93 75.2268L228.964 74.9679L228.705 75.9339L229.671 76.1927L229.93 75.2268ZM230.343 73.6848L230.602 72.7189L229.636 72.4601L229.377 73.426L230.343 73.6848ZM266.529 83.3809L267.495 83.6398L267.754 82.6738L266.788 82.415L266.529 83.3809ZM266.116 84.9229L265.857 85.8888L266.823 86.1477L267.082 85.1817L266.116 84.9229ZM257.896 150.446L258.155 149.48L257.207 149.226L256.935 150.169L257.896 150.446ZM257.304 152.658L257.741 153.557L258.162 153.353L258.274 152.899L257.304 152.658ZM257.207 152.705L256.37 153.253L256.852 153.989L257.644 153.604L257.207 152.705ZM255.67 150.741L254.918 151.4L254.918 151.4L255.67 150.741ZM254.04 149.037L253.129 148.625L252.828 149.291L253.371 149.78L254.04 149.037ZM254.113 148.877L254.324 147.9L253.534 147.728L253.201 148.465L254.113 148.877ZM257.603 149.805L257.344 150.771L258.31 151.03L258.569 150.064L257.603 149.805ZM257.389 149.028L256.622 148.387L256.056 149.065L256.658 149.71L257.389 149.028ZM257.454 148.95L257.977 148.098L257.24 147.646L256.686 148.31L257.454 148.95ZM258.203 149.41L259.158 149.706L259.388 148.965L258.726 148.558L258.203 149.41ZM258.051 149.925L257.085 149.666L256.826 150.632L257.792 150.891L258.051 149.925ZM259.374 149.666L259.924 148.831L258.962 148.197L258.469 149.239L259.374 149.666ZM259.448 149.715L260.369 150.105L260.694 149.338L259.999 148.88L259.448 149.715ZM259.017 151.327L259.112 152.322L259.911 152.245L260.009 151.448L259.017 151.327ZM258.926 151.336L257.93 151.253L257.831 152.445L259.022 152.331L258.926 151.336ZM257.006 151.921L257.26 152.888L257.791 152.749L257.959 152.225L257.006 151.921ZM257.462 150.33L258.428 150.588L258.687 149.622L257.721 149.364L257.462 150.33ZM254.981 149.588L255.416 148.688L254.736 148.359L254.234 148.923L254.981 149.588ZM254.955 149.618L254.208 148.953L253.585 149.653L254.243 150.32L254.955 149.618ZM256.979 151.928L256.171 152.518L256.573 153.068L257.232 152.895L256.979 151.928ZM257.078 146.687L256.078 146.701L256.091 147.625L257.013 147.685L257.078 146.687ZM257.114 146.69L257.049 147.688L257.813 147.737L258.061 147.012L257.114 146.69ZM257.273 146.316L258.159 146.779L258.164 146.771L258.167 146.763L257.273 146.316ZM257.827 145.683L258.347 146.537L258.357 146.531L257.827 145.683ZM258.254 145.541L258.379 146.533L258.388 146.532L258.397 146.531L258.254 145.541ZM259.413 145.896L258.768 146.66L258.775 146.666L259.413 145.896ZM259.793 146.377L260.704 145.966L260.701 145.958L259.793 146.377ZM259.95 146.993L260.946 146.9L260.945 146.89L259.95 146.993ZM259.767 148.511L260.719 148.818L260.72 148.816L259.767 148.511ZM259.737 148.612L259.607 149.604L260.476 149.717L260.702 148.871L259.737 148.612ZM259.577 148.592L258.598 148.388L258.379 149.444L259.448 149.583L259.577 148.592ZM259.673 148.044L260.664 148.175L260.665 148.168L260.666 148.161L259.673 148.044ZM259.646 147.061L260.608 146.788L260.607 146.782L259.646 147.061ZM259.47 146.667L258.622 147.197L258.622 147.198L259.47 146.667ZM259.146 146.343L259.696 145.508L259.692 145.505L259.146 146.343ZM257.149 147.433L256.988 148.42L257.979 148.583L258.137 147.591L257.149 147.433ZM256.939 147.399L255.941 147.332L255.88 148.239L256.777 148.386L256.939 147.399ZM256.79 146.311L255.883 146.73L255.885 146.735L256.79 146.311ZM255.52 145.839L256.054 146.685L256.061 146.68L255.52 145.839ZM255.137 146.847L256.133 146.756L256.132 146.749L255.137 146.847ZM255.266 147.349L255.751 148.223L256.552 147.779L256.18 146.942L255.266 147.349ZM255.124 147.428L254.289 147.978L254.799 148.752L255.609 148.302L255.124 147.428ZM254.881 146.763L253.889 146.895L253.89 146.899L254.881 146.763ZM255.371 145.357L255.958 146.167L255.962 146.163L255.371 145.357ZM256.828 145.762L255.968 146.272L255.971 146.277L256.828 145.762ZM260.766 144.633L259.785 144.438L259.785 144.439L260.766 144.633ZM260.7 145.043L260.796 146.038L261.595 145.961L261.693 145.164L260.7 145.043ZM260.61 145.051L259.614 144.959L259.503 146.162L260.706 146.047L260.61 145.051ZM260.403 144.415L259.87 145.261L259.884 145.27L259.897 145.278L260.403 144.415ZM256.497 143.357L256.355 144.347L256.357 144.348L256.497 143.357ZM256.213 143.362L256.44 144.336L256.461 144.331L256.482 144.325L256.213 143.362ZM256.049 143.468L256.849 144.068L256.864 144.049L256.877 144.029L256.049 143.468ZM255.926 143.818L254.94 143.652L254.939 143.657L255.926 143.818ZM255.909 143.963L255.793 144.957L256.831 145.079L256.907 144.036L255.909 143.963ZM255.764 143.946L254.765 143.901L254.722 144.831L255.647 144.939L255.764 143.946ZM255.849 143.122L256.837 143.278L256.838 143.266L256.84 143.255L255.849 143.122ZM255.885 142.879L256.872 143.04L256.874 143.024L256.876 143.008L255.885 142.879ZM255.907 142.714L254.918 142.563L254.917 142.57L255.907 142.714ZM255.916 142.654L254.95 142.395L254.617 143.639L255.904 143.654L255.916 142.654ZM260.559 143.832L260.566 144.832L260.581 144.832L260.597 144.832L260.559 143.832ZM261.058 143.381L261.608 142.546L260.635 141.906L260.149 142.964L261.058 143.381ZM261.132 143.431L262.054 143.819L262.377 143.053L261.682 142.596L261.132 143.431ZM257.063 138.509L256.424 137.739L256.152 137.965L256.083 138.312L257.063 138.509ZM257.12 138.462L257.744 137.681L257.108 137.172L256.481 137.692L257.12 138.462ZM261.108 141.141L260.646 142.028L260.653 142.032L260.659 142.035L261.108 141.141ZM261.626 141.368L262.592 141.627L262.83 140.739L261.965 140.427L261.626 141.368ZM261.512 141.794L261.165 142.732L262.194 143.113L262.478 142.053L261.512 141.794ZM261.226 141.659L260.741 142.533L260.749 142.537L260.756 142.541L261.226 141.659ZM259.325 140.463L258.758 141.286L258.76 141.287L259.325 140.463ZM257.475 139.105L258.099 138.324L257.6 137.925L257.028 138.21L257.475 139.105ZM257.437 139.124L256.99 138.229L256.614 138.417L256.485 138.818L257.437 139.124ZM257.073 141.097L258.031 140.81L258.029 140.804L257.073 141.097ZM257.172 141.329L258.008 140.78L258.001 140.769L257.994 140.759L257.172 141.329ZM257.311 141.494L256.604 142.2L256.626 142.222L256.649 142.243L257.311 141.494ZM257.344 141.524L258.21 142.024L258.569 141.402L258.094 140.863L257.344 141.524ZM257.289 141.619L256.787 142.484L257.654 142.987L258.155 142.119L257.289 141.619ZM256.369 141.044L255.437 140.682L255.185 141.332L255.707 141.793L256.369 141.044ZM261.879 138.345L261.044 138.896L261.398 139.433L262.034 139.333L261.879 138.345ZM261.914 138.34L262.068 139.328L262.677 139.233L262.865 138.646L261.914 138.34ZM262.073 137.828L263.031 138.114L263.031 138.113L262.073 137.828ZM262.308 136.868L261.318 136.724L261.318 136.726L262.308 136.868ZM262.315 136.417L261.323 136.539L261.324 136.546L262.315 136.417ZM261.877 135.646L261.084 135.036L260.498 135.798L261.237 136.414L261.877 135.646ZM261.944 135.558L262.458 134.7L261.694 134.243L261.152 134.948L261.944 135.558ZM262.677 135.999L262.14 136.843L262.151 136.849L262.677 135.999ZM262.961 136.181L262.371 136.988L262.384 136.997L262.397 137.006L262.961 136.181ZM263.044 136.243L263.991 136.564L264.204 135.934L263.706 135.494L263.044 136.243ZM262.716 137.313L263.678 137.589L263.678 137.588L262.716 137.313ZM262.415 138.452L261.447 138.203L261.447 138.203L262.415 138.452ZM262.214 139.228L262.488 140.19L263.034 140.035L263.18 139.487L262.214 139.228ZM262.076 139.267L261.213 139.773L261.604 140.441L262.349 140.229L262.076 139.267ZM260.521 136.849L259.757 137.495L259.759 137.497L260.521 136.849ZM260.105 136.431L259.469 137.203L259.476 137.208L260.105 136.431ZM259.849 136.238L259.28 137.06L259.286 137.065L259.292 137.069L259.849 136.238ZM259.608 136.097L259.151 136.987L259.163 136.993L259.175 136.998L259.608 136.097ZM259.362 135.991L259.695 135.048L259.693 135.047L259.362 135.991ZM258.614 135.852L258.7 136.849L258.706 136.848L258.614 135.852ZM258.254 135.964L258.765 136.824L258.777 136.817L258.254 135.964ZM257.993 136.227L258.836 136.765L258.841 136.757L258.845 136.75L257.993 136.227ZM257.79 136.877L256.791 136.837L256.79 136.843L257.79 136.877ZM257.803 137.169L258.798 137.071L258.797 137.06L258.796 137.05L257.803 137.169ZM257.856 137.465L256.888 137.718L256.892 137.729L257.856 137.465ZM257.949 137.72L258.462 138.578L259.244 138.111L258.851 137.289L257.949 137.72ZM257.818 137.798L256.965 138.32L257.482 139.163L258.331 138.656L257.818 137.798ZM257.645 137.43L256.695 137.743L256.698 137.752L257.645 137.43ZM257.543 136.65L256.544 136.59L256.544 136.594L257.543 136.65ZM257.828 135.762L258.66 136.318L258.667 136.307L257.828 135.762ZM258.17 135.416L258.705 136.261L258.714 136.255L258.17 135.416ZM258.619 135.259L258.731 136.252L258.744 136.251L258.619 135.259ZM260.02 135.791L259.367 136.548L259.371 136.552L260.02 135.791ZM260.387 136.156L259.632 136.812L259.64 136.82L260.387 136.156ZM260.717 136.555L261.516 135.954L261.511 135.947L260.717 136.555ZM261.226 137.308L262.073 136.777L262.071 136.774L261.226 137.308ZM261.565 137.849L262.416 137.324L262.412 137.317L261.565 137.849ZM260.709 133.137L259.709 133.151L259.722 134.075L260.644 134.135L260.709 133.137ZM260.745 133.14L260.68 134.138L261.444 134.188L261.691 133.462L260.745 133.14ZM260.904 132.766L261.79 133.229L261.794 133.221L261.798 133.213L260.904 132.766ZM261.458 132.133L261.978 132.987L261.988 132.981L261.458 132.133ZM261.885 131.991L262.01 132.984L262.019 132.982L262.028 132.981L261.885 131.991ZM263.043 132.346L262.399 133.11L262.406 133.116L263.043 132.346ZM263.424 132.827L264.335 132.416L264.331 132.408L263.424 132.827ZM263.581 133.443L264.577 133.35L264.576 133.34L263.581 133.443ZM263.398 134.961L264.35 135.268L264.351 135.266L263.398 134.961ZM263.367 135.062L263.238 136.054L264.106 136.167L264.333 135.321L263.367 135.062ZM263.208 135.042L262.229 134.838L262.009 135.894L263.079 136.033L263.208 135.042ZM263.303 134.494L264.295 134.625L264.296 134.618L264.296 134.611L263.303 134.494ZM263.277 133.511L264.239 133.238L264.237 133.232L263.277 133.511ZM263.1 133.117L262.253 133.647L262.253 133.648L263.1 133.117ZM262.777 132.793L263.327 131.958L263.323 131.955L262.777 132.793ZM260.78 133.883L260.618 134.87L261.609 135.033L261.768 134.041L260.78 133.883ZM260.569 133.849L259.572 133.782L259.511 134.689L260.408 134.836L260.569 133.849ZM260.421 132.761L259.513 133.18L259.515 133.185L260.421 132.761ZM259.151 132.289L259.685 133.135L259.692 133.13L259.151 132.289ZM258.767 133.297L259.763 133.206L259.763 133.199L258.767 133.297ZM258.897 133.799L259.382 134.673L260.183 134.229L259.81 133.392L258.897 133.799ZM258.755 133.878L257.92 134.428L258.429 135.202L259.24 134.752L258.755 133.878ZM258.511 133.213L257.52 133.345L257.52 133.349L258.511 133.213ZM259.002 131.807L259.589 132.617L259.593 132.613L259.002 131.807ZM260.458 132.212L259.598 132.722L259.601 132.727L260.458 132.212ZM263.386 128.208L262.941 129.103L262.946 129.106L263.386 128.208ZM264.208 128.75L264.876 128.005L264.873 128.003L264.208 128.75ZM264.691 129.452L265.635 129.121L265.634 129.119L264.691 129.452ZM264.161 130.965L264.659 131.832L264.664 131.829L264.161 130.965ZM263.139 131.25L263.19 132.249L263.196 132.248L263.139 131.25ZM260.889 130.727L260.439 131.621L260.445 131.624L260.889 130.727ZM260.095 130.19L259.414 130.922L259.417 130.925L260.095 130.19ZM259.636 129.493L260.587 129.183L260.586 129.18L259.636 129.493ZM260.161 127.972L260.677 128.829L260.682 128.826L260.161 127.972ZM262.663 130.673L262.569 131.669L262.576 131.669L262.663 130.673ZM264.211 130.478L264.69 131.356L264.696 131.352L264.211 130.478ZM264.508 129.601L265.378 129.108L265.378 129.107L264.508 129.601ZM264.14 129.195L263.539 129.994L263.544 129.998L264.14 129.195ZM263.576 128.854L263.124 129.746L263.133 129.751L263.576 128.854ZM260.752 128.258L260.848 129.253L260.86 129.252L260.752 128.258ZM260.103 128.449L260.587 129.324L260.594 129.32L260.601 129.316L260.103 128.449ZM259.809 129.299L260.721 128.887L260.716 128.877L259.809 129.299ZM260.122 129.704L260.776 128.947L260.772 128.944L260.122 129.704ZM260.623 130.05L260.13 130.92L260.139 130.925L260.623 130.05ZM261.216 130.329L260.852 131.261L260.861 131.264L261.216 130.329ZM262.88 125.457L263.658 126.086L263.964 125.707L263.855 125.233L262.88 125.457ZM261.165 124.541L261.624 125.429L261.63 125.426L261.165 124.541ZM260.88 125.673L261.682 125.077L261.678 125.071L260.88 125.673ZM264.275 127.474L264.004 128.437L264.016 128.44L264.275 127.474ZM263.812 127.259L264.397 126.448L264.393 126.445L263.812 127.259ZM263.474 126.935L262.674 127.534L262.681 127.544L263.474 126.935ZM263.235 126.527L262.319 126.928L262.323 126.936L263.235 126.527ZM263.055 126.063L264.002 125.741L263.438 124.081L262.296 125.412L263.055 126.063ZM262.322 126.582L262.604 127.542L262.609 127.54L262.322 126.582ZM261.112 126.379L261.708 125.576L261.704 125.573L261.112 126.379ZM261.165 124.157L261.699 125.003L261.703 125L261.165 124.157ZM262.727 124.47L263.539 123.886L263.536 123.881L262.727 124.47ZM263.052 125.269L262.068 125.451L262.448 127.498L263.809 125.923L263.052 125.269ZM265.666 125.184L264.79 125.667L264.792 125.671L265.666 125.184ZM264.927 127.437L265.305 128.363L265.312 128.36L265.319 128.357L264.927 127.437ZM263.241 125.875L262.452 125.261L262.13 125.675L262.287 126.174L263.241 125.875ZM265.519 125.54L264.657 126.046L264.657 126.047L265.519 125.54ZM265.899 123.344L265.064 123.894L265.418 124.431L266.053 124.332L265.899 123.344ZM265.933 123.338L266.088 124.326L266.696 124.231L266.885 123.645L265.933 123.338ZM266.093 122.826L267.051 123.112L267.051 123.111L266.093 122.826ZM266.328 121.866L265.338 121.722L265.338 121.724L266.328 121.866ZM266.335 121.415L265.342 121.538L265.343 121.544L266.335 121.415ZM265.896 120.644L265.104 120.034L264.518 120.796L265.256 121.412L265.896 120.644ZM265.964 120.556L266.477 119.698L265.714 119.241L265.171 119.946L265.964 120.556ZM266.696 120.997L266.16 121.841L266.171 121.848L266.696 120.997ZM266.981 121.179L266.391 121.986L266.403 121.996L266.416 122.004L266.981 121.179ZM267.063 121.241L268.01 121.562L268.224 120.932L267.726 120.492L267.063 121.241ZM266.736 122.312L267.698 122.587L267.698 122.587L266.736 122.312ZM266.435 123.451L265.466 123.201L265.466 123.201L266.435 123.451ZM266.234 124.226L266.508 125.188L267.053 125.033L267.2 124.485L266.234 124.226ZM266.095 124.266L265.232 124.771L265.624 125.44L266.369 125.228L266.095 124.266ZM264.54 121.847L263.777 122.494L263.779 122.496L264.54 121.847ZM264.125 121.429L263.489 122.201L263.496 122.207L264.125 121.429ZM263.868 121.236L263.299 122.059L263.305 122.063L263.312 122.067L263.868 121.236ZM263.628 121.095L263.171 121.985L263.183 121.991L263.194 121.996L263.628 121.095ZM263.381 120.989L263.715 120.046L263.713 120.046L263.381 120.989ZM262.634 120.851L262.72 121.847L262.725 121.847L262.634 120.851ZM262.274 120.963L262.784 121.823L262.796 121.815L262.274 120.963ZM262.013 121.225L262.856 121.763L262.861 121.756L262.865 121.748L262.013 121.225ZM261.809 121.875L260.81 121.836L260.81 121.841L261.809 121.875ZM261.823 122.168L262.818 122.07L262.817 122.059L262.816 122.048L261.823 122.168ZM261.876 122.463L260.908 122.716L260.911 122.728L261.876 122.463ZM261.969 122.718L262.481 123.577L263.264 123.109L262.871 122.287L261.969 122.718ZM261.838 122.796L260.985 123.319L261.501 124.162L262.35 123.655L261.838 122.796ZM261.665 122.428L260.715 122.741L260.718 122.75L261.665 122.428ZM261.562 121.648L260.564 121.588L260.564 121.592L261.562 121.648ZM261.848 120.761L262.68 121.316L262.687 121.305L261.848 120.761ZM262.19 120.414L262.725 121.259L262.733 121.254L262.19 120.414ZM262.639 120.257L262.751 121.251L262.764 121.249L262.639 120.257ZM264.04 120.789L263.386 121.546L263.391 121.55L264.04 120.789ZM264.407 121.154L263.652 121.81L263.66 121.818L264.407 121.154ZM264.737 121.553L265.536 120.952L265.531 120.945L264.737 121.553ZM265.246 122.307L266.093 121.775L266.091 121.772L265.246 122.307ZM265.585 122.847L266.436 122.322L266.432 122.315L265.585 122.847ZM264.729 118.136L263.729 118.149L263.741 119.073L264.663 119.134L264.729 118.136ZM264.765 118.138L264.699 119.136L265.464 119.186L265.711 118.461L264.765 118.138ZM264.923 117.764L265.81 118.227L265.814 118.219L265.818 118.211L264.923 117.764ZM265.478 117.131L265.997 117.986L266.007 117.979L265.478 117.131ZM265.904 116.99L266.029 117.982L266.038 117.981L266.047 117.979L265.904 116.99ZM267.063 117.344L266.418 118.109L266.426 118.115L267.063 117.344ZM267.443 117.826L268.355 117.414L268.351 117.406L267.443 117.826ZM267.601 118.441L268.597 118.348L268.596 118.339L267.601 118.441ZM267.418 119.959L268.37 120.266L268.37 120.264L267.418 119.959ZM267.387 120.061L267.258 121.052L268.126 121.165L268.353 120.319L267.387 120.061ZM267.228 120.04L266.248 119.836L266.029 120.892L267.098 121.031L267.228 120.04ZM267.323 119.492L268.314 119.623L268.315 119.616L268.316 119.609L267.323 119.492ZM267.297 118.51L268.259 118.236L268.257 118.23L267.297 118.51ZM267.12 118.115L266.272 118.646L266.273 118.646L267.12 118.115ZM266.796 117.791L267.347 116.956L267.343 116.954L266.796 117.791ZM264.8 118.882L264.638 119.868L265.629 120.031L265.787 119.039L264.8 118.882ZM264.589 118.847L263.591 118.78L263.531 119.687L264.427 119.834L264.589 118.847ZM264.441 117.759L263.533 118.178L263.535 118.183L264.441 117.759ZM263.171 117.287L263.705 118.133L263.711 118.129L263.171 117.287ZM262.787 118.295L263.783 118.205L263.782 118.197L262.787 118.295ZM262.917 118.797L263.402 119.671L264.203 119.227L263.83 118.39L262.917 118.797ZM262.774 118.876L261.939 119.426L262.449 120.2L263.26 119.75L262.774 118.876ZM262.531 118.212L261.54 118.343L261.54 118.347L262.531 118.212ZM263.021 116.805L263.608 117.615L263.613 117.612L263.021 116.805ZM264.478 117.21L263.618 117.721L263.621 117.725L264.478 117.21ZM267.547 114.431L267.805 113.465L266.857 113.211L266.586 114.154L267.547 114.431ZM266.954 116.643L267.391 117.542L267.812 117.338L267.924 116.884L266.954 116.643ZM266.857 116.69L266.021 117.238L266.503 117.974L267.294 117.589L266.857 116.69ZM265.32 114.725L264.568 115.385L264.568 115.385L265.32 114.725ZM263.691 113.021L262.779 112.61L262.479 113.276L263.021 113.765L263.691 113.021ZM263.763 112.862L263.974 111.884L263.184 111.713L262.851 112.45L263.763 112.862ZM267.253 113.79L266.994 114.756L267.96 115.014L268.219 114.049L267.253 113.79ZM267.039 113.013L266.272 112.372L265.706 113.05L266.308 113.695L267.039 113.013ZM267.104 112.935L267.628 112.083L266.891 111.631L266.337 112.295L267.104 112.935ZM267.853 113.395L268.809 113.691L269.038 112.95L268.377 112.543L267.853 113.395ZM267.701 113.91L266.735 113.651L266.476 114.617L267.442 114.876L267.701 113.91ZM269.024 113.651L269.574 112.816L268.612 112.182L268.12 113.223L269.024 113.651ZM269.099 113.7L270.019 114.09L270.344 113.323L269.649 112.865L269.099 113.7ZM268.667 115.312L268.762 116.307L269.562 116.23L269.659 115.433L268.667 115.312ZM268.576 115.32L267.58 115.238L267.482 116.43L268.672 116.316L268.576 115.32ZM266.657 115.905L266.91 116.873L267.442 116.734L267.609 116.21L266.657 115.905ZM267.112 114.315L268.078 114.573L268.337 113.607L267.371 113.349L267.112 114.315ZM264.632 113.573L265.066 112.673L264.386 112.344L263.884 112.908L264.632 113.573ZM264.605 113.603L263.858 112.938L263.236 113.638L263.893 114.305L264.605 113.603ZM266.629 115.913L265.822 116.503L266.223 117.053L266.882 116.88L266.629 115.913ZM266.851 111.761L267.404 112.594L267.967 112.22L267.83 111.559L266.851 111.761ZM266.722 111.847L266.44 112.806L266.887 112.937L267.275 112.68L266.722 111.847ZM264.423 111.231L263.761 111.98L263.947 112.144L264.187 112.203L264.423 111.231ZM264.388 111.199L263.436 110.893L263.236 111.515L263.725 111.948L264.388 111.199ZM264.812 109.658L265.798 109.827L265.799 109.818L265.8 109.808L264.812 109.658ZM264.741 109.128L265.558 108.55L265.552 108.542L265.546 108.534L264.741 109.128ZM264.563 108.919L265.288 108.231L265.28 108.223L264.563 108.919ZM264.51 108.869L263.78 109.552L263.812 109.587L263.848 109.618L264.51 108.869ZM264.474 108.826L263.708 108.184L263.202 108.787L263.669 109.42L264.474 108.826ZM264.544 108.743L265.048 107.879L264.32 107.454L263.778 108.1L264.544 108.743ZM265.464 109.318L266.405 109.656L266.636 109.012L266.12 108.563L265.464 109.318ZM265.247 109.976L266.205 110.264L266.205 110.264L265.247 109.976ZM264.934 111.119L263.96 110.889L263.744 111.803L264.643 112.076L264.934 111.119ZM265.337 111.242L265.046 112.198L265.054 112.201L265.062 112.203L265.337 111.242ZM266.171 111.465L265.928 112.435L265.936 112.437L265.944 112.439L266.171 111.465ZM266.602 111.566L266.374 112.54L267.708 112.852L267.599 111.487L266.602 111.566ZM266.8 110.458L267.716 110.861L267.719 110.852L267.723 110.844L266.8 110.458ZM266.98 110.13L267.804 110.696L267.809 110.689L267.814 110.682L266.98 110.13ZM267.548 109.624L267.955 110.538L267.968 110.532L267.548 109.624ZM267.949 109.524L268.028 110.52L268.035 110.52L268.043 110.519L267.949 109.524ZM269.49 112.581L269.35 113.571L270.303 113.706L270.474 112.759L269.49 112.581ZM269.317 112.557L268.327 112.417L268.187 113.407L269.177 113.547L269.317 112.557ZM267.835 110.165L267.889 111.164L267.897 111.163L267.904 111.163L267.835 110.165ZM266.831 111.631L265.836 111.734L265.837 111.742L265.838 111.751L266.831 111.631ZM270.231 108.831L269.235 108.74L269.148 109.688L270.091 109.821L270.231 108.831ZM268.124 106.367L268.408 105.408L265.556 104.562L267.318 106.959L268.124 106.367ZM268.338 106.936L269.324 106.772L269.323 106.764L268.338 106.936ZM268.126 108.055L268.971 108.59L268.973 108.587L268.126 108.055ZM267.816 108.392L268.42 109.189L268.427 109.183L267.816 108.392ZM265.951 108.13L265.291 108.882L265.297 108.887L265.951 108.13ZM265.52 107.481L264.568 107.789L264.57 107.794L265.52 107.481ZM266.34 105.721L266.692 106.657L266.696 106.655L266.34 105.721ZM268.867 106.11L268.384 106.985L268.39 106.988L268.867 106.11ZM269.63 106.669L268.921 107.374L268.926 107.378L269.63 106.669ZM270.404 108.856L270.264 109.846L271.216 109.98L271.388 109.034L270.404 108.856ZM268.065 106.738L269.028 106.47L269.027 106.467L268.065 106.738ZM267.837 106.29L268.471 105.517L268.291 105.369L268.064 105.316L267.837 106.29ZM266.56 106.171L266.69 107.162L266.701 107.161L266.713 107.159L266.56 106.171ZM265.876 106.466L266.6 107.156L266.609 107.147L266.618 107.137L265.876 106.466ZM265.699 107.208L266.655 106.914L266.653 106.907L266.651 106.9L265.699 107.208ZM265.911 107.539L265.238 108.277L265.243 108.283L265.249 108.288L265.911 107.539ZM266.262 107.775L265.808 108.666L265.819 108.672L266.262 107.775ZM267.607 107.942L267.971 108.873L267.983 108.868L267.607 107.942ZM44.7004 3.09371L210.458 47.5083L210.976 45.5765L45.218 1.16186L44.7004 3.09371ZM176.69 173.533L10.9321 129.119L10.4145 131.05L176.172 175.465L176.69 173.533ZM3.08307 115.583L31.1352 10.8912L29.2033 10.3736L1.15122 115.065L3.08307 115.583ZM10.9321 129.119C5.01557 127.533 1.50545 121.471 3.08307 115.583L1.15122 115.065C-0.713988 122.026 3.43736 129.181 10.4145 131.05L10.9321 129.119ZM190.255 165.736C188.677 171.623 182.606 175.118 176.69 173.533L176.172 175.465C183.149 177.334 190.322 173.214 192.187 166.253L190.255 165.736ZM210.458 47.5083C216.374 49.0937 219.885 55.156 218.307 61.0438L220.239 61.5614C222.104 54.6004 217.953 47.446 210.976 45.5765L210.458 47.5083ZM45.218 1.16186C38.2409 -0.707657 31.0685 3.41255 29.2033 10.3736L31.1352 10.8912C32.7128 5.00347 38.7838 1.50837 44.7004 3.09371L45.218 1.16186ZM64.2665 25.7911L182.164 57.3817L182.682 55.4499L64.7841 23.8592L64.2665 25.7911ZM44.7853 36.9905C47.0515 28.5329 55.7712 23.5148 64.2665 25.7911L64.7841 23.8592C55.2283 21.2987 45.4072 26.942 42.8535 36.4728L44.7853 36.9905ZM27.9541 99.8055L44.7853 36.9905L42.8535 36.4728L26.0222 99.2879L27.9541 99.8055ZM39.2256 119.245C30.7303 116.969 25.6879 108.263 27.9541 99.8055L26.0222 99.2879C23.4684 108.819 29.152 118.616 38.7079 121.177L39.2256 119.245ZM157.124 150.836L39.2256 119.245L38.7079 121.177L156.606 152.768L157.124 150.836ZM176.605 139.636C174.339 148.094 165.619 153.112 157.124 150.836L156.606 152.768C166.162 155.328 175.983 149.685 178.537 140.154L176.605 139.636ZM193.436 76.8213L176.605 139.636L178.537 140.154L195.368 77.3389L193.436 76.8213ZM182.164 57.3817C190.66 59.6581 195.702 68.3638 193.436 76.8213L195.368 77.3389C197.922 67.8081 192.238 58.0104 182.682 55.4499L182.164 57.3817ZM43.618 36.6777C46.0563 27.5777 55.4382 22.1788 64.5782 24.6278L65.0958 22.696C54.8953 19.9627 44.4121 25.9868 41.6861 36.16L43.618 36.6777ZM26.7867 99.4928L43.618 36.6777L41.6861 36.16L24.8549 98.9751L26.7867 99.4928ZM38.9139 120.408C29.7739 117.959 24.3484 108.593 26.7867 99.4928L24.8549 98.9751C22.129 109.148 28.1957 119.607 38.3962 122.34L38.9139 120.408ZM156.812 151.999L38.9139 120.408L38.3962 122.34L156.294 153.931L156.812 151.999ZM177.772 139.949C175.334 149.049 165.952 154.448 156.812 151.999L156.294 153.931C166.495 156.664 176.978 150.64 179.704 140.467L177.772 139.949ZM194.603 77.1341L177.772 139.949L179.704 140.467L196.535 77.6517L194.603 77.1341ZM182.476 56.2185C191.616 58.6676 197.042 68.0341 194.603 77.1341L196.535 77.6517C199.261 67.4785 193.194 57.0199 182.994 54.2866L182.476 56.2185ZM64.5782 24.6278L182.476 56.2185L182.994 54.2866L65.0958 22.696L64.5782 24.6278ZM117.392 85.2744C117.25 85.4252 116.977 85.5036 116.73 85.3513L117.782 83.6499C117.151 83.2599 116.387 83.4237 115.936 83.9032L117.392 85.2744ZM116.73 85.3513C116.54 85.2334 116.429 85.0257 116.412 84.8385C116.401 84.7115 116.438 84.6611 116.408 84.7325C116.352 84.8687 116.201 85.1035 115.949 85.4164C115.711 85.7119 115.434 86.0147 115.183 86.2816C114.961 86.5177 114.7 86.7866 114.581 86.9325L116.128 88.1997C116.19 88.1238 116.353 87.9576 116.641 87.6509C116.9 87.3752 117.219 87.0277 117.506 86.6712C117.779 86.3321 118.084 85.9132 118.255 85.4997C118.34 85.2963 118.434 84.9971 118.404 84.6604C118.369 84.2637 118.163 83.8857 117.782 83.6499L116.73 85.3513ZM114.581 86.9325C112.858 89.0366 111.276 91.0693 109.564 93.1357L111.104 94.4117C112.788 92.38 114.479 90.2131 116.128 88.1997L114.581 86.9325ZM109.564 93.1357C106.992 96.2403 104.029 99.8116 100.651 102.641C97.2715 105.472 93.585 107.466 89.5845 107.569L89.6358 109.568C94.2822 109.449 98.3951 107.139 101.935 104.174C105.476 101.208 108.551 97.493 111.104 94.4117L109.564 93.1357ZM89.5845 107.569C87.3943 107.625 84.7714 106.99 82.5826 105.73C80.3929 104.469 78.7574 102.658 78.2944 100.426L76.336 100.832C76.9526 103.804 79.0861 106.024 81.5847 107.463C84.0842 108.902 87.069 109.634 89.6358 109.568L89.5845 107.569ZM78.2944 100.426C77.6654 97.3937 78.9302 95.1578 80.9231 93.9364C82.9627 92.6864 85.7961 92.4881 88.2379 93.737L89.1487 91.9564C86.0844 90.3891 82.5102 90.618 79.878 92.2312C77.1991 93.8731 75.528 96.9364 76.336 100.832L78.2944 100.426ZM88.2379 93.737C88.3294 93.7838 88.3931 93.8752 88.4071 93.9847C88.4198 94.0845 88.389 94.1682 88.3092 94.2329L89.5689 95.7864C90.9157 94.6943 90.5544 92.6754 89.1487 91.9564L88.2379 93.737ZM88.3092 94.2329C88.1996 94.3218 87.9648 94.4085 87.4366 94.5317C87.019 94.6291 86.3406 94.7623 85.8018 95.0618L86.7734 96.8099C87.0047 96.6813 87.3341 96.6093 87.8908 96.4795C88.3368 96.3755 89.0426 96.2131 89.5689 95.7864L88.3092 94.2329ZM85.8018 95.0618C84.2287 95.9361 82.7432 97.4273 81.9595 99.1583C81.1608 100.922 81.0673 103.024 82.4957 104.869L84.0772 103.645C83.2091 102.524 83.209 101.247 83.7814 99.9832C84.3688 98.6861 85.5322 97.4997 86.7734 96.8099L85.8018 95.0618ZM82.4957 104.869C84.3314 107.24 86.9691 108.104 89.5959 108.1C92.203 108.095 94.8727 107.243 96.9864 106.094L96.0317 104.337C94.1412 105.364 91.7969 106.096 89.5924 106.1C87.4077 106.103 85.4362 105.4 84.0772 103.645L82.4957 104.869ZM96.9864 106.094C101.498 103.644 104.981 100.129 108.135 96.4056C111.341 92.6216 114.102 88.7675 117.392 85.2744L115.936 83.9032C112.622 87.4213 109.655 91.5177 106.609 95.1128C103.512 98.7684 100.22 102.062 96.0317 104.337L96.9864 106.094ZM122.605 80.7725C122.821 80.6127 123.094 80.6315 123.317 80.8285C123.424 80.9229 123.473 81.0254 123.486 81.1012C123.496 81.1586 123.496 81.2487 123.4 81.3835L125.029 82.5434C125.875 81.3557 125.454 80.0484 124.642 79.3303C123.849 78.6292 122.528 78.3411 121.415 79.1651L122.605 80.7725ZM123.4 81.3835C123.007 81.9362 122.38 82.4707 121.61 83.0636C120.888 83.6193 120.008 84.2481 119.335 84.9019L120.729 86.3361C121.293 85.7886 122.014 85.2765 122.83 84.6483C123.598 84.0572 124.445 83.3646 125.029 82.5434L123.4 81.3835ZM119.335 84.9019C115.724 88.4116 112.091 92.9359 110.798 98.0938L112.738 98.5799C113.894 93.9662 117.205 89.7614 120.729 86.3361L119.335 84.9019ZM110.798 98.0938C110.423 99.5901 110.221 101.947 110.577 103.982C110.754 104.998 111.086 106.026 111.686 106.826C112.313 107.664 113.229 108.236 114.436 108.258L114.473 106.258C113.96 106.249 113.593 106.036 113.286 105.627C112.951 105.179 112.697 104.498 112.547 103.638C112.246 101.918 112.421 99.8459 112.738 98.5799L110.798 98.0938ZM114.436 108.258C114.419 108.258 114.338 108.255 114.228 108.212C114.111 108.165 113.933 108.06 113.809 107.846C113.545 107.393 113.786 107.014 113.799 106.994C113.864 106.894 113.842 106.978 113.584 107.077C113.162 107.238 112.362 107.326 111.399 106.698L110.307 108.373C111.831 109.366 113.304 109.324 114.296 108.945C114.745 108.774 115.216 108.486 115.479 108.079C115.591 107.906 115.858 107.39 115.536 106.838C115.229 106.313 114.675 106.262 114.473 106.258L114.436 108.258ZM111.399 106.698C111.21 106.575 110.958 106.247 110.731 105.572C110.514 104.928 110.369 104.112 110.284 103.226C110.113 101.457 110.192 99.5767 110.287 98.612L108.297 98.4162C108.193 99.4762 108.107 101.49 108.293 103.418C108.386 104.38 108.551 105.363 108.835 106.209C109.109 107.025 109.549 107.88 110.307 108.373L111.399 106.698ZM110.287 98.612C110.624 95.1929 112.27 91.7838 114.583 88.6768C116.89 85.5766 119.815 82.8386 122.605 80.7725L121.415 79.1651C118.496 81.3263 115.422 84.1985 112.978 87.4828C110.539 90.7603 108.681 94.5102 108.297 98.4162L110.287 98.612ZM100.656 94.3898C100.633 94.389 100.72 94.388 100.833 94.4247C100.976 94.4712 101.158 94.5762 101.287 94.7744L99.6104 95.8654C99.9579 96.3993 100.549 96.3872 100.584 96.3885L100.656 94.3898ZM101.287 94.7744C101.363 94.8913 101.414 95.03 101.428 95.1791C101.442 95.3235 101.418 95.446 101.389 95.5351C101.337 95.696 101.254 95.7842 101.244 95.7953C101.219 95.8222 101.233 95.8016 101.335 95.7365C101.422 95.6813 101.523 95.6243 101.63 95.5658C101.678 95.5394 101.736 95.508 101.782 95.4824C101.821 95.4606 101.891 95.4214 101.954 95.3783L100.826 93.7267C100.836 93.7196 100.816 93.7315 100.669 93.8121C100.559 93.8721 100.408 93.9561 100.261 94.0492C100.131 94.1323 99.9321 94.2671 99.7718 94.4414C99.6937 94.5263 99.5625 94.6861 99.4879 94.9149C99.3999 95.1846 99.399 95.5405 99.6104 95.8654L101.287 94.7744ZM101.954 95.3783C101.932 95.393 101.915 95.4037 101.905 95.4096C101.9 95.4126 101.896 95.4148 101.894 95.4159C101.892 95.4168 101.891 95.4177 101.892 95.4168C101.893 95.4164 101.896 95.4146 101.9 95.4123C101.904 95.41 101.91 95.4065 101.917 95.4022C101.931 95.3937 101.953 95.3803 101.978 95.3626L100.833 93.7232C100.856 93.7072 100.875 93.6955 100.886 93.6886C100.892 93.6851 100.897 93.6824 100.899 93.6808C100.902 93.6794 100.904 93.6783 100.903 93.6786C100.903 93.6786 100.903 93.6787 100.903 93.6787C100.903 93.6788 100.903 93.6788 100.903 93.6789C100.902 93.6791 100.902 93.6793 100.902 93.6795C100.901 93.68 100.899 93.6808 100.898 93.6818C100.894 93.6837 100.889 93.6867 100.883 93.6905C100.87 93.6979 100.85 93.7103 100.826 93.7267L101.954 95.3783ZM101.978 95.3626C101.702 95.556 101.438 95.5029 101.375 95.4861C101.295 95.465 101.252 95.4344 101.229 95.4149C101.22 95.4074 101.116 95.3248 101.057 95.1344C101.023 95.0251 100.996 94.8479 101.058 94.6427C101.124 94.4271 101.259 94.2768 101.386 94.1889L102.523 95.8345C102.715 95.7018 102.889 95.4979 102.972 95.2235C103.052 94.9595 103.022 94.7184 102.968 94.5434C102.868 94.2218 102.657 94.0014 102.508 93.8779C102.346 93.7424 102.132 93.6177 101.886 93.5526C101.656 93.4918 101.231 93.4449 100.833 93.7232L101.978 95.3626ZM101.386 94.1889C101.421 94.1647 101.437 94.1591 101.416 94.1689C101.4 94.1764 101.372 94.1883 101.33 94.2038C101.247 94.2347 101.139 94.2688 101.022 94.3006C100.906 94.3322 100.795 94.3578 100.708 94.3742C100.664 94.3824 100.633 94.3871 100.615 94.3892C100.589 94.3924 100.609 94.3881 100.656 94.3898L100.584 96.3885C100.764 96.395 100.958 96.3622 101.078 96.3396C101.226 96.3118 101.389 96.2735 101.548 96.2303C101.706 96.1872 101.873 96.1357 102.025 96.0791C102.156 96.0308 102.354 95.951 102.523 95.8345L101.386 94.1889ZM101.362 94.1943C101.596 94.1285 101.789 94.189 101.893 94.2433C101.994 94.296 102.06 94.3649 102.104 94.4316C102.145 94.4934 102.212 94.6238 102.206 94.8156C102.199 95.0478 102.082 95.2885 101.87 95.4356L100.729 93.7934C100.39 94.0288 100.218 94.3911 100.207 94.7536C100.197 95.0757 100.311 95.3451 100.433 95.53C100.631 95.8316 101.167 96.3268 101.904 96.1195L101.362 94.1943ZM101.87 95.4356C102.002 95.3442 102.206 95.2059 102.388 95.0751C102.56 94.9509 102.781 94.7858 102.944 94.6241L101.536 93.2043C101.497 93.2424 101.394 93.3261 101.22 93.4515C101.055 93.5703 100.889 93.6822 100.729 93.7934L101.87 95.4356ZM102.944 94.6241C103.73 93.8448 104.212 92.8 104.372 91.746L102.395 91.4464C102.292 92.1227 101.984 92.7595 101.536 93.2043L102.944 94.6241ZM104.372 91.746C104.413 91.4773 104.461 91.0279 104.393 90.5807C104.328 90.1608 104.102 89.4304 103.32 89.1355L102.614 91.0069C102.51 90.9677 102.443 90.8943 102.414 90.8465C102.394 90.8136 102.405 90.8157 102.416 90.885C102.426 90.9496 102.43 91.0375 102.425 91.1441C102.421 91.2484 102.409 91.3532 102.395 91.4464L104.372 91.746ZM103.32 89.1355C102.134 88.6886 101.064 89.2623 100.407 89.9097C99.7475 90.5595 99.2535 91.5018 99.1797 92.3962L101.173 92.5609C101.201 92.2181 101.435 91.7049 101.811 91.3345C102.189 90.9616 102.464 90.9502 102.614 91.0069L103.32 89.1355ZM99.1797 92.3962C99.1261 93.0444 99.2655 93.636 99.4398 94.1349C99.6075 94.615 99.8436 95.0994 99.9993 95.4486L101.826 94.6345C101.629 94.1917 101.459 93.8507 101.328 93.4754C101.203 93.1188 101.151 92.8249 101.173 92.5609L99.1797 92.3962ZM99.9993 95.4486C99.9043 95.2355 99.9517 94.9956 100.1 94.829C100.178 94.7407 100.306 94.65 100.481 94.6174C100.669 94.5826 100.839 94.6282 100.956 94.6993L99.9143 96.4067C100.536 96.7857 101.216 96.5836 101.595 96.1573C101.94 95.7693 102.068 95.1775 101.826 94.6345L99.9993 95.4486ZM100.956 94.6993C101.046 94.7543 101.077 94.8044 101.06 94.782C101.049 94.7674 101.026 94.733 100.993 94.6715C100.96 94.6122 100.927 94.5444 100.891 94.4681C100.864 94.4093 100.814 94.3 100.783 94.2355L98.9805 95.1024C99.013 95.17 99.1282 95.4306 99.2372 95.63C99.3285 95.7973 99.5444 96.181 99.9143 96.4067L100.956 94.6993ZM100.783 94.2355C100.283 93.1961 99.9757 92.1982 100.036 91.1632L98.0399 91.046C97.9509 92.5626 98.4107 93.9179 98.9805 95.1024L100.783 94.2355ZM100.036 91.1632C100.14 89.3968 101.694 88.2364 103.16 88.6106L103.655 86.6727C100.782 85.9397 98.2054 88.2261 98.0399 91.046L100.036 91.1632ZM103.16 88.6106C103.766 88.7652 104.157 89.1664 104.357 89.7182C104.567 90.2949 104.559 91.0331 104.291 91.7262L106.156 92.448C106.581 91.3496 106.628 90.1106 106.237 89.0352C105.837 87.935 104.973 87.0092 103.655 86.6727L103.16 88.6106ZM104.291 91.7262C103.817 92.9523 102.706 93.8162 101.362 94.1943L101.904 96.1195C103.706 95.6125 105.405 94.3911 106.156 92.448L104.291 91.7262ZM101.052 94.7809C101.128 94.9379 101.162 95.1896 101.037 95.4376C100.93 95.6495 100.767 95.7402 100.684 95.7733C100.537 95.8314 100.338 95.8317 100.165 95.6783L101.49 94.1804C101.021 93.7661 100.399 93.7346 99.9468 93.914C99.7101 94.0078 99.4228 94.1975 99.2515 94.5371C99.062 94.9129 99.0913 95.3212 99.2528 95.654L101.052 94.7809ZM100.165 95.6783C100.14 95.6563 100.156 95.6626 100.231 95.7867C100.247 95.8132 100.264 95.8409 100.283 95.8737C100.302 95.9049 100.323 95.9415 100.346 95.9782C100.389 96.05 100.447 96.1422 100.516 96.2344L102.117 95.0361C102.076 94.9803 102.052 94.9311 101.94 94.7478C101.86 94.6161 101.712 94.3766 101.49 94.1804L100.165 95.6783ZM100.516 96.2344C101.04 96.9342 101.701 97.558 102.509 97.996L103.462 96.2374C102.953 95.9616 102.502 95.5495 102.117 95.0361L100.516 96.2344ZM102.509 97.996C103.278 98.4123 104.211 98.6718 105.052 98.8048C105.88 98.9356 106.746 98.9639 107.381 98.8277L106.962 96.8721C106.668 96.935 106.079 96.9422 105.365 96.8293C104.665 96.7188 103.969 96.5121 103.462 96.2374L102.509 97.996ZM107.381 98.8277C107.386 98.8267 107.312 98.8382 107.219 98.7803C107.137 98.7287 107.099 98.6585 107.086 98.6108C107.073 98.5633 107.078 98.522 107.091 98.4914C107.107 98.4535 107.125 98.4532 107.093 98.4706L108.053 100.225C108.895 99.7648 109.232 98.869 109.013 98.0778C108.906 97.6907 108.662 97.3234 108.28 97.0846C107.888 96.8395 107.422 96.7735 106.962 96.8721L107.381 98.8277ZM107.093 98.4706C107.002 98.5203 106.763 98.5877 106.402 98.6038C106.059 98.6193 105.745 98.5819 105.574 98.5338L105.034 100.46C105.46 100.579 105.994 100.624 106.492 100.602C106.973 100.58 107.57 100.49 108.053 100.225L107.093 98.4706ZM105.629 98.5511C103.686 97.8828 101.949 96.6285 101.052 94.7809L99.2528 95.654C100.445 98.1101 102.688 99.6543 104.979 100.442L105.629 98.5511ZM105.726 98.5904C105.643 98.5513 105.695 98.5508 105.747 98.654C105.773 98.7052 105.79 98.7676 105.793 98.835C105.796 98.9012 105.784 98.9575 105.768 98.9992C105.738 99.0792 105.701 99.0945 105.725 99.0783C105.745 99.0647 105.802 99.0348 105.906 99.0223L105.665 97.0368C104.923 97.1267 104.177 97.5478 103.896 98.2957C103.748 98.689 103.752 99.1398 103.961 99.5536C104.162 99.9533 104.506 100.228 104.881 100.403L105.726 98.5904ZM105.906 99.0223C106.86 98.9067 109.035 98.6433 109.955 98.4485L109.54 96.492C108.731 96.6634 106.672 96.9148 105.665 97.0368L105.906 99.0223ZM109.955 98.4485C110.735 98.2833 111.532 98.0787 112.318 97.7943L111.638 95.9136C110.967 96.1562 110.266 96.3382 109.54 96.492L109.955 98.4485ZM112.318 97.7943C112.881 97.5906 113.447 97.3411 113.992 97.0246L112.987 95.2954C112.567 95.5392 112.114 95.7411 111.638 95.9136L112.318 97.7943ZM113.992 97.0246C115.621 96.0778 117.018 94.5983 117.58 92.6083L115.656 92.0646C115.266 93.4454 114.277 94.5459 112.987 95.2954L113.992 97.0246ZM117.58 92.6083C117.632 92.4258 117.741 92.0691 117.802 91.7101C117.857 91.3886 117.92 90.8389 117.698 90.3351L115.868 91.141C115.845 91.0879 115.853 91.0729 115.854 91.1305C115.855 91.1837 115.849 91.2637 115.831 91.3724C115.792 91.5995 115.723 91.8261 115.656 92.0646L117.58 92.6083ZM117.698 90.3351C117.498 89.88 117.141 89.2774 116.639 88.8932L115.423 90.481C115.541 90.5718 115.729 90.8251 115.868 91.141L117.698 90.3351ZM116.639 88.8932C116.17 88.5342 115.971 87.9992 116.015 87.5359C116.056 87.1035 116.303 86.7181 116.842 86.5434L116.225 84.641C114.882 85.0765 114.135 86.1693 114.024 87.3472C113.915 88.4941 114.405 89.7014 115.423 90.481L116.639 88.8932ZM116.842 86.5434C117.136 86.448 117.561 86.4875 118.103 86.7361C118.631 86.9784 119.147 87.3654 119.53 87.7435L120.935 86.3204C120.422 85.8145 119.719 85.2771 118.937 84.9183C118.168 84.5658 117.191 84.3274 116.225 84.641L116.842 86.5434ZM119.53 87.7435C120.757 88.956 120.979 90.6325 120.48 92.4027C119.977 94.1897 118.77 95.9048 117.427 96.9247L118.636 98.5176C120.323 97.2368 121.783 95.1542 122.406 92.9451C123.033 90.7192 122.84 88.2015 120.935 86.3204L119.53 87.7435ZM117.427 96.9247C116.074 97.9516 113.707 98.5889 111.261 98.836C110.062 98.9571 108.893 98.9796 107.893 98.9217C106.873 98.8626 106.098 98.7235 105.65 98.5584L104.958 100.435C105.679 100.701 106.685 100.855 107.778 100.918C108.89 100.983 110.165 100.957 111.462 100.826C114.006 100.569 116.832 99.8874 118.636 98.5176L117.427 96.9247ZM117.572 86.532C117.693 86.5784 117.87 86.7238 117.966 87.1897C118.06 87.6493 118.028 88.2482 117.877 88.8116C117.719 89.4013 117.484 89.7675 117.333 89.8942C117.275 89.9426 117.298 89.8999 117.39 89.9022C117.486 89.9047 117.485 89.9514 117.384 89.8547L116.001 91.2997C116.358 91.6411 116.81 91.8878 117.338 91.9016C117.862 91.9153 118.298 91.6951 118.618 91.4265C119.223 90.9193 119.605 90.0936 119.809 89.3279C120.021 88.5357 120.095 87.6155 119.925 86.7866C119.755 85.964 119.295 85.0515 118.289 84.6651L117.572 86.532ZM117.384 89.8547C116.611 89.1152 115.938 88.6737 115.272 88.3765C114.638 88.0934 114.015 87.9501 113.499 87.8054L112.959 89.731C113.591 89.9082 113.997 89.9977 114.457 90.2028C114.885 90.3937 115.37 90.6958 116.001 91.2997L117.384 89.8547ZM113.499 87.8054C112.58 87.5473 111.603 87.3751 110.758 87.1945C109.88 87.0069 109.081 86.7995 108.344 86.4637L107.515 88.2838C108.455 88.7121 109.426 88.9551 110.34 89.1503C111.286 89.3525 112.12 89.4955 112.959 89.731L113.499 87.8054ZM108.344 86.4637C106.875 85.7945 105.748 84.8096 105.162 83.6683C104.594 82.5617 104.487 81.2225 105.196 79.6719L103.377 78.8402C102.425 80.9228 102.523 82.906 103.383 84.5817C104.225 86.2227 105.75 87.4801 107.515 88.2838L108.344 86.4637ZM105.196 79.6719C105.525 78.9535 105.977 78.2607 106.499 77.7049L105.04 76.3365C104.356 77.0657 103.787 77.9445 103.377 78.8402L105.196 79.6719ZM106.499 77.7049C106.137 78.09 105.503 77.6848 105.695 77.2054L107.552 77.9488C108.186 76.3654 106.184 75.1173 105.04 76.3365L106.499 77.7049ZM105.695 77.2054C105.7 77.193 105.694 77.2124 105.651 77.2686C105.609 77.3234 105.551 77.3891 105.47 77.4745C105.43 77.5164 105.388 77.5588 105.342 77.6061C105.298 77.6517 105.248 77.7026 105.199 77.7538C105.104 77.8535 104.989 77.9785 104.886 78.1165L106.491 79.3108C106.574 79.1993 106.681 79.1031 106.918 78.8541C107.095 78.6682 107.392 78.3488 107.552 77.9488L105.695 77.2054ZM104.886 78.1165C104.182 79.0623 103.587 80.2509 103.475 81.5706L105.468 81.7396C105.538 80.9072 105.927 80.0674 106.491 79.3108L104.886 78.1165ZM103.475 81.5706C103.326 83.3254 104.256 84.6019 105.426 85.3814C106.567 86.1418 108.01 86.4959 109.223 86.492L109.217 84.492C108.344 84.4948 107.302 84.228 106.535 83.7171C105.797 83.2253 105.397 82.58 105.468 81.7396L103.475 81.5706ZM109.223 86.492C110.773 86.487 112.385 86.2102 113.665 86.1056C115.02 85.9948 116.271 86.0318 117.572 86.532L118.289 84.6651C116.588 84.0113 114.995 83.9902 113.502 84.1123C111.933 84.2405 110.691 84.4873 109.217 84.492L109.223 86.492ZM106.566 76.9087C106.814 77.1107 106.828 77.4054 106.764 77.5861C106.728 77.6846 106.658 77.7972 106.534 77.885C106.399 77.98 106.238 78.02 106.09 78.0053L106.287 76.0151C105.563 75.9433 105.056 76.4211 104.88 76.914C104.712 77.3851 104.782 78.0347 105.303 78.459L106.566 76.9087ZM106.09 78.0053C106.061 78.0025 106.078 78.0001 106.156 78.0313C106.227 78.0601 106.316 78.1035 106.426 78.1629C106.538 78.223 106.646 78.286 106.771 78.3576C106.886 78.4231 107.023 78.5011 107.155 78.5646L108.025 76.7639C107.844 76.6765 107.726 76.5918 107.377 76.4033C107.135 76.2725 106.719 76.0579 106.287 76.0151L106.09 78.0053ZM107.155 78.5646C106.922 78.4521 106.85 78.2284 106.86 78.0781C106.87 77.908 106.994 77.6758 107.25 77.6051L107.781 79.5333C108.471 79.3434 108.821 78.7504 108.856 78.2036C108.889 77.6766 108.638 77.06 108.025 76.7639L107.155 78.5646ZM107.25 77.6051C107.371 77.5718 107.462 77.5813 107.494 77.5863C107.527 77.5914 107.535 77.5972 107.512 77.5879C107.462 77.5678 107.373 77.5209 107.248 77.4373C106.996 77.269 106.755 77.0625 106.566 76.9087L105.303 78.459C105.44 78.5709 105.783 78.864 106.137 79.1004C106.315 79.2192 106.534 79.3509 106.769 79.4447C106.971 79.5255 107.356 79.6505 107.781 79.5333L107.25 77.6051ZM106.998 77.2599C107.071 77.3241 107.144 77.4203 107.189 77.5477C107.234 77.6733 107.238 77.7929 107.223 77.8888C107.197 78.0644 107.113 78.1561 107.084 78.1845C107.049 78.2188 106.996 78.2553 106.914 78.2748C106.82 78.2968 106.664 78.2995 106.507 78.207L107.525 76.4853C106.777 76.0429 106.029 76.4204 105.689 76.7515C105.498 76.9376 105.301 77.2219 105.246 77.5898C105.182 78.0085 105.321 78.4474 105.674 78.7589L106.998 77.2599ZM106.507 78.207C107.148 78.5859 108.208 78.9089 108.714 79.0253L109.163 77.0762C108.725 76.9755 107.901 76.7077 107.525 76.4853L106.507 78.207ZM108.714 79.0253C109.822 79.2801 110.993 79.3425 112.172 79.0836L111.744 77.1301C110.906 77.3138 110.041 77.2781 109.163 77.0762L108.714 79.0253ZM112.172 79.0836C112.523 79.0066 112.867 78.9037 113.2 78.7791L112.5 76.9057C112.25 76.999 111.997 77.0744 111.744 77.1301L112.172 79.0836ZM113.2 78.7791C113.636 78.6163 114.066 78.4171 114.369 78.129C114.535 77.9712 114.704 77.7478 114.783 77.449C114.864 77.1388 114.821 76.8498 114.73 76.6168C114.577 76.2229 114.259 75.9276 114.067 75.7571C113.858 75.5704 113.557 75.3332 113.326 75.1409L112.045 76.677C112.186 76.7939 112.324 76.9056 112.439 76.9997C112.559 77.0977 112.656 77.1785 112.737 77.2507C112.819 77.3241 112.867 77.3725 112.892 77.4024C112.921 77.4359 112.895 77.4144 112.867 77.3437C112.833 77.2571 112.804 77.1101 112.849 76.9403C112.89 76.7819 112.972 76.6973 112.991 76.6795C113.006 76.6647 112.988 76.6857 112.898 76.7338C112.811 76.7798 112.683 76.8373 112.5 76.9057L113.2 78.7791ZM113.326 75.1409C113.171 75.0115 113.108 74.8143 113.143 74.6232C113.176 74.4465 113.285 74.3092 113.486 74.2536L112.954 72.3258C110.895 72.8943 110.578 75.4539 112.045 76.677L113.326 75.1409ZM113.486 74.2536C113.572 74.2298 113.844 74.2429 114.3 74.5184C114.718 74.7716 115.101 75.1351 115.316 75.4196L116.912 74.2137C116.545 73.7285 115.972 73.1929 115.335 72.8072C114.734 72.4439 113.85 72.0784 112.954 72.3258L113.486 74.2536ZM115.316 75.4196C116.307 76.7303 115.663 78.6291 114.169 79.0155L114.67 80.9518C117.668 80.1762 118.684 76.5588 116.912 74.2137L115.316 75.4196ZM114.169 79.0155C113.205 79.2647 111.685 79.0868 110.155 78.6508C109.414 78.4399 108.718 78.1817 108.148 77.9218C107.557 77.6524 107.171 77.4124 106.998 77.2599L105.674 78.7589C106.071 79.1093 106.672 79.4471 107.318 79.7417C107.985 80.0458 108.777 80.3378 109.607 80.5743C111.218 81.0333 113.17 81.3397 114.67 80.9518L114.169 79.0155ZM113.833 74.2965C113.588 74.2116 113.676 74.0479 113.752 74.4498C113.811 74.7631 113.809 75.1975 113.747 75.625C113.68 76.0799 113.57 76.3585 113.524 76.4291C113.48 76.4962 113.614 76.2347 113.991 76.1959C114.203 76.1741 114.381 76.2387 114.496 76.314C114.549 76.3483 114.584 76.3816 114.604 76.4031C114.625 76.4247 114.635 76.4391 114.636 76.4407L112.974 77.5541C113.144 77.8074 113.545 78.2524 114.196 78.1854C114.761 78.1272 115.076 77.7105 115.198 77.5235C115.484 77.0861 115.646 76.4613 115.726 75.9136C115.81 75.3386 115.829 74.6714 115.717 74.0801C115.623 73.5774 115.35 72.7062 114.489 72.4072L113.833 74.2965ZM114.636 76.4407C113.834 75.244 112.269 74.4591 110.887 74.4664L110.898 76.4664C111.635 76.4625 112.56 76.9355 112.974 77.5541L114.636 76.4407ZM110.887 74.4664C109.816 74.4721 108.84 74.8963 108.024 75.3908C107.207 75.8859 106.452 76.5129 105.843 77.0127L107.111 78.5593C107.748 78.0371 108.388 77.5086 109.06 77.1015C109.733 76.694 110.342 76.4693 110.898 76.4664L110.887 74.4664ZM105.843 77.0127C106.023 76.8646 106.271 76.8869 106.422 76.9943C106.497 77.0475 106.566 77.1303 106.602 77.2414C106.641 77.3608 106.629 77.4731 106.6 77.5486L104.733 76.8326C104.15 78.3521 105.941 79.5183 107.111 78.5593L105.843 77.0127ZM106.6 77.5486C106.649 77.4223 106.789 77.1987 107.068 76.8909C107.333 76.5979 107.672 76.2848 108.041 75.9781C108.784 75.361 109.578 74.8291 109.984 74.5982L108.997 72.8588C108.476 73.1546 107.586 73.7562 106.763 74.4397C106.35 74.7833 105.935 75.1624 105.586 75.5482C105.249 75.9193 104.913 76.3614 104.733 76.8326L106.6 77.5486ZM109.984 74.5982C111.092 73.9696 112.609 73.8717 113.833 74.2965L114.489 72.4072C112.769 71.8101 110.648 71.922 108.997 72.8588L109.984 74.5982ZM105.757 77.8755C105.476 77.6695 105.466 77.3479 105.531 77.1682C105.566 77.0704 105.637 76.9586 105.762 76.8717C105.899 76.777 106.066 76.7368 106.222 76.7568L105.968 78.7406C106.714 78.8363 107.235 78.339 107.412 77.8472C107.584 77.3697 107.515 76.6844 106.94 76.2624L105.757 77.8755ZM106.222 76.7568C106.303 76.7672 106.277 76.7826 106.107 76.6785C105.966 76.5922 105.794 76.4668 105.608 76.3155C105.236 76.0125 104.879 75.6658 104.707 75.4819L103.244 76.845C103.475 77.0931 103.899 77.5033 104.346 77.8671C104.57 78.0492 104.818 78.2347 105.064 78.3848C105.28 78.5171 105.608 78.6945 105.968 78.7406L106.222 76.7568ZM104.707 75.4819C104.169 74.9042 103.628 73.9773 103.322 72.9725C103.012 71.9551 102.989 71.0143 103.276 70.3347L101.434 69.5557C100.893 70.8359 101.027 72.3039 101.409 73.5554C101.794 74.8195 102.477 76.0218 103.244 76.845L104.707 75.4819ZM103.276 70.3347C103.383 70.0815 103.542 69.8755 103.725 69.7381L102.522 68.1401C102.026 68.5132 101.662 69.0165 101.434 69.5557L103.276 70.3347ZM103.725 69.7381C103.964 69.5582 104.26 69.4841 104.551 69.523L104.816 67.5406C104.016 67.4339 103.191 67.637 102.522 68.1401L103.725 69.7381ZM104.551 69.523C105.061 69.5909 105.446 69.8878 105.798 70.4487C106.168 71.0393 106.417 71.7911 106.677 72.5862L108.578 71.965C108.336 71.2228 108.017 70.2232 107.492 69.3865C106.949 68.5201 106.114 67.7137 104.816 67.5406L104.551 69.523ZM106.677 72.5862C106.664 72.5456 106.639 72.4619 106.632 72.3511C106.626 72.2474 106.629 72.0325 106.76 71.8032C107.101 71.2024 107.731 71.3038 107.812 71.3202C107.956 71.3489 108.054 71.4037 108.068 71.4116C108.1 71.4289 108.121 71.443 108.126 71.4465C108.134 71.4518 108.134 71.4523 108.109 71.4313L106.829 72.968C106.812 72.9539 106.906 73.035 106.998 73.0978C107.024 73.1158 107.065 73.1428 107.115 73.1701C107.149 73.188 107.263 73.2498 107.419 73.2812C107.514 73.3001 108.153 73.3996 108.499 72.791C108.631 72.5578 108.635 72.3374 108.629 72.2267C108.621 72.1088 108.595 72.0163 108.578 71.965L106.677 72.5862ZM108.109 71.4313C107.884 71.244 107.647 71.0626 107.398 70.8929L106.272 72.5455C106.461 72.674 106.646 72.8156 106.829 72.968L108.109 71.4313ZM107.398 70.8929C107.163 70.7327 106.567 70.3672 105.934 70.1218C105.623 70.0014 105.233 69.8811 104.838 69.8642C104.449 69.8476 103.847 69.9306 103.443 70.4693L105.043 71.6694C104.879 71.888 104.672 71.8589 104.752 71.8624C104.828 71.8656 104.982 71.8978 105.211 71.9865C105.656 72.1593 106.115 72.4388 106.272 72.5455L107.398 70.8929ZM103.443 70.4693C102.752 71.3905 102.673 72.5376 102.82 73.4977C102.969 74.4681 103.371 75.4165 103.867 76.0971L105.484 74.9195C105.181 74.5044 104.899 73.8574 104.797 73.1941C104.694 72.5207 104.798 71.9961 105.043 71.6694L103.443 70.4693ZM103.867 76.0971C104.424 76.8619 105.126 77.4129 105.757 77.8755L106.94 76.2624C106.334 75.8184 105.848 75.4188 105.484 74.9195L103.867 76.0971ZM106.326 71.4542C106.27 71.3834 106.262 71.3473 106.309 71.4479C106.341 71.5169 106.383 71.6158 106.434 71.7435C106.536 71.9971 106.659 72.3266 106.785 72.6778L108.667 72.002C108.538 71.6416 108.406 71.2855 108.29 70.9982C108.233 70.8554 108.176 70.7201 108.123 70.6058C108.085 70.5231 108.006 70.3547 107.898 70.2175L106.326 71.4542ZM107.981 72.0693C107.751 71.7416 107.493 71.3802 107.231 71.0728C106.99 70.7896 106.649 70.4341 106.231 70.2409L105.392 72.0568C105.39 72.0558 105.494 72.1183 105.708 72.3699C105.902 72.5972 106.111 72.8871 106.344 73.2183L107.981 72.0693ZM106.046 72.121L107.346 71.8081L106.878 69.8636L105.577 70.1766L106.046 72.121ZM106.785 72.6778C106.784 72.6753 106.754 72.5928 106.784 72.4557C106.816 72.3128 106.919 72.1058 107.156 71.9774C107.396 71.847 107.635 71.8724 107.785 71.9329C107.925 71.9896 107.98 72.068 107.981 72.0693L106.344 73.2183C106.624 73.6178 107.32 74.1641 108.111 73.7347C108.877 73.3182 108.832 72.4603 108.667 72.002L106.785 72.6778ZM100.412 94.4694C100.441 94.4468 100.409 94.4748 100.247 94.5444C100.107 94.6042 99.9262 94.6717 99.7144 94.7448C99.2843 94.8933 98.8104 95.0371 98.3819 95.1747L98.9935 97.0789C99.3775 96.9555 99.9109 96.7928 100.367 96.6353C100.598 96.5554 100.831 96.47 101.034 96.3828C101.215 96.3054 101.457 96.1923 101.65 96.0401L100.412 94.4694ZM98.3925 96.778L98.3976 96.7766L97.8632 94.8493L97.858 94.8507L98.3925 96.778ZM98.3968 96.7768C98.9254 96.6307 99.5077 96.4699 100.014 96.3109C100.484 96.1631 101.009 95.982 101.349 95.7746L100.308 94.0668C100.208 94.1275 99.9165 94.2452 99.4145 94.4028C98.948 94.5493 98.4012 94.7006 97.864 94.849L98.3968 96.7768ZM97.9553 94.8289C96.0053 95.1651 95.0038 95.1549 94.288 94.8499L93.5039 96.6898C94.8137 97.2479 96.3501 97.1351 98.2951 96.7998L97.9553 94.8289ZM93.6642 92.7136C93.8565 92.2775 94.1266 91.9021 94.5639 91.4832L93.1806 90.0388C92.5919 90.6026 92.1516 91.1871 91.8343 91.9065L93.6642 92.7136ZM94.2812 88.7742C93.904 88.5676 93.4974 88.4158 93.0322 88.3651C92.5709 88.3148 92.1085 88.3699 91.625 88.5018L92.1513 90.4313C92.458 90.3476 92.6624 90.3366 92.8153 90.3533C92.9641 90.3695 93.1188 90.4179 93.3204 90.5283L94.2812 88.7742ZM90.0968 89.5826C89.6407 90.2144 89.3006 90.8208 89.1246 91.4535L91.0515 91.9894C91.1389 91.6752 91.3323 91.288 91.7184 90.7532L90.0968 89.5826ZM97.1928 97.4837L97.7395 97.3933L97.4133 95.4201L96.8666 95.5105L97.1928 97.4837ZM101.886 94.7365L101.684 94.4025L99.9732 95.439L100.176 95.773L101.886 94.7365ZM91.552 96.7015C93.2879 97.8834 95.4976 97.764 97.1928 97.4837L96.8666 95.5105C95.2405 95.7793 93.7263 95.7623 92.6776 95.0483L91.552 96.7015ZM91.625 88.5018C90.9746 88.6792 90.4521 89.0904 90.0968 89.5826L91.7184 90.7532C91.8449 90.578 92.0021 90.472 92.1513 90.4313L91.625 88.5018ZM94.5639 91.4832C94.9373 91.1256 95.1357 90.6273 95.1155 90.1294C95.0945 89.6125 94.83 89.0748 94.2812 88.7742L93.3204 90.5283C93.2632 90.497 93.2075 90.445 93.1685 90.378C93.1314 90.3143 93.119 90.2544 93.1172 90.2105C93.1139 90.1309 93.1428 90.075 93.1806 90.0388L94.5639 91.4832ZM94.288 94.8499C93.648 94.5772 93.269 93.6098 93.6642 92.7136L91.8343 91.9065C91.1146 93.5385 91.5747 95.8677 93.5039 96.6898L94.288 94.8499ZM89.1246 91.4535C88.512 93.6561 90.0373 95.6702 91.552 96.7015L92.6776 95.0483C91.444 94.2084 90.7819 92.9585 91.0515 91.9894L89.1246 91.4535ZM98.3819 95.1747C98.0448 95.283 97.7257 95.3685 97.4133 95.4201L97.7395 97.3933C98.1824 97.3201 98.6027 97.2044 98.9935 97.0789L98.3819 95.1747ZM110.355 89.1464C111.614 89.4208 112.641 89.6875 113.459 89.9696C114.286 90.2546 114.84 90.5358 115.192 90.812C115.524 91.0725 115.642 91.2988 115.682 91.5104C115.727 91.7496 115.698 92.1196 115.456 92.6999L117.302 93.4685C117.626 92.691 117.79 91.9065 117.648 91.1433C117.5 90.3524 117.051 89.7281 116.426 89.2381C115.821 88.764 115.029 88.3952 114.111 88.0788C113.185 87.7595 112.071 87.4735 110.781 87.1923L110.355 89.1464ZM110.578 89.1693L116.067 89.1137L116.047 87.1138L110.558 87.1694L110.578 89.1693ZM115.167 88.5698L117.403 92.9339L119.183 92.0217L116.947 87.6577L115.167 88.5698ZM117.991 91.5245L116.077 92.1309L116.681 94.0375L118.595 93.4311L117.991 91.5245ZM111.713 76.5767C111.969 76.7565 112.132 76.8696 112.255 76.9743C112.381 77.0808 112.36 77.0943 112.332 77.0269C112.314 76.9837 112.303 76.9301 112.303 76.8754C112.304 76.8241 112.315 76.7984 112.311 76.807C112.299 76.8404 112.236 76.9644 112.021 77.2068L113.515 78.5361C114.032 77.955 114.552 77.16 114.18 76.262C114.026 75.8894 113.757 75.6262 113.549 75.4491C113.338 75.2704 113.08 75.0931 112.863 74.9406L111.713 76.5767ZM113.071 78.8243L114.72 78.2995L114.114 76.3937L112.465 76.9185L113.071 78.8243ZM115.405 77.4983C115.472 77.0674 115.504 76.6277 115.435 76.2239C115.361 75.7903 115.159 75.3494 114.732 75.0393C114.339 74.7539 113.88 74.673 113.482 74.6578C113.077 74.6423 112.618 74.6918 112.127 74.7717L112.449 76.7457C112.894 76.6732 113.199 76.6484 113.406 76.6563C113.621 76.6645 113.622 76.7047 113.557 76.6577C113.459 76.5861 113.453 76.501 113.464 76.5603C113.479 76.6494 113.483 76.8395 113.429 77.1949L115.405 77.4983ZM110.851 58.0602C111.626 58.1856 112.362 57.6605 112.488 56.8792L110.514 56.5613C110.564 56.2451 110.861 56.0359 111.17 56.0859L110.851 58.0602ZM72.5278 81.5076C76.8831 65.2533 93.5214 55.2579 110.851 58.0602L111.17 56.0859C92.9283 53.136 75.2424 63.6491 70.5959 80.99L72.5278 81.5076ZM97.5841 122.135C78.9915 117.153 67.864 98.9129 72.5278 81.5076L70.5959 80.99C65.6196 99.562 77.5095 118.826 97.0665 124.067L97.5841 122.135ZM98.5943 123.882C98.799 123.118 98.3427 122.338 97.5841 122.135L97.0665 124.067C96.7645 123.986 96.5796 123.674 96.6624 123.365L98.5943 123.882ZM96.8457 124.891C97.6043 125.094 98.3895 124.647 98.5943 123.882L96.6624 123.365C96.7452 123.056 97.0614 122.878 97.3633 122.959L96.8457 124.891ZM69.7691 80.7684C64.6599 99.8359 76.8737 119.539 96.8457 124.891L97.3633 122.959C78.3549 117.866 66.9046 99.1861 71.7009 81.286L69.7691 80.7684ZM111.306 55.2436C92.6715 52.2303 74.5392 62.966 69.7691 80.7684L71.7009 81.286C76.1798 64.5708 93.264 54.3521 110.986 57.218L111.306 55.2436ZM112.488 56.8792C112.614 56.0984 112.081 55.3689 111.306 55.2436L110.986 57.218C110.678 57.1681 110.463 56.8769 110.514 56.5613L112.488 56.8792ZM122.251 58.6794C121.544 58.3386 120.69 58.6317 120.346 59.3433L122.146 60.2138C122.007 60.5012 121.664 60.6167 121.383 60.4811L122.251 58.6794ZM125.917 60.6944C124.742 59.9638 123.519 59.2903 122.251 58.6794L121.383 60.4811C122.586 61.0609 123.747 61.6998 124.861 62.3928L125.917 60.6944ZM126.375 62.6612C126.794 61.9899 126.585 61.1098 125.917 60.6944L124.861 62.3928C124.595 62.227 124.509 61.8732 124.678 61.6017L126.375 62.6612ZM124.409 63.1166C125.076 63.5312 125.956 63.3311 126.375 62.6612L124.678 61.6017C124.847 61.3315 125.2 61.2531 125.465 61.4182L124.409 63.1166ZM121.012 61.2493C122.187 61.8157 123.321 62.4398 124.409 63.1166L125.465 61.4182C124.316 60.7037 123.12 60.0451 121.88 59.4475L121.012 61.2493ZM120.346 59.3434C120.001 60.056 120.304 60.9081 121.012 61.2493L121.88 59.4475C122.162 59.5835 122.286 59.9254 122.146 60.2137L120.346 59.3434ZM143.14 96.4622C143.257 95.6803 142.717 94.9563 141.941 94.8388L141.642 96.8163C141.333 96.7696 141.114 96.4805 141.162 96.1645L143.14 96.4622ZM142.356 100.218C142.691 98.9684 142.951 97.715 143.14 96.4622L141.162 96.1645C140.985 97.3434 140.739 98.5233 140.424 99.7003L142.356 100.218ZM131.926 117.002C136.848 112.651 140.557 106.931 142.356 100.218L140.424 99.7003C138.732 106.017 135.243 111.401 130.601 115.504L131.926 117.002ZM129.913 116.881C130.435 117.468 131.336 117.524 131.926 117.002L130.601 115.504C130.839 115.294 131.198 115.318 131.407 115.552L129.913 116.881ZM130.033 114.865C129.441 115.389 129.389 116.292 129.913 116.881L131.407 115.552C131.617 115.788 131.597 116.152 131.358 116.364L130.033 114.865ZM139.597 99.4788C137.95 105.627 134.555 110.868 130.033 114.865L131.358 116.364C136.16 112.118 139.775 106.541 141.529 99.9964L139.597 99.4788ZM140.316 96.0365C140.143 97.1839 139.904 98.3326 139.597 99.4788L141.529 99.9964C141.856 98.7777 142.11 97.5555 142.293 96.3341L140.316 96.0365ZM141.941 94.8388C141.164 94.7213 140.433 95.2539 140.316 96.0365L142.293 96.3341C142.246 96.6508 141.951 96.8631 141.642 96.8163L141.941 94.8388ZM101.712 123.812C101.656 124.08 101.583 124.312 101.497 124.513L103.335 125.301C103.481 124.963 103.591 124.6 103.67 124.218L101.712 123.812ZM101.495 124.517C101.412 124.713 101.321 124.866 101.226 124.984L102.79 126.231C103.013 125.951 103.193 125.637 103.337 125.296L101.495 124.517ZM101.229 124.981C101.165 125.06 101.112 125.094 101.068 125.112L101.834 126.96C102.217 126.801 102.535 126.549 102.788 126.234L101.229 124.981ZM101.07 125.111C101.058 125.116 101.037 125.125 100.977 125.112L100.57 127.071C100.991 127.158 101.422 127.13 101.832 126.96L101.07 125.111ZM100.977 125.112C100.979 125.113 100.985 125.114 100.993 125.118C101.001 125.121 101.009 125.126 101.015 125.13C101.021 125.134 101.024 125.137 101.023 125.136C101.021 125.135 101.016 125.129 101.007 125.115L99.3421 126.224C99.625 126.649 100.04 126.96 100.57 127.071L100.977 125.112ZM101.01 125.119C100.955 125.037 100.905 124.915 100.883 124.727L98.8961 124.959C98.9487 125.409 99.0882 125.838 99.3394 126.219L101.01 125.119ZM100.883 124.732C100.861 124.527 100.87 124.303 100.922 124.054L98.9637 123.648C98.8732 124.084 98.8475 124.521 98.8955 124.953L100.883 124.732ZM100.922 124.054C100.978 123.784 101.05 123.555 101.132 123.363L99.2927 122.577C99.1506 122.909 99.0425 123.268 98.9637 123.648L100.922 124.054ZM101.129 123.369C101.212 123.18 101.301 123.037 101.389 122.93L99.8478 121.656C99.6227 121.928 99.4409 122.237 99.2954 122.571L101.129 123.369ZM101.387 122.933C101.449 122.858 101.498 122.831 101.533 122.817L100.811 120.952C100.426 121.101 100.106 121.345 99.8498 121.653L101.387 122.933ZM101.535 122.816C101.552 122.81 101.58 122.8 101.65 122.815L102.057 120.857C101.642 120.77 101.216 120.794 100.808 120.953L101.535 122.816ZM101.65 122.815C101.652 122.815 101.649 122.815 101.643 122.812C101.638 122.81 101.631 122.807 101.626 122.803C101.621 122.799 101.618 122.797 101.619 122.797C101.619 122.798 101.624 122.802 101.631 122.813L103.279 121.679C102.99 121.26 102.575 120.964 102.057 120.857L101.65 122.815ZM101.634 122.818C101.68 122.884 101.727 122.987 101.748 123.16L103.734 122.921C103.68 122.475 103.536 122.05 103.276 121.675L101.634 122.818ZM101.748 123.16C101.771 123.35 101.763 123.565 101.712 123.812L103.67 124.218C103.76 123.784 103.785 123.349 103.734 122.921L101.748 123.16ZM99.4483 123.514C99.389 123.799 99.3546 124.092 99.3438 124.389L101.342 124.462C101.349 124.271 101.371 124.091 101.407 123.92L99.4483 123.514ZM99.3435 124.397C99.335 124.696 99.3512 124.989 99.3947 125.274L101.372 124.973C101.348 124.816 101.337 124.644 101.343 124.454L99.3435 124.397ZM99.3947 125.274C99.4445 125.601 99.5482 125.926 99.7322 126.219L101.427 125.157C101.417 125.141 101.389 125.089 101.372 124.973L99.3947 125.274ZM99.7363 126.226C99.9473 126.557 100.28 126.85 100.748 126.947L101.155 124.989C101.228 125.004 101.295 125.035 101.348 125.075C101.398 125.113 101.42 125.146 101.423 125.151L99.7363 126.226ZM100.748 126.947C101.157 127.032 101.543 126.936 101.858 126.735L100.78 125.05C100.811 125.031 100.864 125.004 100.937 124.989C101.013 124.973 101.088 124.975 101.155 124.989L100.748 126.947ZM101.858 126.735C102.112 126.573 102.314 126.361 102.471 126.123L100.802 125.02C100.79 125.038 100.782 125.047 100.779 125.051C100.776 125.054 100.776 125.053 100.78 125.05L101.858 126.735ZM102.467 126.129C102.6 125.93 102.714 125.713 102.811 125.484L100.971 124.7C100.914 124.836 100.857 124.938 100.806 125.015L102.467 126.129ZM102.807 125.493C102.9 125.281 102.979 125.071 103.042 124.865L101.129 124.282C101.092 124.404 101.041 124.54 100.975 124.692L102.807 125.493ZM103.042 124.865C103.1 124.674 103.149 124.487 103.187 124.302L101.229 123.896C101.204 124.015 101.171 124.144 101.129 124.282L103.042 124.865ZM103.187 124.302C103.246 124.016 103.28 123.727 103.289 123.434L101.29 123.376C101.284 123.552 101.264 123.725 101.229 123.896L103.187 124.302ZM103.289 123.434C103.297 123.142 103.28 122.855 103.233 122.577L101.261 122.912C101.284 123.045 101.295 123.199 101.29 123.376L103.289 123.434ZM103.235 122.589C103.185 122.272 103.081 121.956 102.893 121.67L101.222 122.77C101.222 122.77 101.228 122.778 101.235 122.798C101.242 122.819 101.252 122.852 101.259 122.9L103.235 122.589ZM102.901 121.684C102.696 121.361 102.37 121.077 101.915 120.982L101.508 122.94C101.432 122.924 101.36 122.891 101.302 122.848C101.248 122.807 101.221 122.768 101.213 122.757L102.901 121.684ZM101.915 120.982C101.545 120.905 101.185 120.969 100.872 121.135L101.81 122.901C101.781 122.916 101.736 122.935 101.676 122.944C101.616 122.953 101.558 122.95 101.508 122.94L101.915 120.982ZM100.882 121.13C100.614 121.268 100.398 121.463 100.227 121.686L101.816 122.901C101.824 122.89 101.827 122.888 101.824 122.891C101.82 122.894 101.812 122.9 101.8 122.906L100.882 121.13ZM100.23 121.682C100.09 121.863 99.9689 122.064 99.8637 122.276L101.655 123.165C101.714 123.047 101.768 122.963 101.812 122.905L100.23 121.682ZM99.8592 122.286C99.7604 122.49 99.6759 122.698 99.6067 122.91L101.508 123.531C101.548 123.408 101.598 123.283 101.66 123.156L99.8592 122.286ZM99.6037 122.919C99.5415 123.116 99.4896 123.314 99.4483 123.514L101.407 123.92C101.434 123.789 101.469 123.656 101.511 123.521L99.6037 122.919ZM105.631 121.52C104.911 121.578 104.299 121.908 103.845 122.465L105.396 123.728C105.513 123.584 105.628 123.527 105.792 123.514L105.631 121.52ZM103.844 122.466C103.407 123.004 103.167 123.708 103.044 124.472L105.018 124.792C105.113 124.208 105.266 123.888 105.396 123.727L103.844 122.466ZM104.683 125.39C104.714 125.363 104.745 125.347 104.783 125.335L104.22 123.417C103.908 123.508 103.625 123.662 103.378 123.874L104.683 125.39ZM104.793 125.333C104.844 125.317 104.891 125.313 104.939 125.317L105.131 123.327C104.819 123.297 104.509 123.328 104.21 123.419L104.793 125.333ZM104.939 125.317C104.971 125.32 104.991 125.327 105.006 125.334L105.849 123.52C105.62 123.414 105.378 123.35 105.131 123.327L104.939 125.317ZM105.006 125.334C105.02 125.34 105.027 125.346 105.035 125.354L106.464 123.955C106.285 123.772 106.078 123.627 105.849 123.52L105.006 125.334ZM105.035 125.354C105.019 125.338 105.009 125.324 105.003 125.313C104.998 125.304 104.998 125.301 105.001 125.31L106.911 124.717C106.826 124.442 106.682 124.178 106.464 123.955L105.035 125.354ZM105.006 125.326C105.003 125.317 105.012 125.335 105.006 125.397L106.997 125.586C107.024 125.297 107.003 124.996 106.906 124.701L105.006 125.326ZM105.006 125.397C104.997 125.493 104.971 125.554 104.942 125.6L106.62 126.688C106.838 126.352 106.96 125.978 106.997 125.586L105.006 125.397ZM104.944 125.596C104.918 125.636 104.893 125.657 104.857 125.674L105.731 127.473C106.096 127.296 106.396 127.03 106.618 126.691L104.944 125.596ZM104.852 125.676C104.833 125.686 104.802 125.698 104.733 125.691L104.541 127.682C104.949 127.721 105.356 127.657 105.735 127.471L104.852 125.676ZM104.733 125.691C104.653 125.683 104.621 125.666 104.613 125.662C104.608 125.659 104.598 125.654 104.581 125.628L102.916 126.737C103.301 127.313 103.884 127.618 104.541 127.682L104.733 125.691ZM104.585 125.634C104.555 125.588 104.486 125.44 104.521 125.073L102.53 124.884C102.469 125.522 102.549 126.176 102.912 126.731L104.585 125.634ZM104.521 125.073C104.553 124.732 104.62 124.448 104.712 124.211L102.847 123.489C102.679 123.922 102.577 124.39 102.53 124.884L104.521 125.073ZM104.71 124.216C104.808 123.968 104.913 123.803 105.011 123.696L103.527 122.355C103.235 122.678 103.014 123.063 102.849 123.484L104.71 124.216ZM105.011 123.696C105.122 123.573 105.232 123.495 105.341 123.445L104.511 121.626C104.133 121.798 103.805 122.047 103.527 122.355L105.011 123.696ZM105.344 123.444C105.452 123.394 105.566 123.369 105.697 123.37L105.719 121.371C105.298 121.366 104.891 121.451 104.508 121.627L105.344 123.444ZM104.708 122.396L104.712 122.542L106.711 122.492L106.708 122.345L104.708 122.396ZM104.922 123.514C104.601 123.483 104.293 123.54 104.013 123.656L104.781 125.503C104.788 125.5 104.785 125.502 104.774 125.504C104.762 125.506 104.747 125.507 104.731 125.505L104.922 123.514ZM104.013 123.656C103.716 123.78 103.467 123.968 103.261 124.191L104.732 125.546C104.752 125.525 104.766 125.513 104.774 125.508C104.781 125.502 104.784 125.502 104.781 125.503L104.013 123.656ZM103.001 124.774L102.982 124.974L104.973 125.164L104.992 124.963L103.001 124.774ZM102.982 124.974C102.962 125.187 102.963 125.401 102.984 125.615L104.974 125.419C104.965 125.329 104.965 125.244 104.973 125.164L102.982 124.974ZM102.984 125.615C103.006 125.835 103.05 126.052 103.115 126.264L105.027 125.677C104.999 125.587 104.982 125.502 104.974 125.419L102.984 125.615ZM103.117 126.269C103.209 126.563 103.367 126.835 103.597 127.061L104.996 125.632C105.006 125.641 105.014 125.651 105.02 125.661C105.026 125.671 105.027 125.676 105.025 125.672L103.117 126.269ZM103.603 127.067C103.877 127.331 104.219 127.481 104.586 127.516L104.778 125.525C104.803 125.528 104.841 125.536 104.885 125.555C104.929 125.575 104.964 125.601 104.99 125.626L103.603 127.067ZM104.586 127.516C104.89 127.545 105.2 127.495 105.488 127.346L104.569 125.569C104.604 125.551 104.643 125.538 104.684 125.53C104.724 125.523 104.756 125.523 104.778 125.525L104.586 127.516ZM105.492 127.344C105.751 127.208 105.964 127.014 106.124 126.774L104.46 125.665C104.47 125.65 104.484 125.632 104.504 125.614C104.524 125.596 104.546 125.582 104.565 125.572L105.492 127.344ZM106.124 126.774C106.244 126.594 106.337 126.401 106.405 126.198L104.508 125.565C104.494 125.607 104.477 125.64 104.46 125.665L106.124 126.774ZM106.406 126.195C106.472 125.996 106.513 125.791 106.533 125.583L104.542 125.394C104.536 125.46 104.523 125.517 104.507 125.568L106.406 126.195ZM106.533 125.583C106.577 125.118 106.495 124.608 106.153 124.179L104.589 125.425C104.577 125.41 104.566 125.393 104.558 125.376C104.55 125.36 104.546 125.347 104.545 125.34C104.541 125.326 104.547 125.339 104.542 125.394L106.533 125.583ZM106.153 124.179C105.842 123.789 105.411 123.561 104.922 123.514L104.731 125.505C104.724 125.504 104.695 125.5 104.658 125.48C104.621 125.46 104.598 125.437 104.589 125.425L106.153 124.179ZM107.012 125.884L106.953 125.941L108.343 127.379L108.402 127.322L107.012 125.884ZM107.554 125.665C107.243 125.694 106.942 125.785 106.665 125.948L107.679 127.672C107.686 127.668 107.701 127.66 107.742 127.656L107.554 125.665ZM108.104 126.446C108.033 126.265 107.999 126.149 107.986 126.085L106.029 126.498C106.074 126.711 106.15 126.941 106.241 127.173L108.104 126.446ZM107.447 127.19C107.553 127.138 107.634 127.119 107.693 127.113L107.507 125.122C107.176 125.153 106.862 125.249 106.568 125.393L107.447 127.19ZM106.6 126.103C106.596 126.42 106.674 126.718 106.781 126.981L108.633 126.225C108.614 126.179 108.606 126.148 108.602 126.131C108.598 126.114 108.6 126.116 108.6 126.132L106.6 126.103ZM110.546 124.305C110.566 124.578 110.56 124.822 110.532 125.038L112.516 125.292C112.562 124.927 112.569 124.548 112.54 124.159L110.546 124.305ZM110.531 125.043C110.505 125.254 110.459 125.426 110.401 125.565L112.246 126.336C112.384 126.006 112.471 125.653 112.516 125.287L110.531 125.043ZM110.402 125.562C110.363 125.655 110.321 125.702 110.284 125.731L111.526 127.298C111.851 127.041 112.088 126.711 112.245 126.339L110.402 125.562ZM110.286 125.73C110.276 125.737 110.259 125.751 110.198 125.755L110.34 127.75C110.769 127.72 111.176 127.575 111.524 127.3L110.286 125.73ZM110.198 125.755C110.2 125.755 110.206 125.755 110.215 125.756C110.224 125.757 110.233 125.76 110.24 125.762C110.247 125.764 110.25 125.766 110.248 125.765C110.246 125.764 110.239 125.76 110.227 125.75L108.928 127.27C109.316 127.602 109.8 127.789 110.34 127.75L110.198 125.755ZM110.231 125.753C110.155 125.688 110.073 125.584 110 125.408L108.153 126.176C108.327 126.594 108.579 126.969 108.924 127.267L110.231 125.753ZM110.002 125.414C109.924 125.222 109.872 125.003 109.854 124.75L107.859 124.897C107.891 125.341 107.986 125.768 108.151 126.17L110.002 125.414ZM109.854 124.75C109.833 124.475 109.839 124.235 109.866 124.028L107.881 123.776C107.836 124.135 107.83 124.509 107.859 124.897L109.854 124.75ZM109.865 124.034C109.892 123.829 109.939 123.668 109.994 123.541L108.162 122.738C108.021 123.061 107.931 123.408 107.882 123.77L109.865 124.034ZM109.993 123.544C110.032 123.456 110.071 123.416 110.101 123.394L108.896 121.797C108.567 122.046 108.326 122.369 108.164 122.735L109.993 123.544ZM110.103 123.392C110.116 123.382 110.141 123.365 110.211 123.36L110.069 121.365C109.647 121.395 109.243 121.534 108.894 121.799L110.103 123.392ZM110.211 123.36C110.213 123.36 110.21 123.361 110.204 123.36C110.198 123.359 110.191 123.358 110.185 123.355C110.179 123.353 110.176 123.352 110.177 123.352C110.177 123.353 110.183 123.356 110.193 123.364L111.469 121.824C111.077 121.5 110.597 121.328 110.069 121.365L110.211 123.36ZM110.198 123.368C110.26 123.419 110.334 123.506 110.402 123.668L112.246 122.893C112.072 122.48 111.818 122.11 111.465 121.82L110.198 123.368ZM110.402 123.668C110.476 123.844 110.527 124.054 110.546 124.305L112.54 124.159C112.508 123.716 112.413 123.291 112.246 122.893L110.402 123.668ZM108.288 124.635C108.309 124.926 108.356 125.217 108.427 125.506L110.369 125.028C110.324 124.842 110.295 124.663 110.283 124.489L108.288 124.635ZM108.429 125.513C108.503 125.803 108.599 126.081 108.719 126.344L110.538 125.512C110.472 125.368 110.415 125.205 110.368 125.02L108.429 125.513ZM108.719 126.344C108.857 126.644 109.045 126.928 109.302 127.16L110.642 125.675C110.627 125.662 110.587 125.619 110.538 125.512L108.719 126.344ZM109.308 127.165C109.601 127.426 110.001 127.617 110.477 127.583L110.335 125.588C110.409 125.583 110.483 125.595 110.544 125.619C110.603 125.641 110.633 125.667 110.637 125.67L109.308 127.165ZM110.477 127.583C110.894 127.553 111.24 127.356 111.488 127.075L109.99 125.75C110.014 125.723 110.058 125.682 110.125 125.648C110.194 125.612 110.267 125.593 110.335 125.588L110.477 127.583ZM111.488 127.075C111.688 126.85 111.824 126.59 111.91 126.319L110.003 125.716C109.996 125.737 109.991 125.747 109.989 125.751C109.987 125.755 109.987 125.754 109.99 125.75L111.488 127.075ZM111.908 126.325C111.981 126.098 112.031 125.858 112.062 125.611L110.078 125.362C110.059 125.508 110.033 125.622 110.005 125.71L111.908 126.325ZM112.061 125.62C112.092 125.391 112.11 125.168 112.114 124.952L110.114 124.917C110.112 125.044 110.101 125.189 110.079 125.353L112.061 125.62ZM112.114 124.952C112.118 124.753 112.113 124.559 112.099 124.371L110.104 124.518C110.113 124.639 110.117 124.772 110.114 124.917L112.114 124.952ZM112.099 124.371C112.078 124.08 112.031 123.792 111.959 123.508L110.02 124C110.064 124.171 110.092 124.344 110.104 124.518L112.099 124.371ZM111.959 123.508C111.887 123.225 111.792 122.954 111.67 122.699L109.866 123.561C109.924 123.683 109.977 123.828 110.02 124L111.959 123.508ZM111.675 122.71C111.541 122.419 111.354 122.143 111.095 121.92L109.789 123.434C109.789 123.435 109.796 123.441 109.809 123.459C109.822 123.477 109.84 123.506 109.861 123.551L111.675 122.71ZM111.107 121.931C110.822 121.676 110.431 121.492 109.967 121.525L110.109 123.52C110.031 123.525 109.954 123.513 109.886 123.487C109.822 123.462 109.787 123.433 109.776 123.424L111.107 121.931ZM109.967 121.525C109.59 121.551 109.261 121.711 109.005 121.957L110.391 123.399C110.367 123.422 110.328 123.452 110.273 123.477C110.217 123.503 110.16 123.516 110.109 123.52L109.967 121.525ZM109.013 121.949C108.793 122.155 108.638 122.402 108.535 122.664L110.396 123.396C110.401 123.384 110.404 123.381 110.401 123.385C110.398 123.389 110.392 123.397 110.383 123.406L109.013 121.949ZM108.537 122.659C108.452 122.872 108.391 123.099 108.348 123.331L110.315 123.695C110.339 123.564 110.367 123.469 110.394 123.401L108.537 122.659ZM108.346 123.341C108.307 123.565 108.283 123.788 108.275 124.011L110.273 124.086C110.278 123.958 110.292 123.824 110.316 123.685L108.346 123.341ZM108.274 124.021C108.269 124.227 108.273 124.432 108.288 124.635L110.283 124.489C110.273 124.355 110.27 124.217 110.274 124.077L108.274 124.021ZM113.667 127.171C114.346 126.924 114.872 126.462 115.184 125.805L113.377 124.948C113.302 125.108 113.191 125.216 112.982 125.292L113.667 127.171ZM115.184 125.805C115.495 125.151 115.527 124.4 115.408 123.641L113.432 123.951C113.515 124.482 113.455 124.785 113.377 124.948L115.184 125.805ZM113.54 123.32C113.558 123.287 113.572 123.275 113.565 123.281C113.558 123.288 113.537 123.308 113.495 123.338L114.646 124.974C114.885 124.805 115.133 124.578 115.299 124.272L113.54 123.32ZM113.502 123.333C113.436 123.378 113.396 123.389 113.377 123.393L113.735 125.361C114.068 125.3 114.37 125.164 114.639 124.979L113.502 123.333ZM113.377 123.393C113.322 123.403 113.29 123.402 113.274 123.4L113.041 125.386C113.277 125.414 113.509 125.402 113.735 125.361L113.377 123.393ZM113.278 123.4C113.277 123.4 113.267 123.399 113.246 123.388L112.345 125.174C112.56 125.282 112.791 125.356 113.037 125.386L113.278 123.4ZM113.254 123.392C113.329 123.431 113.35 123.473 113.336 123.451L111.647 124.523C111.807 124.774 112.03 125.011 112.337 125.17L113.254 123.392ZM113.336 123.451C113.333 123.447 113.309 123.406 113.289 123.3L111.323 123.663C111.377 123.958 111.477 124.254 111.647 124.523L113.336 123.451ZM113.289 123.3C113.27 123.196 113.277 123.124 113.293 123.069L111.365 122.534C111.262 122.908 111.254 123.289 111.323 123.663L113.289 123.3ZM113.29 123.077C113.303 123.032 113.32 123.006 113.349 122.979L111.974 121.526C111.682 121.803 111.478 122.142 111.368 122.527L113.29 123.077ZM113.345 122.982C113.355 122.973 113.374 122.956 113.44 122.944L113.082 120.976C112.672 121.051 112.292 121.228 111.977 121.523L113.345 122.982ZM113.44 122.944C113.478 122.937 113.505 122.936 113.52 122.936C113.536 122.937 113.543 122.938 113.544 122.939C113.545 122.939 113.547 122.94 113.55 122.941C113.553 122.943 113.562 122.949 113.577 122.963L114.961 121.52C114.437 121.017 113.768 120.851 113.082 120.976L113.44 122.944ZM113.58 122.966C113.656 123.038 113.768 123.2 113.835 123.564L115.802 123.201C115.684 122.564 115.43 121.965 114.958 121.517L113.58 122.966ZM113.835 123.564C113.877 123.793 113.89 124.003 113.878 124.197L115.874 124.319C115.897 123.95 115.871 123.576 115.802 123.201L113.835 123.564ZM113.878 124.203C113.867 124.402 113.833 124.559 113.789 124.682L115.67 125.362C115.79 125.029 115.855 124.676 115.875 124.313L113.878 124.203ZM113.787 124.689C113.735 124.834 113.671 124.954 113.598 125.057L115.222 126.224C115.413 125.958 115.562 125.667 115.672 125.356L113.787 124.689ZM113.598 125.057C113.529 125.153 113.454 125.225 113.375 125.28L114.516 126.922C114.791 126.731 115.026 126.496 115.222 126.224L113.598 125.057ZM113.375 125.28C113.292 125.337 113.205 125.377 113.11 125.403L113.627 127.335C113.946 127.25 114.244 127.111 114.516 126.922L113.375 125.28ZM114.322 126.069L114.279 125.932L112.371 126.532L112.414 126.669L114.322 126.069ZM113.855 125.096C114.22 125.029 114.526 124.854 114.774 124.64L113.468 123.126C113.446 123.144 113.438 123.148 113.443 123.145C113.449 123.142 113.468 123.133 113.497 123.128L113.855 125.096ZM114.776 124.638C114.943 124.494 115.242 124.21 115.345 123.798L113.405 123.312C113.423 123.24 113.448 123.187 113.465 123.154C113.483 123.121 113.499 123.1 113.504 123.092C113.515 123.079 113.507 123.091 113.465 123.128L114.776 124.638ZM115.352 123.341C115.322 123.204 115.287 123.069 115.249 122.937L113.331 123.505C113.355 123.587 113.378 123.675 113.398 123.769L115.352 123.341ZM115.249 122.937C115.209 122.802 115.161 122.664 115.107 122.524L113.239 123.238C113.277 123.338 113.308 123.427 113.331 123.505L115.249 122.937ZM115.107 122.524C115.038 122.342 114.949 122.165 114.836 122L113.185 123.128C113.197 123.146 113.217 123.18 113.239 123.238L115.107 122.524ZM114.849 122.019C114.751 121.868 114.637 121.727 114.506 121.599L113.108 123.029C113.127 123.047 113.149 123.073 113.172 123.109L114.849 122.019ZM114.506 121.599C114.318 121.414 114.09 121.278 113.834 121.202L113.26 123.118C113.233 123.11 113.204 123.097 113.176 123.081C113.148 123.064 113.125 123.046 113.108 123.029L114.506 121.599ZM113.858 121.209C113.59 121.121 113.317 121.111 113.059 121.158L113.417 123.126C113.377 123.133 113.311 123.134 113.236 123.11L113.858 121.209ZM113.059 121.158C112.772 121.21 112.486 121.335 112.246 121.56L113.613 123.019C113.577 123.053 113.538 123.079 113.5 123.097C113.462 123.115 113.433 123.123 113.417 123.126L113.059 121.158ZM112.256 121.55C112.038 121.749 111.885 121.997 111.801 122.271L113.713 122.857C113.706 122.882 113.693 122.913 113.672 122.945C113.652 122.978 113.628 123.006 113.603 123.029L112.256 121.55ZM111.797 122.285C111.74 122.481 111.711 122.68 111.705 122.88L113.705 122.936C113.706 122.894 113.712 122.864 113.718 122.843L111.797 122.285ZM111.705 122.893C111.702 123.085 111.72 123.275 111.755 123.463L113.722 123.1C113.708 123.028 113.704 122.969 113.705 122.923L111.705 122.893ZM111.755 123.463C111.833 123.887 112.004 124.35 112.375 124.697L113.741 123.236C113.772 123.265 113.777 123.283 113.768 123.264C113.758 123.243 113.739 123.192 113.722 123.1L111.755 123.463ZM112.384 124.706C112.823 125.105 113.368 125.184 113.855 125.096L113.497 123.128C113.475 123.132 113.502 123.124 113.559 123.137C113.623 123.152 113.685 123.185 113.732 123.228L112.384 124.706ZM116.198 124.861L116.156 124.932L117.884 125.94L117.925 125.869L116.198 124.861ZM116.661 124.502C116.37 124.614 116.105 124.783 115.882 125.015L117.323 126.401C117.328 126.396 117.341 126.384 117.379 126.369L116.661 124.502ZM117.402 125.107C117.284 124.951 117.22 124.848 117.19 124.79L115.417 125.716C115.518 125.909 115.653 126.109 115.804 126.309L117.402 125.107ZM116.969 126C117.057 125.921 117.129 125.881 117.185 125.86L116.469 123.992C116.159 124.111 115.883 124.289 115.638 124.506L116.969 126ZM115.861 125.182C115.942 125.488 116.097 125.754 116.272 125.978L117.851 124.751C117.82 124.712 117.804 124.684 117.796 124.669C117.787 124.654 117.79 124.654 117.794 124.669L115.861 125.182ZM117.922 125.272L117.942 125.292L119.391 123.913L119.371 123.892L117.922 125.272ZM118.952 125.561C119.109 125.514 119.258 125.468 119.397 125.424L118.785 123.52C118.661 123.559 118.526 123.601 118.381 123.645L118.952 125.561ZM119.397 125.423C119.538 125.378 119.672 125.333 119.797 125.289L119.132 123.403C119.026 123.44 118.91 123.479 118.784 123.52L119.397 125.423ZM119.797 125.289C119.972 125.227 120.14 125.158 120.298 125.08L119.414 123.286C119.336 123.324 119.243 123.364 119.132 123.403L119.797 125.289ZM120.296 125.081C120.487 124.987 120.669 124.87 120.833 124.723L119.501 123.232C119.489 123.242 119.464 123.262 119.415 123.285L120.296 125.081ZM120.828 124.727C121.01 124.567 121.159 124.377 121.271 124.161L119.497 123.238C119.497 123.238 119.498 123.236 119.501 123.233C119.503 123.23 119.505 123.228 119.505 123.227L120.828 124.727ZM121.271 124.161C121.398 123.917 121.46 123.659 121.483 123.413L119.492 123.228C119.489 123.251 119.487 123.262 119.486 123.263C119.486 123.264 119.488 123.254 119.497 123.238L121.271 124.161ZM120.435 124.319L120.527 124.324L120.631 122.326L120.539 122.322L120.435 124.319ZM119.581 123.389C119.594 123.596 119.604 123.743 119.61 123.812L121.602 123.635C121.599 123.596 121.591 123.478 121.577 123.261L119.581 123.389ZM119.61 123.812C119.612 123.836 119.617 123.913 119.622 124.064L121.621 123.991C121.616 123.845 121.61 123.719 121.602 123.635L119.61 123.812ZM119.623 124.076C119.626 124.148 119.629 124.202 119.63 124.241C119.631 124.26 119.631 124.274 119.631 124.282C119.631 124.293 119.631 124.288 119.631 124.276L121.63 124.335C121.633 124.249 121.627 124.112 121.62 123.978L119.623 124.076ZM119.631 124.308C119.631 124.313 119.631 124.313 119.631 124.308C119.631 124.303 119.632 124.289 119.635 124.268L121.62 124.512C121.629 124.432 121.631 124.357 121.631 124.303L119.631 124.308ZM120.356 123.428C120.285 123.448 120.197 123.474 120.095 123.506L120.689 125.416C120.784 125.386 120.853 125.366 120.898 125.353L120.356 123.428ZM120.095 123.506C119.995 123.537 119.888 123.57 119.776 123.606L120.378 125.513C120.488 125.478 120.592 125.446 120.689 125.416L120.095 123.506ZM119.776 123.606C119.659 123.643 119.542 123.681 119.426 123.72L120.061 125.616C120.166 125.581 120.272 125.547 120.378 125.513L119.776 123.606ZM119.427 123.719C119.314 123.757 119.214 123.791 119.126 123.822L119.792 125.708C119.866 125.682 119.955 125.652 120.06 125.616L119.427 123.719ZM119.126 123.822C119.078 123.839 118.86 123.918 118.483 124.055L119.167 125.935C119.551 125.795 119.755 125.721 119.792 125.708L119.126 123.822ZM118.483 124.055C118.1 124.195 117.9 124.267 117.869 124.278L118.535 126.164C118.577 126.149 118.792 126.071 119.167 125.935L118.483 124.055ZM118.837 124.449L118.745 124.373L117.475 125.918L117.567 125.994L118.837 124.449ZM119.014 125.572C119.423 124.707 119.69 124.122 119.782 123.877L117.91 123.173C117.854 123.323 117.63 123.819 117.205 124.719L119.014 125.572ZM119.782 123.877C119.866 123.655 119.938 123.437 119.995 123.224L118.065 122.701C118.026 122.844 117.975 123.001 117.91 123.173L119.782 123.877ZM119.995 123.227C120.055 123.005 120.1 122.782 120.117 122.563L118.123 122.407C118.119 122.465 118.104 122.559 118.066 122.698L119.995 123.227ZM120.117 122.572C120.127 122.449 120.133 122.328 120.132 122.209L118.132 122.234C118.132 122.272 118.13 122.326 118.124 122.399L120.117 122.572ZM120.132 122.225C120.132 122.096 120.123 121.967 120.103 121.838L118.127 122.147C118.129 122.162 118.132 122.186 118.132 122.219L120.132 122.225ZM120.107 121.864C120.091 121.746 120.068 121.63 120.037 121.515L118.106 122.036C118.114 122.065 118.12 122.093 118.123 122.121L120.107 121.864ZM120.037 121.513C120.009 121.411 119.976 121.308 119.939 121.204L118.055 121.875C118.078 121.939 118.095 121.993 118.107 122.038L120.037 121.513ZM119.939 121.204C119.861 120.986 119.749 120.762 119.582 120.562L118.049 121.847C118.037 121.832 118.033 121.824 118.036 121.829C118.038 121.834 118.045 121.848 118.055 121.875L119.939 121.204ZM119.586 120.567C119.429 120.377 119.227 120.21 118.975 120.098L118.166 121.927C118.095 121.896 118.057 121.856 118.045 121.842L119.586 120.567ZM118.988 120.104C118.736 119.989 118.473 119.946 118.217 119.96L118.321 121.957C118.284 121.959 118.222 121.953 118.153 121.922L118.988 120.104ZM118.234 119.959C118.006 119.967 117.788 120.015 117.586 120.086L118.252 121.972C118.296 121.957 118.312 121.957 118.304 121.958L118.234 119.959ZM117.586 120.086C117.442 120.137 117.312 120.206 117.198 120.277L118.261 121.971C118.271 121.965 118.276 121.962 118.275 121.963C118.274 121.963 118.266 121.967 118.252 121.972L117.586 120.086ZM117.194 120.28C117.081 120.351 116.976 120.431 116.878 120.517L118.196 122.021C118.223 121.997 118.247 121.98 118.266 121.968L117.194 120.28ZM116.894 120.503C116.79 120.59 116.694 120.685 116.605 120.787L118.115 122.099C118.135 122.076 118.156 122.055 118.179 122.035L116.894 120.503ZM116.597 120.796C116.513 120.896 116.433 121.005 116.364 121.124L118.095 122.126C118.095 122.127 118.097 122.123 118.101 122.117C118.106 122.111 118.113 122.101 118.123 122.09L116.597 120.796ZM117.644 120.715L117.53 120.663L116.7 122.483L116.815 122.535L117.644 120.715ZM118.028 121.981C118.044 121.946 118.063 121.914 118.085 121.884L116.485 120.684C116.373 120.834 116.278 120.994 116.202 121.164L118.028 121.981ZM118.079 121.891C118.11 121.85 118.142 121.817 118.173 121.79L116.849 120.29C116.717 120.407 116.597 120.537 116.49 120.677L118.079 121.891ZM118.173 121.79C118.211 121.756 118.249 121.729 118.286 121.706L117.251 119.995C117.108 120.081 116.974 120.18 116.849 120.29L118.173 121.79ZM118.283 121.708C118.323 121.684 118.354 121.67 118.377 121.662L117.711 119.776C117.55 119.833 117.398 119.907 117.254 119.993L118.283 121.708ZM118.377 121.662C118.456 121.634 118.503 121.63 118.522 121.629L118.494 119.63C118.222 119.633 117.959 119.689 117.711 119.776L118.377 121.662ZM118.535 121.629C118.546 121.629 118.548 121.63 118.542 121.629C118.537 121.628 118.527 121.626 118.514 121.62L119.296 119.779C119.03 119.666 118.753 119.623 118.482 119.63L118.535 121.629ZM118.524 121.624C118.511 121.619 118.499 121.612 118.488 121.604C118.477 121.596 118.471 121.59 118.47 121.588L119.976 120.273C119.79 120.059 119.558 119.888 119.287 119.775L118.524 121.624ZM118.478 121.598C118.47 121.588 118.483 121.599 118.503 121.655L120.387 120.983C120.296 120.728 120.162 120.48 119.968 120.263L118.478 121.598ZM118.503 121.655C118.516 121.691 118.525 121.731 118.529 121.781L120.524 121.642C120.508 121.418 120.463 121.197 120.387 120.983L118.503 121.655ZM118.529 121.781C118.534 121.856 118.532 121.935 118.523 122.019L120.511 122.239C120.533 122.04 120.538 121.841 120.524 121.642L118.529 121.781ZM118.522 122.025C118.513 122.113 118.497 122.203 118.473 122.297L120.408 122.8C120.457 122.613 120.492 122.423 120.512 122.232L118.522 122.025ZM118.47 122.308C118.441 122.425 118.408 122.538 118.373 122.647L120.273 123.269C120.325 123.113 120.37 122.953 120.411 122.79L118.47 122.308ZM118.375 122.638C118.338 122.75 118.299 122.854 118.259 122.951L120.108 123.713C120.166 123.573 120.22 123.428 120.27 123.278L118.375 122.638ZM118.259 122.951C118.212 123.065 118.168 123.168 118.129 123.26L119.966 124.05C120.01 123.948 120.058 123.835 120.108 123.713L118.259 122.951ZM118.13 123.257L117.921 123.739L119.755 124.535L119.965 124.053L118.13 123.257ZM117.924 123.731C117.84 123.921 117.772 124.08 117.721 124.204L119.572 124.96C119.612 124.863 119.671 124.725 119.752 124.543L117.924 123.731ZM122.617 120.907C122.737 121.154 122.822 121.383 122.877 121.594L124.813 121.093C124.72 120.736 124.586 120.382 124.414 120.031L122.617 120.907ZM122.878 121.599C122.932 121.805 122.953 121.982 122.951 122.133L124.951 122.162C124.956 121.804 124.906 121.445 124.811 121.088L122.878 121.599ZM122.951 122.13C122.949 122.231 122.928 122.29 122.905 122.33L124.64 123.323C124.846 122.963 124.944 122.569 124.951 122.165L122.951 122.13ZM122.906 122.328C122.9 122.338 122.89 122.356 122.836 122.383L123.706 124.183C124.093 123.996 124.418 123.71 124.639 123.325L122.906 122.328ZM122.836 122.383C122.838 122.382 122.843 122.379 122.852 122.377C122.861 122.375 122.87 122.373 122.878 122.373C122.885 122.373 122.888 122.374 122.887 122.373C122.885 122.373 122.876 122.371 122.861 122.366L122.217 124.26C122.699 124.424 123.218 124.419 123.706 124.183L122.836 122.383ZM122.866 122.368C122.771 122.335 122.656 122.269 122.522 122.132L121.091 123.529C121.408 123.854 121.78 124.109 122.212 124.258L122.866 122.368ZM122.526 122.136C122.382 121.987 122.252 121.802 122.141 121.574L120.343 122.451C120.538 122.851 120.785 123.212 121.087 123.525L122.526 122.136ZM122.141 121.574C122.019 121.325 121.936 121.1 121.883 120.897L119.948 121.402C120.039 121.751 120.173 122.101 120.343 122.451L122.141 121.574ZM121.885 120.904C121.834 120.703 121.817 120.536 121.821 120.397L119.822 120.333C119.811 120.686 119.856 121.042 119.946 121.395L121.885 120.904ZM121.821 120.4C121.825 120.304 121.846 120.253 121.865 120.222L120.153 119.187C119.94 119.54 119.837 119.93 119.822 120.33L121.821 120.4ZM121.866 120.219C121.875 120.206 121.891 120.182 121.954 120.151L121.083 118.35C120.702 118.535 120.378 118.813 120.152 119.189L121.866 120.219ZM121.954 120.151C121.955 120.15 121.952 120.152 121.946 120.153C121.94 120.155 121.933 120.156 121.927 120.156C121.92 120.157 121.917 120.156 121.918 120.156C121.919 120.157 121.925 120.158 121.938 120.162L122.553 118.259C122.07 118.102 121.56 118.12 121.083 118.35L121.954 120.151ZM121.943 120.163C122.021 120.188 122.122 120.242 122.245 120.367L123.671 118.965C123.356 118.645 122.983 118.395 122.548 118.257L121.943 120.163ZM122.245 120.367C122.38 120.504 122.506 120.681 122.617 120.907L124.414 120.031C124.22 119.632 123.974 119.272 123.671 118.965L122.245 120.367ZM120.644 122.049C120.772 122.311 120.924 122.564 121.097 122.806L122.723 121.641C122.612 121.486 122.518 121.329 122.442 121.172L120.644 122.049ZM121.102 122.812C121.278 123.054 121.47 123.277 121.679 123.476L123.06 122.03C122.945 121.92 122.831 121.789 122.718 121.635L121.102 122.812ZM121.679 123.476C121.918 123.705 122.198 123.898 122.523 124.019L123.219 122.144C123.2 122.137 123.146 122.111 123.06 122.03L121.679 123.476ZM122.53 124.021C122.898 124.155 123.341 124.185 123.771 123.977L122.901 122.176C122.968 122.144 123.041 122.128 123.107 122.127C123.17 122.127 123.207 122.139 123.212 122.141L122.53 124.021ZM123.771 123.977C124.148 123.795 124.396 123.482 124.522 123.13L122.639 122.456C122.651 122.422 122.677 122.368 122.727 122.31C122.778 122.251 122.839 122.206 122.901 122.176L123.771 123.977ZM124.522 123.129C124.624 122.846 124.654 122.554 124.632 122.271L122.638 122.42C122.64 122.442 122.639 122.454 122.638 122.458C122.638 122.463 122.637 122.461 122.639 122.456L124.522 123.129ZM124.633 122.277C124.617 122.039 124.573 121.798 124.51 121.557L122.576 122.063C122.613 122.206 122.631 122.322 122.638 122.414L124.633 122.277ZM124.513 121.566C124.456 121.341 124.39 121.127 124.314 120.925L122.444 121.635C122.489 121.755 122.533 121.894 122.573 122.054L124.513 121.566ZM124.314 120.925C124.243 120.739 124.166 120.561 124.084 120.391L122.286 121.268C122.34 121.378 122.393 121.5 122.444 121.635L124.314 120.925ZM124.084 120.391C123.956 120.129 123.805 119.879 123.633 119.642L122.015 120.818C122.119 120.961 122.21 121.111 122.286 121.268L124.084 120.391ZM123.633 119.642C123.461 119.405 123.272 119.188 123.065 118.997L121.708 120.467C121.808 120.559 121.911 120.674 122.015 120.818L123.633 119.642ZM123.073 119.005C122.841 118.785 122.565 118.598 122.242 118.486L121.588 120.377C121.588 120.377 121.627 120.39 121.699 120.458L123.073 119.005ZM122.257 118.492C121.898 118.361 121.467 118.333 121.047 118.536L121.918 120.337C121.848 120.371 121.771 120.388 121.698 120.389C121.63 120.39 121.586 120.376 121.573 120.371L122.257 118.492ZM121.047 118.536C120.707 118.701 120.46 118.972 120.314 119.295L122.136 120.119C122.122 120.149 122.097 120.192 122.055 120.236C122.013 120.281 121.965 120.314 121.918 120.337L121.047 118.536ZM120.318 119.285C120.191 119.558 120.139 119.845 120.141 120.127L122.141 120.114C122.141 120.101 122.142 120.097 122.141 120.102C122.14 120.107 122.137 120.117 122.131 120.129L120.318 119.285ZM120.141 120.121C120.141 120.351 120.168 120.584 120.215 120.816L122.176 120.422C122.15 120.292 122.141 120.192 122.141 120.119L120.141 120.121ZM120.217 120.826C120.264 121.048 120.325 121.264 120.4 121.474L122.283 120.801C122.24 120.68 122.203 120.55 122.174 120.412L120.217 120.826ZM120.403 121.483C120.475 121.677 120.555 121.866 120.644 122.049L122.442 121.172C122.383 121.051 122.329 120.925 122.28 120.792L120.403 121.483ZM125.298 122.132L125.321 122.148L126.434 120.486L126.41 120.47L125.298 122.132ZM126.366 122.19C126.509 122.11 126.644 122.032 126.77 121.958L125.756 120.234C125.644 120.3 125.521 120.37 125.389 120.444L126.366 122.19ZM126.77 121.958C126.898 121.883 127.018 121.81 127.131 121.74L126.069 120.045C125.974 120.104 125.869 120.168 125.755 120.235L126.77 121.958ZM127.131 121.74C127.288 121.641 127.436 121.537 127.573 121.426L126.318 119.869C126.251 119.923 126.169 119.982 126.069 120.045L127.131 121.74ZM127.572 121.427C127.738 121.294 127.889 121.14 128.017 120.961L126.39 119.798C126.381 119.81 126.361 119.835 126.319 119.868L127.572 121.427ZM128.014 120.966C128.156 120.769 128.259 120.551 128.321 120.316L126.388 119.805C126.388 119.805 126.389 119.802 126.39 119.799C126.392 119.796 126.393 119.793 126.394 119.793L128.014 120.966ZM128.321 120.316C128.392 120.05 128.396 119.785 128.364 119.54L126.38 119.796C126.383 119.819 126.383 119.83 126.383 119.832C126.383 119.833 126.383 119.823 126.388 119.805L128.321 120.316ZM127.539 120.654L127.63 120.638L127.295 118.667L127.205 118.682L127.539 120.654ZM126.503 119.933C126.561 120.133 126.603 120.274 126.624 120.34L128.529 119.731C128.517 119.694 128.483 119.579 128.422 119.372L126.503 119.933ZM126.624 120.34C126.632 120.363 126.653 120.437 126.691 120.584L128.625 120.074C128.588 119.932 128.555 119.811 128.529 119.731L126.624 120.34ZM126.695 120.596C126.714 120.665 126.728 120.717 126.738 120.755C126.743 120.774 126.746 120.787 126.748 120.795C126.75 120.805 126.749 120.801 126.747 120.789L128.71 120.407C128.694 120.323 128.658 120.191 128.622 120.062L126.695 120.596ZM126.753 120.82C126.754 120.825 126.754 120.825 126.753 120.82C126.753 120.816 126.75 120.802 126.748 120.781L128.738 120.583C128.73 120.503 128.716 120.43 128.703 120.376L126.753 120.82ZM127.268 119.802C127.203 119.837 127.123 119.882 127.031 119.935L128.028 121.669C128.114 121.619 128.177 121.584 128.219 121.562L127.268 119.802ZM127.031 119.935C126.94 119.987 126.843 120.043 126.741 120.103L127.746 121.832C127.846 121.774 127.94 121.719 128.028 121.669L127.031 119.935ZM126.741 120.103C126.636 120.164 126.53 120.226 126.426 120.29L127.459 122.002C127.554 121.944 127.65 121.888 127.746 121.832L126.741 120.103ZM126.426 120.289C126.324 120.351 126.234 120.406 126.155 120.455L127.217 122.15C127.284 122.109 127.364 122.059 127.459 122.002L126.426 120.289ZM126.155 120.455C126.112 120.482 125.917 120.607 125.579 120.823L126.657 122.508C127.002 122.288 127.185 122.171 127.217 122.15L126.155 120.455ZM125.579 120.823C125.236 121.043 125.057 121.157 125.029 121.175L126.091 122.869C126.13 122.845 126.322 122.722 126.657 122.508L125.579 120.823ZM126.012 121.13L125.905 121.076L125.003 122.861L125.109 122.914L126.012 121.13ZM126.43 122.186C126.638 121.252 126.771 120.623 126.807 120.364L124.826 120.088C124.804 120.246 124.695 120.779 124.478 121.75L126.43 122.186ZM126.807 120.364C126.84 120.128 126.862 119.9 126.871 119.68L124.873 119.593C124.867 119.741 124.851 119.906 124.826 120.088L126.807 120.364ZM126.871 119.682C126.882 119.453 126.876 119.225 126.845 119.008L124.866 119.294C124.874 119.351 124.88 119.446 124.873 119.591L126.871 119.682ZM126.846 119.017C126.83 118.895 126.809 118.775 126.782 118.66L124.836 119.122C124.845 119.159 124.855 119.213 124.864 119.285L126.846 119.017ZM126.785 118.675C126.757 118.55 126.72 118.425 126.672 118.304L124.812 119.038C124.818 119.053 124.825 119.075 124.832 119.108L126.785 118.675ZM126.681 118.328C126.641 118.216 126.593 118.108 126.537 118.003L124.768 118.935C124.781 118.961 124.793 118.987 124.803 119.014L126.681 118.328ZM126.536 118.002C126.487 117.908 126.432 117.814 126.373 117.721L124.682 118.789C124.718 118.846 124.747 118.895 124.768 118.937L126.536 118.002ZM126.373 117.721C126.25 117.526 126.091 117.331 125.885 117.173L124.669 118.761C124.654 118.75 124.649 118.743 124.653 118.747C124.656 118.751 124.666 118.764 124.682 118.789L126.373 117.721ZM125.89 117.177C125.695 117.026 125.461 116.907 125.191 116.853L124.801 118.814C124.725 118.799 124.679 118.769 124.664 118.758L125.89 117.177ZM125.205 116.856C124.934 116.798 124.668 116.814 124.421 116.883L124.958 118.809C124.923 118.819 124.861 118.827 124.787 118.812L125.205 116.856ZM124.438 116.879C124.216 116.936 124.015 117.031 123.833 117.144L124.895 118.839C124.935 118.814 124.95 118.812 124.942 118.814L124.438 116.879ZM123.833 117.144C123.703 117.226 123.591 117.321 123.496 117.415L124.905 118.835C124.913 118.827 124.916 118.824 124.916 118.825C124.915 118.825 124.908 118.831 124.895 118.839L123.833 117.144ZM123.492 117.419C123.398 117.513 123.313 117.614 123.236 117.72L124.852 118.899C124.873 118.869 124.892 118.848 124.908 118.832L123.492 117.419ZM123.249 117.703C123.167 117.811 123.093 117.924 123.029 118.044L124.79 118.992C124.804 118.966 124.82 118.94 124.839 118.916L123.249 117.703ZM123.024 118.054C122.963 118.17 122.909 118.293 122.868 118.425L124.777 119.023C124.777 119.023 124.778 119.02 124.781 119.012C124.784 119.005 124.789 118.995 124.796 118.981L123.024 118.054ZM124.029 117.745L123.905 117.719L123.493 119.676L123.616 119.702L124.029 117.745ZM124.679 118.896C124.687 118.858 124.698 118.822 124.714 118.788L122.889 117.969C122.813 118.14 122.756 118.317 122.719 118.5L124.679 118.896ZM124.71 118.797C124.731 118.75 124.754 118.711 124.779 118.678L123.159 117.505C123.055 117.648 122.967 117.801 122.893 117.961L124.71 118.797ZM124.779 118.678C124.809 118.637 124.839 118.602 124.87 118.572L123.486 117.128C123.365 117.244 123.256 117.37 123.159 117.505L124.779 118.678ZM124.868 118.574C124.902 118.542 124.929 118.522 124.949 118.509L123.887 116.814C123.743 116.905 123.61 117.01 123.489 117.126L124.868 118.574ZM124.949 118.509C125.02 118.465 125.065 118.45 125.083 118.446L124.619 116.5C124.354 116.564 124.109 116.675 123.887 116.814L124.949 118.509ZM125.095 118.443C125.106 118.44 125.108 118.441 125.102 118.441C125.097 118.441 125.086 118.441 125.073 118.439L125.434 116.472C125.15 116.419 124.87 116.437 124.607 116.503L125.095 118.443ZM125.083 118.44C125.07 118.438 125.056 118.434 125.044 118.429C125.031 118.423 125.024 118.419 125.023 118.418L126.206 116.805C125.977 116.637 125.714 116.52 125.425 116.47L125.083 118.44ZM125.034 118.425C125.023 118.418 125.039 118.425 125.071 118.476L126.762 117.408C126.617 117.179 126.432 116.966 126.195 116.797L125.034 118.425ZM125.071 118.476C125.091 118.508 125.109 118.546 125.123 118.593L127.04 118.02C126.975 117.805 126.883 117.6 126.762 117.408L125.071 118.476ZM125.123 118.593C125.145 118.665 125.161 118.743 125.17 118.828L127.158 118.606C127.136 118.407 127.097 118.211 127.04 118.02L125.123 118.593ZM125.171 118.834C125.181 118.921 125.185 119.013 125.182 119.11L127.181 119.176C127.187 118.982 127.18 118.79 127.157 118.599L125.171 118.834ZM125.182 119.121C125.179 119.242 125.172 119.359 125.161 119.473L127.152 119.663C127.168 119.499 127.178 119.333 127.181 119.165L125.182 119.121ZM125.162 119.465C125.15 119.582 125.135 119.692 125.117 119.795L127.089 120.133C127.114 119.983 127.135 119.83 127.151 119.672L125.162 119.465ZM125.117 119.795C125.096 119.917 125.077 120.027 125.058 120.125L127.024 120.492C127.045 120.383 127.066 120.263 127.089 120.133L125.117 119.795ZM125.059 120.121L124.961 120.638L126.925 121.012L127.024 120.496L125.059 120.121ZM124.962 120.63C124.922 120.833 124.89 121.003 124.867 121.136L126.84 121.466C126.857 121.363 126.885 121.216 126.924 121.02L124.962 120.63ZM127.897 116.936L127.769 116.928L127.644 118.924L127.772 118.932L127.897 116.936ZM128.51 117.331C128.41 117.195 128.309 117.061 128.209 116.929L126.616 118.137C126.711 118.263 126.806 118.391 126.903 118.521L128.51 117.331ZM128.209 116.929C128.109 116.797 128.007 116.664 127.904 116.531L126.324 117.758C126.423 117.885 126.52 118.012 126.616 118.137L128.209 116.929ZM127.904 116.531C127.8 116.397 127.696 116.265 127.593 116.136L126.028 117.382C126.127 117.505 126.225 117.63 126.324 117.758L127.904 116.531ZM127.593 116.136C127.49 116.006 127.385 115.876 127.278 115.745L125.728 117.009C125.83 117.134 125.93 117.259 126.028 117.382L127.593 116.136ZM127.484 116.182L127.476 116.143L125.514 116.534L125.522 116.572L127.484 116.182ZM127.066 117.159C127.202 117.065 127.332 116.972 127.458 116.88L126.279 115.265C126.166 115.348 126.048 115.432 125.924 115.518L127.066 117.159ZM127.458 116.88C127.584 116.788 127.707 116.696 127.827 116.603L126.605 115.02C126.5 115.101 126.391 115.183 126.279 115.265L127.458 116.88ZM127.827 116.603C127.98 116.485 128.118 116.373 128.228 116.27L126.865 114.806C126.821 114.848 126.738 114.917 126.605 115.02L127.827 116.603ZM128.241 116.258C128.355 116.148 128.484 116.004 128.584 115.827L126.84 114.848C126.849 114.831 126.857 114.819 126.862 114.812C126.867 114.804 126.871 114.8 126.872 114.799C126.873 114.797 126.868 114.804 126.852 114.819L128.241 116.258ZM128.584 115.827C128.684 115.647 128.757 115.432 128.765 115.19L126.766 115.12C126.771 114.999 126.807 114.906 126.84 114.848L128.584 115.827ZM128.766 115.17C128.767 115.054 128.759 114.935 128.747 114.821L126.759 115.038C126.766 115.101 126.766 115.133 126.766 115.14L128.766 115.17ZM128.746 114.81C128.741 114.769 128.734 114.723 128.724 114.675L126.763 115.065C126.761 115.058 126.761 115.052 126.76 115.05C126.76 115.048 126.76 115.047 126.76 115.049L128.746 114.81ZM128.738 114.769C128.739 114.772 128.74 114.78 128.74 114.79C128.741 114.801 128.741 114.817 128.741 114.839L126.741 114.809C126.74 114.874 126.745 114.931 126.749 114.971L128.738 114.769ZM127.962 115.799L128.05 115.779L127.608 113.829L127.52 113.849L127.962 115.799ZM126.905 115.187C126.999 115.414 127.069 115.588 127.117 115.714C127.141 115.777 127.157 115.822 127.167 115.852C127.18 115.891 127.175 115.881 127.167 115.844L129.125 115.436C129.096 115.298 129.035 115.13 128.987 115.005C128.929 114.852 128.85 114.656 128.753 114.421L126.905 115.187ZM127.602 114.801C127.429 114.913 127.257 115.031 127.087 115.154L128.26 116.773C128.403 116.67 128.546 116.572 128.69 116.479L127.602 114.801ZM127.087 115.154C126.924 115.272 126.76 115.395 126.593 115.523L127.815 117.107C127.966 116.99 128.114 116.879 128.26 116.774L127.087 115.154ZM126.593 115.523C126.567 115.543 126.541 115.564 126.515 115.584C126.489 115.604 126.463 115.624 126.436 115.644L127.658 117.228C127.684 117.207 127.711 117.187 127.737 117.167C127.763 117.147 127.789 117.127 127.815 117.107L126.593 115.523ZM126.436 115.644C126.378 115.69 126.319 115.736 126.261 115.784L127.528 117.331C127.572 117.295 127.616 117.261 127.658 117.228L126.436 115.644ZM126.085 117.145C126.153 117.239 126.221 117.333 126.288 117.426L127.908 116.253C127.841 116.159 127.773 116.065 127.704 115.971L126.085 117.145ZM126.298 117.439C126.371 117.536 126.446 117.634 126.523 117.733L128.102 116.506C128.032 116.415 127.964 116.326 127.898 116.239L126.298 117.439ZM126.523 117.733C126.599 117.831 126.677 117.93 126.756 118.028L128.315 116.775C128.243 116.685 128.172 116.596 128.102 116.506L126.523 117.733ZM126.766 118.04C126.843 118.133 126.921 118.227 126.999 118.321L128.538 117.044C128.46 116.95 128.382 116.856 128.305 116.763L126.766 118.04ZM128.609 118.225C128.649 118.163 128.715 118.086 128.827 118L127.605 116.416C127.342 116.62 127.11 116.859 126.928 117.14L128.609 118.225ZM128.827 118C128.85 117.982 128.886 117.958 128.938 117.929L127.971 116.178C127.844 116.248 127.721 116.327 127.605 116.416L128.827 118ZM128.954 117.92C128.981 117.904 129.013 117.89 129.05 117.878L128.424 115.978C128.261 116.032 128.104 116.101 127.955 116.188L128.954 117.92ZM129.066 117.872C129.09 117.864 129.118 117.857 129.15 117.854L128.941 115.865C128.76 115.884 128.581 115.923 128.408 115.984L129.066 117.872ZM129.15 117.854C129.149 117.854 129.146 117.854 129.143 117.854C129.14 117.854 129.138 117.853 129.137 117.853L129.591 115.905C129.377 115.855 129.159 115.842 128.941 115.865L129.15 117.854ZM129.151 117.856C129.141 117.854 129.134 117.851 129.132 117.85C129.129 117.849 129.132 117.85 129.14 117.855L130.217 116.17C130.026 116.048 129.812 115.953 129.577 115.902L129.151 117.856ZM129.152 117.863C129.136 117.853 129.148 117.856 129.183 117.901L130.762 116.673C130.613 116.481 130.43 116.302 130.204 116.162L129.152 117.863ZM129.183 117.901C129.228 117.959 129.234 117.99 129.236 117.999C129.237 118.007 129.242 118.042 129.218 118.117C129.16 118.294 128.97 118.606 128.486 119.049L129.835 120.525C130.425 119.986 130.907 119.391 131.12 118.735C131.357 118.007 131.234 117.281 130.762 116.673L129.183 117.901ZM129.869 119.082L129.768 118.98L128.349 120.39L128.451 120.492L129.869 119.082ZM129.761 120.397C130.216 119.947 130.599 119.429 130.749 118.838C130.915 118.187 130.767 117.559 130.364 117.04L128.784 118.267C128.817 118.309 128.818 118.325 128.816 118.318C128.814 118.309 128.819 118.314 128.811 118.346C128.789 118.433 128.691 118.643 128.356 118.973L129.761 120.397ZM130.364 117.04C130.217 116.851 130.041 116.679 129.829 116.541L128.735 118.214C128.734 118.214 128.752 118.225 128.784 118.267L130.364 117.04ZM129.842 116.549C129.622 116.4 129.373 116.298 129.1 116.257L128.801 118.235C128.784 118.232 128.768 118.227 128.752 118.221C128.737 118.215 128.727 118.209 128.722 118.206L129.842 116.549ZM129.1 116.257C128.817 116.214 128.543 116.244 128.29 116.322L128.878 118.234C128.88 118.233 128.873 118.235 128.859 118.237C128.843 118.238 128.824 118.238 128.801 118.235L129.1 116.257ZM128.29 116.322C128.022 116.405 127.786 116.542 127.582 116.7L128.804 118.283C128.867 118.234 128.892 118.229 128.878 118.234L128.29 116.322ZM127.582 116.7C127.501 116.763 127.424 116.831 127.351 116.905L128.785 118.3C128.79 118.295 128.795 118.29 128.804 118.283L127.582 116.7ZM127.351 116.905C127.285 116.973 127.222 117.046 127.164 117.125L128.768 118.319C128.769 118.317 128.775 118.31 128.785 118.3L127.351 116.905ZM127.164 117.125C127.118 117.186 127.074 117.25 127.033 117.317L128.739 118.36C128.744 118.353 128.753 118.339 128.768 118.319L127.164 117.125ZM127.025 117.331C126.994 117.383 126.962 117.44 126.934 117.5L128.736 118.368C128.734 118.371 128.734 118.371 128.736 118.366C128.739 118.362 128.742 118.356 128.748 118.346L127.025 117.331ZM134.872 69.3318C134.853 69.2868 134.814 69.185 134.802 69.0464C134.79 68.9042 134.802 68.6476 134.98 68.3968C135.163 68.137 135.416 68.0352 135.583 68.0003C135.737 67.9682 135.861 67.9819 135.915 67.9898C136.081 68.0141 136.179 68.0793 136.102 68.0388C136.029 68.0009 135.881 67.9096 135.646 67.7535C135.193 67.4517 134.547 66.9941 133.831 66.483C132.437 65.4889 130.736 64.2607 129.913 63.7902L128.92 65.5261C129.629 65.9317 131.209 67.0696 132.669 68.111C133.379 68.6177 134.052 69.0953 134.538 69.4184C134.773 69.5748 134.998 69.7183 135.171 69.8094C135.217 69.8334 135.405 69.9365 135.625 69.9687C135.693 69.9786 135.827 69.9923 135.99 69.9584C136.167 69.9217 136.426 69.8161 136.613 69.5506C136.795 69.294 136.808 69.0296 136.795 68.8777C136.783 68.7292 136.741 68.6156 136.716 68.5567L134.872 69.3318ZM129.913 63.7902C129.861 63.7604 129.839 63.7351 129.83 63.7231C129.82 63.7107 129.815 63.6987 129.811 63.6842C129.803 63.6501 129.804 63.5864 129.839 63.5153C129.874 63.4439 129.916 63.4184 129.926 63.414C129.93 63.4127 129.932 63.4116 129.941 63.4119C129.949 63.4122 129.981 63.4146 130.039 63.4421L130.894 61.6343C130.31 61.3576 129.696 61.343 129.156 61.5682C128.638 61.7843 128.26 62.1899 128.042 62.6367C127.605 63.5304 127.724 64.8417 128.92 65.5261L129.913 63.7902ZM130.039 63.4421C131.039 63.9155 132.01 64.8011 132.867 65.9003C133.718 66.9909 134.41 68.232 134.872 69.3318L136.716 68.5567C136.192 67.3111 135.414 65.9139 134.444 64.6703C133.481 63.4352 132.281 62.2905 130.894 61.6343L130.039 63.4421ZM138.853 68.6335C138.856 68.6129 138.92 68.278 139.309 68.1217C139.662 67.9797 139.915 68.1398 139.917 68.1415C139.947 68.1595 139.794 68.048 139.632 67.6646C139.342 66.9737 139.167 65.7109 139.903 64.1197L138.088 63.2803C137.12 65.3745 137.277 67.2236 137.789 68.4404C138.029 69.0108 138.395 69.5521 138.866 69.843C139.09 69.9812 139.544 70.1827 140.055 69.9774C140.601 69.7577 140.779 69.2546 140.828 68.9511L138.853 68.6335ZM139.903 64.1197C139.941 64.0377 140.003 63.9879 140.058 63.9671C140.104 63.9495 140.149 63.9495 140.203 63.9782L141.144 62.2133C139.931 61.5667 138.59 62.1937 138.088 63.2803L139.903 64.1197ZM140.203 63.9782C140.044 63.8936 139.996 63.7683 139.993 63.7596C139.992 63.7577 139.998 63.7757 140.003 63.8209C140.008 63.8653 140.011 63.9262 140.008 64.0057C139.998 64.3453 139.907 64.8273 139.755 65.4095C139.606 65.9804 139.42 66.5744 139.248 67.138C139.086 67.6682 138.919 68.2255 138.853 68.6335L140.828 68.9511C140.867 68.7077 140.985 68.296 141.16 67.7219C141.325 67.1814 141.528 66.5358 141.69 65.9142C141.849 65.3039 141.991 64.6404 142.008 64.0639C142.016 63.776 141.996 63.4457 141.892 63.1306C141.782 62.8013 141.56 62.4355 141.144 62.2133L140.203 63.9782ZM140.795 74.914C140.714 74.8992 140.955 74.9156 141.122 75.2025C141.326 75.551 141.18 75.8542 141.147 75.9083C141.111 75.9697 141.216 75.8065 141.682 75.6383C142.508 75.3401 143.986 75.2155 145.712 76.0792L146.607 74.2908C144.388 73.18 142.34 73.2742 141.003 73.7572C140.387 73.9796 139.752 74.3477 139.434 74.877C139.261 75.1651 139.088 75.6865 139.396 76.2119C139.667 76.6756 140.14 76.8276 140.436 76.8816L140.795 74.914ZM145.712 76.0792C145.968 76.2074 146.089 76.3049 146.135 76.3512C146.18 76.3964 146.102 76.3391 146.086 76.1762C146.069 75.9966 146.144 75.871 146.178 75.8292C146.201 75.8006 146.191 75.8254 146.096 75.8728C145.908 75.9671 145.583 76.0524 145.204 76.0627C144.825 76.073 144.496 76.0058 144.278 75.8952L143.373 77.6791C143.971 77.9822 144.655 78.0784 145.258 78.062C145.862 78.0455 146.488 77.9138 146.992 77.6609C147.417 77.4481 148.167 76.9195 148.077 75.9858C148.035 75.5492 147.81 75.2007 147.557 74.9447C147.305 74.6899 146.978 74.4762 146.607 74.2908L145.712 76.0792ZM144.278 75.8952C143.096 75.2963 141.866 75.1093 140.795 74.914L140.436 76.8816C141.599 77.0937 142.506 77.2395 143.373 77.6791L144.278 75.8952ZM138.547 78.0152C138.542 77.9591 138.547 77.9644 138.542 78.007C138.541 78.0129 138.525 78.2438 138.323 78.4648C138.203 78.5964 138.033 78.7045 137.827 78.7488C137.633 78.7904 137.47 78.762 137.368 78.731C137.267 78.7005 137.198 78.6597 137.163 78.6375C137.126 78.6137 137.104 78.594 137.096 78.5869C137.082 78.5747 137.122 78.6119 137.217 78.7483C137.3 78.8693 137.4 79.0288 137.508 79.2177C137.724 79.5952 137.954 80.0513 138.141 80.4723C138.338 80.9166 138.451 81.2424 138.479 81.3867L140.442 81.002C140.367 80.6203 140.172 80.1183 139.97 79.6617C139.757 79.1818 139.496 78.664 139.243 78.2231C139.117 78.0028 138.987 77.792 138.861 77.6103C138.746 77.4439 138.597 77.2458 138.427 77.0943C138.352 77.0275 138.187 76.8894 137.948 76.817C137.816 76.777 137.626 76.7464 137.407 76.7933C137.177 76.8428 136.986 76.9635 136.847 77.1155C136.607 77.3772 136.566 77.68 136.554 77.7925C136.538 77.9418 136.545 78.0884 136.557 78.212L138.547 78.0152ZM138.479 81.3867C138.953 83.8038 138.947 86.4184 138.46 88.8339L140.421 89.2288C140.959 86.5558 140.966 83.6764 140.442 81.002L138.479 81.3867ZM138.46 88.8339C138.435 88.9575 138.369 89.0504 138.296 89.1043C138.229 89.1536 138.151 89.176 138.054 89.1589L137.704 91.1279C139.061 91.3693 140.181 90.4193 140.421 89.2288L138.46 88.8339ZM138.054 89.1589C138.271 89.1974 138.42 89.3053 138.503 89.3863C138.58 89.4624 138.616 89.5296 138.626 89.548C138.643 89.5809 138.629 89.5645 138.605 89.4536C138.559 89.2436 138.52 88.9007 138.493 88.425C138.44 87.4874 138.444 86.2091 138.469 84.8414C138.494 83.4696 138.539 82.0688 138.566 80.8398C138.593 79.6532 138.604 78.5904 138.547 78.0152L136.557 78.212C136.599 78.6392 136.594 79.5623 136.567 80.7954C136.54 81.9861 136.494 83.439 136.469 84.8049C136.444 86.1751 136.439 87.5189 136.496 88.5378C136.525 89.0405 136.571 89.5095 136.65 89.8764C136.688 90.0539 136.747 90.2672 136.847 90.4624C136.925 90.6131 137.169 91.0328 137.704 91.1279L138.054 89.1589ZM135.147 78.7629C135.086 78.7888 134.907 78.8601 134.667 78.8372C134.357 78.8076 134.062 78.6297 133.896 78.3348C133.768 78.1071 133.768 77.8977 133.77 77.8261C133.773 77.7358 133.788 77.6674 133.795 77.6372C133.818 77.5433 133.848 77.4936 133.82 77.5519C133.784 77.6249 133.711 77.7586 133.593 77.9647C133.372 78.3526 133.025 78.9443 132.672 79.5802C132.317 80.2207 131.936 80.941 131.63 81.6276C131.335 82.289 131.063 83.0149 130.997 83.638L132.985 83.851C133.016 83.5603 133.173 83.0771 133.456 82.4427C133.728 81.8334 134.076 81.1711 134.421 80.5504C134.768 79.9252 135.09 79.3771 135.331 78.9552C135.444 78.7564 135.55 78.5675 135.618 78.4265C135.642 78.3779 135.705 78.2483 135.74 78.105C135.75 78.0624 135.767 77.9835 135.77 77.8846C135.772 77.8046 135.771 77.5886 135.64 77.3563C135.472 77.0568 135.173 76.8764 134.857 76.8462C134.612 76.8228 134.426 76.8957 134.357 76.9252L135.147 78.7629ZM130.997 83.638C130.99 83.7015 130.976 83.7263 130.974 83.7288C130.973 83.7309 130.975 83.7283 130.977 83.7266C130.977 83.7265 130.944 83.7456 130.879 83.7365C130.85 83.7324 130.826 83.7239 130.809 83.7147C130.792 83.7059 130.786 83.6991 130.787 83.6995C130.788 83.7015 130.789 83.7042 130.788 83.7016C130.788 83.6986 130.781 83.6706 130.792 83.6078L128.82 83.2709C128.71 83.9165 128.868 84.5172 129.245 84.9733C129.605 85.4088 130.109 85.6484 130.602 85.7173C131.095 85.7861 131.647 85.694 132.112 85.3732C132.6 85.0373 132.915 84.5022 132.985 83.851L130.997 83.638ZM130.792 83.6078C131.187 81.296 132.84 79.7536 135.147 78.7629L134.357 76.9252C131.695 78.0686 129.371 80.0472 128.82 83.2709L130.792 83.6078ZM130.881 75.6698C130.843 75.629 130.759 75.5205 130.728 75.343C130.696 75.1556 130.74 74.9936 130.795 74.8876C130.876 74.7316 130.961 74.7218 130.822 74.7996C130.59 74.9282 130.149 75.0729 129.635 75.1784C129.119 75.2842 128.685 75.319 128.495 75.3048C128.451 75.3016 128.47 75.2986 128.523 75.3157C128.532 75.3184 128.812 75.3968 128.989 75.7136C129.232 76.1475 129.046 76.5381 128.957 76.6676C128.88 76.7799 128.81 76.8176 128.851 76.7896L127.721 75.1396C127.61 75.2158 127.44 75.3447 127.308 75.536C127.165 75.7445 126.97 76.2018 127.244 76.691C127.453 77.0631 127.803 77.1852 127.915 77.221C128.072 77.271 128.227 77.2903 128.346 77.2993C128.809 77.3339 129.454 77.2571 130.036 77.1377C130.62 77.018 131.296 76.8241 131.793 76.5475C132.018 76.4227 132.371 76.1937 132.571 75.8077C132.685 75.5867 132.752 75.3071 132.699 75C132.647 74.7029 132.499 74.4729 132.347 74.3093L130.881 75.6698ZM128.851 76.7896C129.062 76.6451 129.203 76.4306 129.259 76.1964C129.308 75.9901 129.28 75.8195 129.258 75.7283C129.216 75.5572 129.139 75.4407 129.121 75.413C129.069 75.3346 129.017 75.2806 129.008 75.2712C128.975 75.237 128.945 75.2104 128.937 75.203C128.913 75.1815 128.885 75.1582 128.866 75.1419C128.818 75.1019 128.767 75.0595 128.7 75.0024C128.567 74.89 128.41 74.7512 128.274 74.6127C128.118 74.4539 128.067 74.372 128.067 74.3725C128.071 74.3811 128.086 74.4129 128.099 74.4647C128.111 74.5164 128.125 74.6059 128.111 74.7203C128.076 75.0096 127.895 75.2236 127.709 75.3254L126.746 73.573C126.426 73.749 126.176 74.0656 126.126 74.4778C126.085 74.8158 126.194 75.0941 126.268 75.2465C126.419 75.5571 126.669 75.8331 126.848 76.0145C127.046 76.2162 127.256 76.3999 127.405 76.5264C127.478 76.5888 127.546 76.6449 127.581 76.6744C127.603 76.6928 127.608 76.697 127.605 76.6946C127.603 76.6932 127.599 76.6893 127.593 76.6834C127.588 76.6786 127.574 76.6662 127.558 76.6489C127.552 76.642 127.501 76.5902 127.451 76.5133C127.433 76.4864 127.356 76.3705 127.314 76.1999C127.292 76.1089 127.264 75.9385 127.313 75.7324C127.369 75.4983 127.51 75.2839 127.721 75.1396L128.851 76.7896ZM127.709 75.3254C127.562 75.4067 127.481 75.38 127.622 75.381C127.712 75.3816 127.823 75.3932 127.922 75.4078C127.969 75.4146 128.008 75.4213 128.034 75.426C128.05 75.4289 128.054 75.4297 128.069 75.4323C128.071 75.4328 128.076 75.4336 128.081 75.4344C128.083 75.4348 128.096 75.4371 128.111 75.4394C128.116 75.44 128.141 75.4438 128.174 75.4464C128.183 75.4472 128.235 75.4518 128.301 75.4488C128.343 75.446 128.466 75.4276 128.545 75.4072C128.724 75.3333 129.158 74.8815 129.256 74.4536C129.2 74.12 128.947 73.7266 128.845 73.6416C128.795 73.6073 128.712 73.56 128.682 73.545C128.631 73.5211 128.589 73.5069 128.58 73.5037C128.552 73.494 128.529 73.4877 128.525 73.4864C128.508 73.4819 128.337 73.441 128.154 73.394L127.657 75.3313C127.78 75.3628 127.869 75.3847 127.929 75.3994C128.018 75.421 128.001 75.4169 127.985 75.4124C127.982 75.4114 127.959 75.4052 127.932 75.3956C127.922 75.3925 127.881 75.3784 127.83 75.3545C127.799 75.3395 127.717 75.2923 127.667 75.258C127.565 75.173 127.312 74.7795 127.256 74.446C127.354 74.0182 127.788 73.5663 127.967 73.4924C128.046 73.4721 128.168 73.4537 128.211 73.4508C128.277 73.4478 128.329 73.4524 128.338 73.4532C128.37 73.4558 128.395 73.4596 128.399 73.4601C128.419 73.463 128.436 73.4663 128.426 73.4644C128.425 73.4642 128.403 73.4603 128.387 73.4573C128.346 73.4501 128.286 73.4397 128.212 73.4289C128.071 73.4083 127.858 73.3826 127.636 73.381C127.465 73.3799 127.085 73.3862 126.746 73.573L127.709 75.3254ZM128.154 73.394C128.097 73.3793 128.024 73.3667 128.022 73.3664C128.003 73.3629 128.011 73.3643 128.022 73.3666C128.025 73.3672 128.031 73.3684 128.038 73.3699C128.043 73.3712 128.058 73.3745 128.076 73.3795C128.086 73.382 128.103 73.3867 128.124 73.3936C128.137 73.3978 128.19 73.4146 128.253 73.4453C128.28 73.4585 128.357 73.4964 128.441 73.5641C128.472 73.5887 128.787 73.8274 128.815 74.2847C128.851 74.8788 128.406 75.1635 128.293 75.2245C128.154 75.2996 128.032 75.3223 127.999 75.3284C127.913 75.3445 127.843 75.3449 127.83 75.345C127.805 75.3454 127.785 75.3446 127.774 75.3442C127.753 75.3433 127.737 75.3419 127.731 75.3414C127.718 75.3402 127.708 75.339 127.707 75.3389L127.939 73.3524C127.934 73.3518 127.921 73.3504 127.906 73.349C127.899 73.3484 127.882 73.347 127.861 73.3461C127.85 73.3456 127.83 73.3449 127.804 73.3452C127.791 73.3454 127.722 73.3458 127.635 73.3619C127.602 73.3679 127.479 73.3907 127.341 73.4658C127.228 73.5268 126.783 73.8115 126.819 74.4057C126.846 74.8629 127.162 75.1017 127.193 75.1263C127.277 75.194 127.354 75.2319 127.381 75.2451C127.444 75.2759 127.497 75.2927 127.51 75.297C127.532 75.3039 127.549 75.3087 127.559 75.3113C127.59 75.3197 127.616 75.3249 127.618 75.3253C127.637 75.3293 127.663 75.3338 127.664 75.3342C127.704 75.3414 127.687 75.339 127.657 75.3313L128.154 73.394ZM127.707 75.3389C127.946 75.3669 128.291 75.3923 128.639 75.4196C129 75.448 129.391 75.4802 129.765 75.5229C130.143 75.5662 130.475 75.6171 130.724 75.6772C130.849 75.7073 130.929 75.7341 130.972 75.7525C131.032 75.7777 130.968 75.763 130.881 75.6698L132.347 74.3093C132.152 74.0987 131.914 73.9792 131.751 73.9101C131.571 73.8343 131.378 73.7775 131.194 73.7331C130.826 73.6442 130.398 73.5823 129.992 73.5358C129.58 73.4888 129.158 73.4542 128.795 73.4258C128.419 73.3962 128.129 73.3747 127.939 73.3524L127.707 75.3389ZM127.7 75.3295C127.666 75.3424 127.627 75.3262 127.613 75.2895L129.482 74.5769C129.103 73.582 127.989 73.0829 126.994 73.4584L127.7 75.3295ZM127.613 75.2895C127.598 75.2504 127.619 75.2073 127.656 75.1935L128.362 77.0646C129.359 76.6881 129.862 75.5743 129.482 74.5769L127.613 75.2895ZM127.656 75.1935C127.69 75.1805 127.729 75.1968 127.743 75.2335L125.874 75.946C126.253 76.941 127.367 77.4401 128.362 77.0646L127.656 75.1935ZM127.743 75.2335C127.758 75.2726 127.737 75.3157 127.7 75.3295L126.994 73.4584C125.997 73.8348 125.494 74.9487 125.874 75.946L127.743 75.2335ZM132.189 70.5814C132.15 70.5502 132.066 70.4802 131.988 70.3676C131.912 70.2579 131.78 70.0176 131.816 69.6896C131.854 69.3385 132.058 69.1137 132.204 69.0023C132.338 68.9006 132.465 68.858 132.521 68.8413C132.637 68.8065 132.731 68.802 132.753 68.8009C132.79 68.799 132.819 68.7997 132.833 68.8002C132.877 68.8018 132.903 68.8063 132.88 68.8032C132.854 68.7997 132.798 68.7908 132.705 68.7746C132.524 68.743 132.252 68.6925 131.908 68.6273C131.226 68.4982 130.268 68.3136 129.245 68.1221C127.22 67.7432 124.821 67.315 123.641 67.2205L123.481 69.2141C124.532 69.2983 126.81 69.7012 128.877 70.088C129.9 70.2794 130.843 70.4612 131.536 70.5925C131.879 70.6575 132.164 70.7105 132.361 70.7449C132.457 70.7616 132.546 70.7762 132.613 70.7853C132.638 70.7886 132.698 70.7967 132.763 70.799C132.782 70.7997 132.815 70.8004 132.855 70.7983C132.881 70.797 132.978 70.7922 133.096 70.7569C133.152 70.7399 133.28 70.6969 133.414 70.5949C133.561 70.4831 133.766 70.2579 133.804 69.9063C133.84 69.5778 133.707 69.337 133.631 69.2268C133.552 69.1137 133.468 69.0431 133.428 69.0112L132.189 70.5814ZM123.641 67.2205C123.487 67.2082 123.425 67.1538 123.391 67.1117C123.344 67.0537 123.306 66.9567 123.308 66.8398C123.309 66.7225 123.349 66.6451 123.381 66.6099C123.397 66.5926 123.443 66.5427 123.604 66.5434L123.613 64.5434C122.916 64.5404 122.316 64.8059 121.898 65.2681C121.496 65.7125 121.315 66.2787 121.308 66.8138C121.294 67.8839 122.01 69.0963 123.481 69.2141L123.641 67.2205ZM123.604 66.5434C124.96 66.5494 126.502 67.0663 128.048 67.862C129.579 68.6502 131.033 69.6691 132.189 70.5814L133.428 69.0112C132.211 68.0508 130.647 66.9502 128.963 66.0837C127.294 65.2246 125.423 64.5514 123.613 64.5434L123.604 66.5434ZM128.369 60.7105C128.349 60.6568 128.379 60.6473 128.344 60.7076C128.307 60.7701 128.217 60.8624 128.061 60.9212L128.768 62.7923C129.784 62.4087 130.721 61.2641 130.238 59.998L128.369 60.7105ZM128.061 60.9212C127.906 60.98 127.776 60.9706 127.704 60.9474C127.634 60.9249 127.662 60.9098 127.682 60.9629L125.813 61.6755C126.294 62.9374 127.752 63.1757 128.768 62.7923L128.061 60.9212ZM127.682 60.9629C127.702 61.0167 127.672 61.0262 127.707 60.9659C127.744 60.9033 127.834 60.811 127.99 60.7523L127.283 58.8812C126.267 59.2647 125.33 60.4093 125.813 61.6755L127.682 60.9629ZM127.99 60.7523C128.145 60.6935 128.276 60.7029 128.347 60.726C128.417 60.7486 128.389 60.7636 128.369 60.7105L130.238 59.998C129.757 58.7361 128.299 58.4977 127.283 58.8812L127.99 60.7523ZM138.001 73.7013C138.136 74.0552 137.953 74.6893 137.218 74.9665L137.925 76.8376C139.449 76.2621 140.487 74.6066 139.87 72.9888L138.001 73.7013ZM137.218 74.9665C136.483 75.2442 135.917 74.8901 135.78 74.5327L133.912 75.2453C134.527 76.8596 136.402 77.4126 137.925 76.8376L137.218 74.9665ZM135.78 74.5327C135.646 74.1789 135.829 73.5447 136.564 73.2675L135.857 71.3964C134.333 71.9719 133.295 73.6274 133.912 75.2453L135.78 74.5327ZM136.564 73.2675C137.299 72.9899 137.865 73.3439 138.001 73.7013L139.87 72.9888C139.255 71.3745 137.38 70.8214 135.857 71.3964L136.564 73.2675ZM139.915 92.5242C140.04 92.851 139.876 93.2168 139.546 93.3414L140.252 95.2125C141.616 94.6976 142.303 93.1749 141.784 91.8116L139.915 92.5242ZM139.546 93.3414C139.213 93.4669 138.842 93.2988 138.716 92.9696L136.848 93.6821C137.367 95.0429 138.891 95.7265 140.252 95.2125L139.546 93.3414ZM138.716 92.9696C138.592 92.6428 138.755 92.277 139.085 92.1524L138.379 90.2813C137.015 90.7962 136.328 92.3189 136.848 93.6821L138.716 92.9696ZM139.085 92.1524C139.418 92.0269 139.789 92.195 139.915 92.5242L141.784 91.8116C141.265 90.4508 139.741 89.7673 138.379 90.2813L139.085 92.1524ZM116.598 54.4256L117.096 56.5421L119.043 56.0839L118.545 53.9673L116.598 54.4256ZM117.885 57.5803L119.849 58.6591L120.812 56.9061L118.848 55.8273L117.885 57.5803ZM119.875 57.9487L117.844 58.887L118.682 60.7027L120.714 59.7644L119.875 57.9487ZM116.984 59.8697L116.345 61.9462L118.257 62.5346L118.896 60.458L116.984 59.8697ZM117.109 61.9703L116.61 59.8538L114.664 60.312L115.162 62.4285L117.109 61.9703ZM115.821 58.8156L113.857 57.7368L112.894 59.4898L114.858 60.5686L115.821 58.8156ZM113.831 58.4472L115.863 57.5089L115.024 55.6931L112.992 56.6315L113.831 58.4472ZM116.722 56.5262L117.361 54.4496L115.45 53.8613L114.811 55.9378L116.722 56.5262ZM115.863 57.5089C116.275 57.3183 116.588 56.9614 116.722 56.5262L114.811 55.9378C114.844 55.8289 114.922 55.7402 115.024 55.6931L115.863 57.5089ZM113.857 57.7368C114.139 57.8918 114.13 58.3089 113.831 58.4472L112.992 56.6315C111.795 57.1843 111.744 58.8582 112.894 59.4898L113.857 57.7368ZM116.61 59.8538C116.506 59.4109 116.219 59.034 115.821 58.8156L114.858 60.5686C114.761 60.5151 114.69 60.4223 114.664 60.312L116.61 59.8538ZM116.345 61.9462C116.368 61.8711 116.425 61.7885 116.511 61.7315C116.59 61.6797 116.671 61.663 116.738 61.6653C116.806 61.6677 116.885 61.69 116.959 61.7466C117.04 61.8089 117.091 61.8943 117.109 61.9703L115.162 62.4285C115.535 64.0129 117.774 64.1037 118.257 62.5346L116.345 61.9462ZM117.844 58.887C117.431 59.0775 117.118 59.4344 116.984 59.8697L118.896 60.458C118.862 60.567 118.784 60.6557 118.682 60.7028L117.844 58.887ZM119.849 58.6591C119.567 58.5041 119.576 58.0869 119.875 57.9487L120.714 59.7644C121.911 59.2116 121.962 57.5377 120.812 56.9061L119.849 58.6591ZM117.096 56.5421C117.2 56.9849 117.488 57.3618 117.885 57.5803L118.848 55.8273C118.946 55.8808 119.017 55.9737 119.043 56.0839L117.096 56.5421ZM118.545 53.9673C118.172 52.383 115.933 52.2922 115.45 53.8613L117.361 54.4496C117.338 54.5248 117.282 54.6074 117.195 54.6644C117.117 54.7162 117.036 54.7329 116.968 54.7305C116.901 54.7282 116.822 54.7059 116.748 54.6493C116.666 54.587 116.616 54.5015 116.598 54.4256L118.545 53.9673ZM233.804 53.7639L282.831 66.9006L283.349 64.9688L234.322 51.832L233.804 53.7639ZM290.68 80.4361L262.628 185.128L264.56 185.646L292.612 80.9537L290.68 80.4361ZM249.063 192.925L200.036 179.789L199.518 181.721L248.545 194.857L249.063 192.925ZM200.036 179.789C194.119 178.203 190.609 172.141 192.187 166.253L190.255 165.736C188.39 172.697 192.541 179.851 199.518 181.721L200.036 179.789ZM262.628 185.128C261.05 191.016 254.979 194.511 249.063 192.925L248.545 194.857C255.522 196.727 262.695 192.607 264.56 185.646L262.628 185.128ZM282.831 66.9006C288.748 68.4859 292.258 74.5483 290.68 80.4361L292.612 80.9537C294.477 73.9927 290.326 66.8383 283.349 64.9688L282.831 66.9006ZM234.322 51.832C227.345 49.9625 220.172 54.0827 218.307 61.0438L220.239 61.5614C221.816 55.6736 227.887 52.1785 233.804 53.7639L234.322 51.832ZM210.237 152.584L211.27 148.729L209.338 148.212L208.305 152.067L210.237 152.584ZM210.045 149.436L246.232 159.133L246.75 157.201L210.563 147.505L210.045 149.436ZM245.525 157.908L244.492 161.763L246.424 162.28L247.457 158.425L245.525 157.908ZM245.717 161.056L209.53 151.359L209.012 153.291L245.199 162.987L245.717 161.056ZM218.087 123.287L219.12 119.432L217.188 118.914L216.156 122.769L218.087 123.287ZM217.896 120.139L254.082 129.835L254.6 127.903L218.413 118.207L217.896 120.139ZM253.375 128.61L252.342 132.465L254.274 132.983L255.307 129.128L253.375 128.61ZM253.567 131.758L217.38 122.062L216.863 123.994L253.049 133.69L253.567 131.758ZM220.773 113.264L221.806 109.409L219.874 108.891L218.841 112.746L220.773 113.264ZM220.581 110.116L256.768 119.812L257.285 117.88L221.099 108.184L220.581 110.116ZM256.061 118.587L255.028 122.442L256.96 122.96L257.992 119.105L256.061 118.587ZM256.252 121.735L220.066 112.039L219.548 113.971L255.735 123.667L256.252 121.735ZM227.177 89.3633L228.21 85.5083L226.278 84.9907L225.245 88.8456L227.177 89.3633ZM226.985 86.2154L263.172 95.9116L263.69 93.9797L227.503 84.2836L226.985 86.2154ZM262.465 94.6869L261.432 98.5418L263.364 99.0594L264.397 95.2045L262.465 94.6869ZM262.657 97.8347L226.47 88.1385L225.952 90.0704L262.139 99.7665L262.657 97.8347ZM228.417 84.7374L229.45 80.8825L227.518 80.3649L226.485 84.2198L228.417 84.7374ZM228.225 81.5896L264.411 91.2858L264.929 89.3539L228.742 79.6577L228.225 81.5896ZM263.704 90.061L262.671 93.9159L264.603 94.4336L265.636 90.5786L263.704 90.061ZM263.896 93.2088L227.71 83.5127L227.192 85.4445L263.378 95.1407L263.896 93.2088ZM229.656 80.1114L230.689 76.2565L228.757 75.7389L227.724 79.5938L229.656 80.1114ZM229.464 76.9636L265.651 86.6598L266.169 84.7279L229.982 75.0318L229.464 76.9636ZM264.944 85.435L263.911 89.2899L265.843 89.8076L266.876 85.9527L264.944 85.435ZM265.136 88.5828L228.949 78.8867L228.431 80.8185L264.618 90.5147L265.136 88.5828ZM207.965 161.065L208.378 159.523L206.446 159.005L206.033 160.547L207.965 161.065ZM207.153 160.23L243.34 169.926L243.857 167.994L207.671 158.298L207.153 160.23ZM242.633 168.702L242.219 170.243L244.151 170.761L244.564 169.219L242.633 168.702ZM243.444 169.536L207.258 159.84L206.74 161.772L242.927 171.468L243.444 169.536ZM208.998 157.21L209.411 155.668L207.479 155.15L207.066 156.692L208.998 157.21ZM208.186 156.375L244.373 166.071L244.89 164.139L208.704 154.443L208.186 156.375ZM243.666 164.847L243.252 166.389L245.184 166.906L245.597 165.364L243.666 164.847ZM244.477 165.681L208.291 155.985L207.773 157.917L243.959 167.613L244.477 165.681ZM209.617 154.897L210.031 153.355L208.099 152.838L207.686 154.38L209.617 154.897ZM208.806 154.062L244.992 163.758L245.51 161.827L209.323 152.13L208.806 154.062ZM244.285 162.534L243.872 164.076L245.804 164.593L246.217 163.051L244.285 162.534ZM245.097 163.369L208.91 153.672L208.393 155.604L244.579 165.3L245.097 163.369ZM214.782 135.622L215.195 134.08L213.263 133.563L212.85 135.105L214.782 135.622ZM213.97 134.788L250.157 144.484L250.675 142.552L214.488 132.856L213.97 134.788ZM249.45 143.259L249.037 144.801L250.969 145.319L251.382 143.777L249.45 143.259ZM250.261 144.094L214.075 134.398L213.557 136.33L249.744 146.026L250.261 144.094ZM216.228 130.226L216.641 128.684L214.709 128.166L214.296 129.708L216.228 130.226ZM215.417 129.391L251.603 139.087L252.121 137.155L215.934 127.459L215.417 129.391ZM250.896 137.862L250.483 139.404L252.415 139.922L252.828 138.38L250.896 137.862ZM251.708 138.697L215.521 129.001L215.003 130.933L251.19 140.629L251.708 138.697ZM216.848 127.913L217.261 126.371L215.329 125.853L214.916 127.395L216.848 127.913ZM216.036 127.078L252.223 136.774L252.741 134.842L216.554 125.146L216.036 127.078ZM251.516 135.549L251.103 137.091L253.034 137.609L253.448 136.067L251.516 135.549ZM252.327 136.384L216.141 126.688L215.623 128.62L251.81 138.316L252.327 136.384ZM219.327 118.661L219.74 117.119L217.808 116.601L217.395 118.143L219.327 118.661ZM218.515 117.826L254.702 127.522L255.22 125.59L219.033 115.894L218.515 117.826ZM253.995 126.297L253.582 127.839L255.513 128.357L255.927 126.815L253.995 126.297ZM254.806 127.132L218.62 117.436L218.102 119.368L254.289 129.064L254.806 127.132ZM222.632 106.325L223.045 104.783L221.114 104.265L220.7 105.807L222.632 106.325ZM221.821 105.49L258.007 115.186L258.525 113.254L222.338 103.558L221.821 105.49ZM257.3 113.962L256.887 115.504L258.819 116.021L259.232 114.479L257.3 113.962ZM258.112 114.796L221.925 105.1L221.408 107.032L257.594 116.728L258.112 114.796ZM223.252 104.012L223.665 102.47L221.733 101.952L221.32 103.494L223.252 104.012ZM222.44 103.177L258.627 112.873L259.145 110.941L222.958 101.245L222.44 103.177ZM257.92 111.649L257.507 113.191L259.439 113.708L259.852 112.166L257.92 111.649ZM258.731 112.483L222.545 102.787L222.027 104.719L258.214 114.415L258.731 112.483ZM223.872 101.699L224.285 100.157L222.353 99.6395L221.94 101.182L223.872 101.699ZM223.06 100.864L259.247 110.56L259.764 108.629L223.578 98.9324L223.06 100.864ZM258.54 109.336L258.126 110.878L260.058 111.395L260.471 109.853L258.54 109.336ZM259.351 110.171L223.165 100.474L222.647 102.406L258.834 112.102L259.351 110.171ZM224.492 99.3862L224.905 97.8442L222.973 97.3265L222.56 98.8685L224.492 99.3862ZM223.68 98.5513L259.866 108.247L260.384 106.316L224.198 96.6194L223.68 98.5513ZM259.159 107.023L258.746 108.565L260.678 109.082L261.091 107.54L259.159 107.023ZM259.971 107.858L223.784 98.1614L223.267 100.093L259.453 109.789L259.971 107.858ZM225.938 93.9893L226.351 92.4473L224.419 91.9297L224.006 93.4716L225.938 93.9893ZM225.126 93.1544L261.313 102.851L261.83 100.919L225.644 91.2225L225.126 93.1544ZM260.605 101.626L260.192 103.168L262.124 103.685L262.537 102.143L260.605 101.626ZM261.417 102.461L225.231 92.7645L224.713 94.6964L260.899 104.393L261.417 102.461ZM230.896 75.4856L231.309 73.9436L229.377 73.426L228.964 74.9679L230.896 75.4856ZM230.084 74.6507L266.271 84.3469L266.788 82.415L230.602 72.7189L230.084 74.6507ZM265.564 83.1221L265.15 84.6641L267.082 85.1817L267.495 83.6398L265.564 83.1221ZM266.375 83.957L230.189 74.2608L229.671 76.1927L265.857 85.8888L266.375 83.957ZM258.75 149.639L258.155 149.48L257.638 151.412L258.233 151.571L258.75 149.639ZM256.935 150.169C256.722 150.911 256.521 151.661 256.333 152.417L258.274 152.899C258.456 152.166 258.65 151.441 258.857 150.723L256.935 150.169ZM256.867 151.758L256.77 151.805L257.644 153.604L257.741 153.557L256.867 151.758ZM258.043 152.157C257.641 151.543 257.096 150.849 256.421 150.081L254.918 151.4C255.558 152.129 256.037 152.745 256.37 153.253L258.043 152.157ZM256.421 150.081C255.752 149.319 255.18 148.717 254.71 148.294L253.371 149.78C253.756 150.126 254.269 150.66 254.918 151.4L256.421 150.081ZM254.952 149.448L255.024 149.289L253.201 148.465L253.129 148.625L254.952 149.448ZM253.901 149.854C253.972 149.87 254.086 149.898 254.249 149.941L254.767 148.01C254.592 147.963 254.442 147.925 254.324 147.9L253.901 149.854ZM254.249 149.941L257.344 150.771L257.861 148.839L254.767 148.01L254.249 149.941ZM258.569 150.064L258.57 150.057L256.639 149.539L256.637 149.546L258.569 150.064ZM258.57 150.057C258.64 149.796 258.675 149.482 258.592 149.155L256.654 149.647C256.64 149.595 256.64 149.557 256.641 149.538C256.642 149.521 256.644 149.52 256.639 149.539L258.57 150.057ZM258.592 149.155C258.504 148.809 258.3 148.538 258.121 148.346L256.658 149.71C256.689 149.744 256.698 149.758 256.696 149.754C256.694 149.752 256.688 149.742 256.68 149.725C256.672 149.707 256.662 149.682 256.654 149.647L258.592 149.155ZM258.157 149.669L258.222 149.591L256.686 148.31L256.622 148.387L258.157 149.669ZM256.931 149.803L257.68 150.263L258.726 148.558L257.977 148.098L256.931 149.803ZM257.248 149.115C257.175 149.35 257.119 149.537 257.085 149.666L259.017 150.184C259.04 150.095 259.086 149.939 259.158 149.706L257.248 149.115ZM257.792 150.891L258.373 151.047L258.891 149.115L258.309 148.959L257.792 150.891ZM258.373 151.047C258.683 151.129 259.126 151.173 259.553 150.935L258.579 149.188C258.787 149.072 258.942 149.128 258.891 149.115L258.373 151.047ZM259.553 150.935C259.94 150.719 260.155 150.353 260.278 150.093L258.469 149.239C258.443 149.295 258.429 149.311 258.435 149.303C258.44 149.297 258.484 149.241 258.579 149.188L259.553 150.935ZM258.823 150.501L258.898 150.55L259.999 148.88L259.924 148.831L258.823 150.501ZM258.528 149.325C258.403 149.619 258.3 149.919 258.218 150.225L260.15 150.743C260.208 150.527 260.281 150.314 260.369 150.105L258.528 149.325ZM258.218 150.225C258.129 150.558 258.063 150.885 258.024 151.205L260.009 151.448C260.036 151.231 260.082 150.996 260.15 150.743L258.218 150.225ZM258.921 150.331L258.83 150.34L259.022 152.331L259.112 152.322L258.921 150.331ZM259.923 151.418C259.946 151.131 259.943 150.706 259.716 150.326L257.999 151.352C257.943 151.258 257.933 151.188 257.932 151.18C257.931 151.17 257.935 151.191 257.93 151.253L259.923 151.418ZM259.716 150.326C259.466 149.906 259.06 149.722 258.75 149.639L258.233 151.571C258.283 151.585 258.122 151.556 257.999 151.352L259.716 150.326ZM257.959 152.225C258.087 151.826 258.243 151.278 258.428 150.588L256.496 150.071C256.314 150.749 256.167 151.262 256.054 151.616L257.959 152.225ZM257.721 149.364L255.977 148.896L255.459 150.828L257.203 151.296L257.721 149.364ZM255.977 148.896C255.785 148.845 255.598 148.776 255.416 148.688L254.547 150.489C254.841 150.631 255.145 150.744 255.459 150.828L255.977 148.896ZM254.234 148.923L254.208 148.953L255.702 150.282L255.728 150.253L254.234 148.923ZM254.243 150.32C255.088 151.177 255.726 151.909 256.171 152.518L257.786 151.338C257.262 150.621 256.551 149.812 255.667 148.916L254.243 150.32ZM257.232 152.895L257.26 152.888L256.753 150.953L256.726 150.96L257.232 152.895ZM257.013 147.685L257.049 147.688L257.179 145.692L257.143 145.689L257.013 147.685ZM258.061 147.012C258.091 146.922 258.125 146.845 258.159 146.779L256.387 145.853C256.301 146.017 256.228 146.189 256.168 146.367L258.061 147.012ZM258.167 146.763C258.186 146.726 258.219 146.673 258.276 146.604L256.736 145.327C256.599 145.493 256.476 145.674 256.378 145.869L258.167 146.763ZM258.276 146.604C258.311 146.562 258.336 146.544 258.347 146.537L257.308 144.828C257.086 144.963 256.896 145.134 256.736 145.327L258.276 146.604ZM258.357 146.531C258.343 146.54 258.335 146.542 258.337 146.542C258.339 146.541 258.352 146.537 258.379 146.533L258.129 144.549C257.849 144.584 257.562 144.67 257.298 144.834L258.357 146.531ZM258.397 146.531C258.407 146.53 258.446 146.526 258.527 146.547L259.044 144.616C258.747 144.536 258.431 144.505 258.111 144.552L258.397 146.531ZM258.527 146.547C258.656 146.582 258.728 146.626 258.768 146.66L260.057 145.131C259.759 144.88 259.412 144.714 259.044 144.616L258.527 146.547ZM258.775 146.666C258.843 146.722 258.871 146.766 258.885 146.797L260.701 145.958C260.548 145.627 260.322 145.35 260.05 145.125L258.775 146.666ZM258.881 146.789C258.912 146.856 258.941 146.954 258.956 147.096L260.945 146.89C260.912 146.571 260.837 146.259 260.704 145.966L258.881 146.789ZM258.955 147.086C258.97 147.246 258.968 147.405 258.949 147.563L260.935 147.799C260.971 147.5 260.974 147.2 260.946 146.9L258.955 147.086ZM258.949 147.563C258.928 147.739 258.891 147.933 258.833 148.147L260.765 148.665C260.844 148.371 260.902 148.082 260.935 147.799L258.949 147.563ZM258.833 148.147C258.834 148.144 258.833 148.147 258.83 148.16C258.826 148.171 258.821 148.186 258.815 148.206L260.72 148.816C260.736 148.766 260.752 148.712 260.765 148.665L258.833 148.147ZM258.816 148.204C258.8 148.252 258.783 148.306 258.771 148.353L260.702 148.871C260.702 148.874 260.702 148.872 260.706 148.861C260.709 148.851 260.713 148.837 260.719 148.818L258.816 148.204ZM259.866 147.621L259.706 147.6L259.448 149.583L259.607 149.604L259.866 147.621ZM260.556 148.795C260.602 148.574 260.639 148.367 260.664 148.175L258.681 147.912C258.664 148.045 258.637 148.203 258.598 148.388L260.556 148.795ZM260.666 148.161C260.69 147.958 260.702 147.751 260.703 147.539L258.703 147.527C258.702 147.67 258.694 147.803 258.68 147.927L260.666 148.161ZM260.703 147.539C260.705 147.289 260.678 147.035 260.608 146.788L258.685 147.335C258.692 147.362 258.704 147.422 258.703 147.527L260.703 147.539ZM260.607 146.782C260.54 146.554 260.443 146.338 260.317 146.136L258.622 147.198C258.65 147.242 258.671 147.289 258.686 147.341L260.607 146.782ZM260.317 146.137C260.155 145.877 259.94 145.669 259.696 145.508L258.596 147.178C258.612 147.189 258.62 147.196 258.622 147.198C258.624 147.201 258.624 147.2 258.622 147.197L260.317 146.137ZM259.692 145.505C259.449 145.346 259.181 145.237 258.905 145.163L258.388 147.095C258.5 147.125 258.565 147.158 258.6 147.18L259.692 145.505ZM258.905 145.163C258.365 145.018 257.748 145.019 257.202 145.374C256.678 145.715 256.406 146.261 256.264 146.791L258.196 147.308C258.271 147.029 258.344 147.017 258.292 147.051C258.265 147.069 258.242 147.072 258.242 147.072C258.248 147.072 258.293 147.069 258.388 147.095L258.905 145.163ZM256.264 146.791C256.222 146.948 256.189 147.11 256.162 147.276L258.137 147.591C258.154 147.486 258.174 147.392 258.196 147.308L256.264 146.791ZM257.311 146.446L257.101 146.412L256.777 148.386L256.988 148.42L257.311 146.446ZM257.937 147.466C257.973 146.922 257.923 146.372 257.696 145.887L255.885 146.735C255.916 146.801 255.965 146.976 255.941 147.332L257.937 147.466ZM257.698 145.891C257.454 145.364 257.025 144.973 256.44 144.816L255.922 146.748C255.925 146.749 255.922 146.748 255.913 146.744C255.905 146.74 255.895 146.733 255.887 146.726C255.878 146.718 255.874 146.712 255.873 146.711C255.872 146.71 255.876 146.715 255.883 146.73L257.698 145.891ZM256.44 144.816C256.003 144.699 255.466 144.685 254.98 144.998L256.061 146.68C256.032 146.699 256.001 146.713 255.971 146.723C255.941 146.733 255.916 146.737 255.9 146.739C255.868 146.741 255.872 146.735 255.922 146.748L256.44 144.816ZM254.987 144.993C254.568 145.257 254.322 145.655 254.207 146.082L256.139 146.6C256.144 146.58 256.145 146.59 256.128 146.614C256.11 146.64 256.084 146.666 256.054 146.685L254.987 144.993ZM254.207 146.082C254.131 146.368 254.113 146.658 254.142 146.945L256.132 146.749C256.125 146.675 256.132 146.628 256.139 146.6L254.207 146.082ZM254.141 146.937C254.167 147.22 254.236 147.495 254.353 147.756L256.18 146.942C256.156 146.888 256.139 146.828 256.133 146.756L254.141 146.937ZM254.781 146.474L254.639 146.553L255.609 148.302L255.751 148.223L254.781 146.474ZM255.959 146.878C255.919 146.816 255.886 146.738 255.871 146.628L253.89 146.899C253.942 147.284 254.073 147.649 254.289 147.978L255.959 146.878ZM255.872 146.632C255.855 146.504 255.864 146.397 255.889 146.303L253.957 145.785C253.859 146.15 253.84 146.523 253.889 146.895L255.872 146.632ZM255.889 146.303C255.919 146.189 255.953 146.17 255.958 146.167L254.784 144.547C254.352 144.86 254.087 145.299 253.957 145.785L255.889 146.303ZM255.962 146.163C255.954 146.17 255.941 146.178 255.924 146.185C255.906 146.192 255.89 146.196 255.878 146.197C255.852 146.201 255.858 146.194 255.909 146.208L256.427 144.276C255.884 144.13 255.291 144.176 254.78 144.55L255.962 146.163ZM255.909 146.208C255.916 146.21 255.92 146.211 255.92 146.211C255.92 146.212 255.921 146.212 255.922 146.213C255.924 146.214 255.942 146.228 255.968 146.272L257.687 145.251C257.407 144.779 256.983 144.425 256.427 144.276L255.909 146.208ZM255.971 146.277C256.033 146.38 256.076 146.512 256.078 146.701L258.078 146.674C258.071 146.168 257.947 145.683 257.685 145.247L255.971 146.277ZM259.902 143.941C259.857 144.109 259.818 144.274 259.785 144.438L261.747 144.828C261.77 144.71 261.799 144.587 261.833 144.459L259.902 143.941ZM259.785 144.439C259.753 144.601 259.727 144.761 259.708 144.921L261.693 145.164C261.706 145.055 261.724 144.943 261.747 144.827L259.785 144.439ZM260.605 144.047L260.514 144.056L260.706 146.047L260.796 146.038L260.605 144.047ZM261.606 145.144C261.621 144.985 261.625 144.812 261.603 144.638L259.618 144.888C259.617 144.88 259.618 144.881 259.618 144.894C259.618 144.907 259.617 144.928 259.614 144.959L261.606 145.144ZM261.603 144.638C261.579 144.453 261.524 144.25 261.41 144.054L259.68 145.057C259.633 144.976 259.621 144.912 259.618 144.888L261.603 144.638ZM261.41 144.054C261.284 143.837 261.109 143.67 260.909 143.552L259.897 145.278C259.82 145.232 259.739 145.159 259.68 145.057L261.41 144.054ZM260.936 143.569C260.768 143.463 260.593 143.398 260.434 143.355L259.916 145.287C259.926 145.29 259.927 145.29 259.919 145.287C259.912 145.285 259.895 145.277 259.87 145.261L260.936 143.569ZM260.434 143.355L257.206 142.49L256.688 144.422L259.916 145.287L260.434 143.355ZM257.206 142.49C257.003 142.436 256.809 142.392 256.637 142.367L256.357 144.348C256.415 144.356 256.521 144.377 256.688 144.422L257.206 142.49ZM256.639 142.368C256.458 142.342 256.207 142.326 255.945 142.399L256.482 144.325C256.416 144.344 256.369 144.346 256.353 144.346C256.336 144.346 256.335 144.345 256.355 144.347L256.639 142.368ZM255.987 142.388C255.71 142.452 255.422 142.612 255.222 142.906L256.877 144.029C256.819 144.114 256.745 144.187 256.66 144.241C256.577 144.295 256.499 144.322 256.44 144.336L255.987 142.388ZM255.249 142.868C255.109 143.055 255.034 143.256 254.991 143.418L256.923 143.935C256.924 143.932 256.921 143.942 256.912 143.963C256.903 143.984 256.884 144.022 256.849 144.068L255.249 142.868ZM254.991 143.418C254.97 143.496 254.953 143.574 254.94 143.652L256.912 143.984C256.916 143.964 256.919 143.948 256.923 143.935L254.991 143.418ZM254.939 143.657C254.927 143.735 254.918 143.813 254.912 143.891L256.907 144.036C256.908 144.014 256.911 143.995 256.913 143.979L254.939 143.657ZM256.026 142.97L255.88 142.953L255.647 144.939L255.793 144.957L256.026 142.97ZM256.763 143.992C256.765 143.932 256.77 143.86 256.778 143.776L254.785 143.6C254.776 143.706 254.769 143.807 254.765 143.901L256.763 143.992ZM256.778 143.776C256.785 143.69 256.794 143.604 256.804 143.516L254.818 143.284C254.805 143.39 254.795 143.496 254.785 143.6L256.778 143.776ZM256.804 143.516C256.814 143.431 256.825 143.352 256.837 143.278L254.861 142.966C254.845 143.069 254.83 143.175 254.818 143.284L256.804 143.516ZM256.84 143.255C256.851 143.17 256.862 143.099 256.872 143.04L254.898 142.718C254.884 142.8 254.871 142.89 254.858 142.988L256.84 143.255ZM256.876 143.008C256.885 142.939 256.892 142.89 256.897 142.857L254.917 142.57C254.911 142.617 254.902 142.678 254.893 142.751L256.876 143.008ZM256.896 142.864C256.899 142.843 256.902 142.824 256.904 142.811C256.904 142.806 256.906 142.796 256.907 142.785C256.908 142.782 256.908 142.777 256.909 142.771C256.909 142.768 256.911 142.754 256.912 142.736C256.913 142.729 256.915 142.708 256.915 142.681C256.916 142.668 256.916 142.64 256.915 142.604C256.914 142.598 256.911 142.477 256.864 142.335C256.85 142.294 256.765 142.026 256.486 141.832C256.315 141.714 256.092 141.639 255.845 141.656C255.617 141.672 255.448 141.762 255.35 141.829C255.175 141.949 255.086 142.094 255.066 142.126C255.032 142.182 255.01 142.228 255 142.251C254.979 142.299 254.967 142.339 254.962 142.352C254.956 142.371 254.952 142.386 254.95 142.395L256.882 142.913C256.879 142.921 256.875 142.937 256.869 142.955C256.865 142.969 256.852 143.008 256.831 143.056C256.821 143.079 256.8 143.126 256.765 143.181C256.745 143.214 256.656 143.358 256.481 143.478C256.383 143.546 256.215 143.635 255.987 143.651C255.74 143.669 255.516 143.594 255.345 143.475C255.066 143.281 254.982 143.013 254.968 142.972C254.92 142.83 254.917 142.709 254.917 142.703C254.915 142.667 254.916 142.64 254.916 142.627C254.917 142.6 254.919 142.579 254.919 142.572C254.921 142.555 254.922 142.542 254.922 142.538C254.923 142.533 254.924 142.529 254.924 142.527C254.925 142.521 254.925 142.518 254.924 142.523C254.923 142.53 254.922 142.543 254.918 142.563L256.896 142.864ZM255.904 143.654C255.872 143.653 255.858 143.651 255.868 143.652C255.877 143.653 255.895 143.656 255.926 143.663C255.989 143.675 256.08 143.697 256.203 143.73L256.721 141.798C256.471 141.731 256.168 141.657 255.927 141.654L255.904 143.654ZM256.203 143.73L260.057 144.762L260.575 142.83L256.721 141.798L256.203 143.73ZM260.057 144.762C260.208 144.803 260.381 144.833 260.566 144.832L260.553 142.832C260.575 142.832 260.589 142.834 260.591 142.834C260.594 142.835 260.589 142.834 260.575 142.83L260.057 144.762ZM260.597 144.832C260.818 144.823 261.043 144.765 261.252 144.645L260.255 142.911C260.348 142.858 260.443 142.836 260.521 142.833L260.597 144.832ZM261.252 144.645C261.448 144.532 261.598 144.384 261.71 144.236L260.117 143.027C260.131 143.008 260.174 142.958 260.255 142.911L261.252 144.645ZM261.71 144.236C261.816 144.096 261.899 143.944 261.966 143.799L260.149 142.964C260.136 142.991 260.126 143.01 260.12 143.021C260.113 143.033 260.112 143.034 260.117 143.027L261.71 144.236ZM260.507 144.217L260.582 144.266L261.682 142.596L261.608 142.546L260.507 144.217ZM260.211 143.042C260.149 143.189 260.092 143.337 260.041 143.486L261.932 144.138C261.968 144.032 262.009 143.926 262.054 143.819L260.211 143.042ZM260.041 143.486C259.989 143.635 259.943 143.787 259.902 143.941L261.833 144.459C261.863 144.349 261.896 144.242 261.932 144.138L260.041 143.486ZM257.702 139.278L257.758 139.231L256.481 137.692L256.424 137.739L257.702 139.278ZM256.495 139.243C257.966 140.42 259.351 141.353 260.646 142.028L261.57 140.254C260.421 139.656 259.146 138.803 257.744 137.681L256.495 139.243ZM260.659 142.035C260.874 142.143 261.084 142.235 261.287 142.309L261.965 140.427C261.852 140.386 261.717 140.328 261.557 140.248L260.659 142.035ZM260.66 141.109L260.546 141.535L262.478 142.053L262.592 141.627L260.66 141.109ZM261.86 140.856C261.86 140.856 261.857 140.855 261.848 140.852C261.84 140.848 261.829 140.843 261.814 140.836C261.784 140.822 261.745 140.802 261.696 140.776L260.756 142.541C260.89 142.613 261.031 142.682 261.165 142.732L261.86 140.856ZM261.711 140.784C261.202 140.502 260.597 140.122 259.891 139.638L258.76 141.287C259.499 141.794 260.16 142.211 260.741 142.533L261.711 140.784ZM259.892 139.639C259.181 139.15 258.585 138.711 258.099 138.324L256.851 139.886C257.384 140.312 258.021 140.779 258.758 141.286L259.892 139.639ZM257.028 138.21L256.99 138.229L257.884 140.019L257.922 140L257.028 138.21ZM256.485 138.818C256.418 139.025 256.325 139.356 256.207 139.795L258.139 140.313C258.256 139.875 258.339 139.586 258.389 139.43L256.485 138.818ZM256.207 139.795C256.134 140.07 256.079 140.335 256.055 140.58L258.045 140.777C258.055 140.676 258.082 140.524 258.139 140.313L256.207 139.795ZM256.055 140.58C256.031 140.819 256.03 141.107 256.117 141.391L258.029 140.804C258.036 140.825 258.039 140.841 258.04 140.849C258.041 140.858 258.041 140.861 258.041 140.857C258.041 140.854 258.041 140.846 258.041 140.832C258.042 140.818 258.043 140.8 258.045 140.777L256.055 140.58ZM256.115 141.385C256.158 141.526 256.227 141.72 256.351 141.898L257.994 140.759C258.011 140.783 258.022 140.802 258.028 140.814C258.035 140.827 258.039 140.835 258.04 140.838C258.042 140.843 258.038 140.835 258.031 140.81L256.115 141.385ZM256.336 141.877C256.418 142.002 256.514 142.11 256.604 142.2L258.019 140.787C258.006 140.774 257.999 140.766 257.997 140.763C257.996 140.762 257.996 140.763 257.998 140.765C258 140.768 258.004 140.773 258.008 140.78L256.336 141.877ZM256.649 142.243C256.652 142.245 256.649 142.243 256.643 142.237C256.64 142.234 256.634 142.229 256.627 142.221C256.62 142.215 256.608 142.202 256.594 142.186L258.094 140.863C258.042 140.804 257.988 140.757 257.974 140.745L256.649 142.243ZM256.477 141.024L256.423 141.119L258.155 142.119L258.21 142.024L256.477 141.024ZM257.791 140.754C257.534 140.605 257.337 140.488 257.197 140.4C257.127 140.356 257.077 140.323 257.043 140.3C257.001 140.271 257.006 140.272 257.031 140.295L255.707 141.793C255.824 141.897 255.995 142.007 256.137 142.096C256.304 142.2 256.522 142.33 256.787 142.484L257.791 140.754ZM257.301 141.406C257.433 141.066 257.594 140.528 257.781 139.83L255.849 139.312C255.662 140.009 255.526 140.453 255.437 140.682L257.301 141.406ZM257.781 139.83C257.879 139.463 257.967 139.088 258.043 138.705L256.083 138.312C256.014 138.655 255.936 138.988 255.849 139.312L257.781 139.83ZM262.034 139.333L262.068 139.328L261.759 137.352L261.725 137.357L262.034 139.333ZM262.865 138.646C262.926 138.459 262.981 138.281 263.031 138.114L261.115 137.542C261.069 137.694 261.018 137.858 260.962 138.034L262.865 138.646ZM263.031 138.113C263.082 137.943 263.128 137.781 263.169 137.628L261.237 137.11C261.201 137.244 261.161 137.387 261.114 137.542L263.031 138.113ZM263.169 137.628C263.225 137.418 263.269 137.212 263.298 137.01L261.318 136.726C261.302 136.838 261.276 136.966 261.237 137.11L263.169 137.628ZM263.298 137.012C263.332 136.773 263.338 136.531 263.307 136.288L261.324 136.546C261.329 136.586 261.33 136.644 261.318 136.724L263.298 137.012ZM263.308 136.294C263.275 136.028 263.194 135.774 263.068 135.538L261.304 136.481C261.315 136.501 261.32 136.518 261.323 136.539L263.308 136.294ZM263.068 135.538C262.926 135.273 262.731 135.056 262.517 134.877L261.237 136.414C261.298 136.465 261.309 136.49 261.304 136.481L263.068 135.538ZM262.669 136.255L262.737 136.167L261.152 134.948L261.084 135.036L262.669 136.255ZM261.431 136.416C261.648 136.546 261.799 136.635 261.87 136.675L262.854 134.934C262.81 134.909 262.683 134.834 262.458 134.7L261.431 136.416ZM261.87 136.675C261.901 136.693 261.986 136.744 262.14 136.843L263.213 135.155C263.063 135.059 262.937 134.981 262.854 134.934L261.87 136.675ZM262.151 136.849C262.225 136.895 262.282 136.931 262.323 136.957C262.344 136.971 262.359 136.98 262.369 136.987C262.38 136.995 262.379 136.994 262.371 136.988L263.552 135.374C263.476 135.319 263.343 135.235 263.202 135.148L262.151 136.849ZM262.397 137.006C262.404 137.011 262.406 137.013 262.405 137.012C262.404 137.011 262.402 137.009 262.398 137.006C262.394 137.003 262.388 136.999 262.381 136.992L263.706 135.494C263.642 135.438 263.577 135.391 263.526 135.356L262.397 137.006ZM262.096 135.922C262.069 136.004 262.036 136.108 261.998 136.23L263.909 136.821C263.944 136.705 263.971 136.621 263.991 136.564L262.096 135.922ZM261.998 136.23C261.96 136.351 261.921 136.48 261.88 136.616L263.793 137.198C263.834 137.064 263.872 136.938 263.909 136.821L261.998 136.23ZM261.88 136.616C261.837 136.757 261.795 136.897 261.755 137.038L263.678 137.588C263.715 137.458 263.754 137.328 263.793 137.198L261.88 136.616ZM261.755 137.038C261.716 137.175 261.682 137.298 261.653 137.405L263.585 137.922C263.61 137.829 263.641 137.718 263.678 137.589L261.755 137.038ZM261.653 137.405C261.637 137.463 261.568 137.733 261.447 138.203L263.383 138.702C263.506 138.224 263.573 137.968 263.585 137.922L261.653 137.405ZM261.447 138.203C261.324 138.679 261.259 138.93 261.249 138.969L263.18 139.487C263.194 139.435 263.263 139.169 263.383 138.702L261.447 138.203ZM261.941 138.266L261.802 138.306L262.349 140.229L262.488 140.19L261.941 138.266ZM262.939 138.762C262.35 137.756 261.953 137.097 261.778 136.846L260.138 137.992C260.256 138.161 260.605 138.734 261.213 139.773L262.939 138.762ZM261.778 136.846C261.615 136.614 261.45 136.399 261.282 136.201L259.759 137.497C259.881 137.64 260.007 137.805 260.138 137.992L261.778 136.846ZM261.284 136.203C261.11 135.997 260.927 135.81 260.734 135.653L259.476 137.208C259.544 137.264 259.638 137.354 259.757 137.495L261.284 136.203ZM260.74 135.659C260.629 135.567 260.517 135.482 260.405 135.407L259.292 137.069C259.338 137.099 259.396 137.143 259.469 137.203L260.74 135.659ZM260.418 135.416C260.298 135.333 260.173 135.259 260.041 135.196L259.175 136.998C259.203 137.012 259.238 137.032 259.28 137.06L260.418 135.416ZM260.064 135.207C259.945 135.146 259.822 135.093 259.695 135.048L259.028 136.933C259.071 136.949 259.112 136.966 259.151 136.987L260.064 135.207ZM259.693 135.047C259.578 135.007 259.458 134.97 259.332 134.937L258.815 136.868C258.899 136.891 258.97 136.913 259.03 136.934L259.693 135.047ZM259.332 134.937C259.08 134.869 258.805 134.831 258.522 134.857L258.706 136.848C258.694 136.849 258.725 136.844 258.815 136.868L259.332 134.937ZM258.528 134.856C258.259 134.879 257.985 134.956 257.732 135.112L258.777 136.817C258.754 136.831 258.733 136.839 258.718 136.844C258.703 136.849 258.696 136.849 258.7 136.849L258.528 134.856ZM257.744 135.104C257.488 135.256 257.288 135.465 257.141 135.703L258.845 136.75C258.843 136.755 258.835 136.766 258.82 136.781C258.805 136.797 258.786 136.812 258.765 136.824L257.744 135.104ZM257.15 135.689C257.015 135.901 256.921 136.131 256.859 136.365L258.791 136.882C258.81 136.811 258.829 136.777 258.836 136.765L257.15 135.689ZM256.859 136.365C256.816 136.526 256.797 136.687 256.791 136.837L258.789 136.917C258.79 136.897 258.791 136.884 258.792 136.878C258.793 136.872 258.793 136.874 258.791 136.882L256.859 136.365ZM256.79 136.843C256.785 136.992 256.792 137.141 256.81 137.289L258.796 137.05C258.789 136.996 258.788 136.95 258.789 136.911L256.79 136.843ZM256.808 137.267C256.823 137.419 256.85 137.57 256.888 137.718L258.823 137.212C258.811 137.166 258.803 137.119 258.798 137.071L256.808 137.267ZM256.892 137.729C256.931 137.872 256.981 138.014 257.046 138.151L258.851 137.289C258.845 137.275 258.833 137.247 258.82 137.2L256.892 137.729ZM257.436 136.861L257.305 136.939L258.331 138.656L258.462 138.578L257.436 136.861ZM258.671 137.275C258.638 137.222 258.612 137.166 258.592 137.108L256.698 137.752C256.766 137.951 256.855 138.141 256.965 138.32L258.671 137.275ZM258.595 137.117C258.571 137.045 258.557 136.978 258.549 136.914L256.564 137.16C256.588 137.359 256.633 137.553 256.695 137.743L258.595 137.117ZM258.549 136.914C258.54 136.841 258.537 136.772 258.541 136.707L256.544 136.594C256.534 136.783 256.54 136.972 256.564 137.16L258.549 136.914ZM258.541 136.71C258.545 136.641 258.555 136.587 258.566 136.545L256.634 136.027C256.585 136.212 256.556 136.4 256.544 136.59L258.541 136.71ZM258.566 136.545C258.597 136.429 258.633 136.359 258.66 136.318L256.997 135.207C256.828 135.46 256.711 135.738 256.634 136.027L258.566 136.545ZM258.667 136.307C258.681 136.286 258.691 136.274 258.697 136.268C258.7 136.265 258.702 136.263 258.703 136.262C258.705 136.261 258.705 136.261 258.705 136.261L257.635 134.571C257.367 134.741 257.154 134.964 256.99 135.218L258.667 136.307ZM258.714 136.255C258.714 136.255 258.714 136.255 258.713 136.256C258.713 136.256 258.713 136.256 258.713 136.256C258.713 136.256 258.719 136.254 258.731 136.252L258.507 134.265C258.196 134.3 257.897 134.401 257.627 134.576L258.714 136.255ZM258.744 136.251C258.761 136.249 258.809 136.246 258.902 136.271L259.419 134.339C259.124 134.26 258.812 134.226 258.494 134.266L258.744 136.251ZM258.902 136.271C258.966 136.288 259.031 136.315 259.1 136.355L260.117 134.633C259.898 134.504 259.665 134.405 259.419 134.339L258.902 136.271ZM259.1 136.355C259.19 136.409 259.279 136.472 259.367 136.548L260.673 135.034C260.499 134.883 260.313 134.749 260.117 134.633L259.1 136.355ZM259.371 136.552C259.461 136.629 259.548 136.715 259.633 136.812L261.142 135.5C260.995 135.331 260.837 135.173 260.668 135.03L259.371 136.552ZM259.64 136.82C259.741 136.934 259.835 137.048 259.923 137.163L261.511 135.947C261.392 135.792 261.267 135.641 261.135 135.492L259.64 136.82ZM259.918 137.156C260.006 137.274 260.087 137.388 260.159 137.498L261.833 136.404C261.735 136.254 261.629 136.104 261.516 135.954L259.918 137.156ZM260.159 137.498C260.241 137.625 260.315 137.74 260.381 137.843L262.071 136.774C261.999 136.66 261.92 136.537 261.833 136.404L260.159 137.498ZM260.379 137.84L260.718 138.38L262.412 137.317L262.073 136.777L260.379 137.84ZM260.714 138.373C260.845 138.587 260.956 138.762 261.044 138.896L262.714 137.795C262.642 137.686 262.544 137.53 262.416 137.324L260.714 138.373ZM260.644 134.135L260.68 134.138L260.81 132.142L260.774 132.14L260.644 134.135ZM261.691 133.462C261.722 133.373 261.755 133.295 261.79 133.229L260.017 132.303C259.931 132.467 259.859 132.639 259.798 132.817L261.691 133.462ZM261.798 133.213C261.817 133.176 261.849 133.123 261.907 133.054L260.367 131.777C260.229 131.943 260.107 132.124 260.009 132.319L261.798 133.213ZM261.907 133.054C261.941 133.012 261.966 132.994 261.978 132.987L260.939 131.278C260.717 131.413 260.527 131.584 260.367 131.777L261.907 133.054ZM261.988 132.981C261.974 132.99 261.966 132.992 261.968 132.992C261.97 132.991 261.983 132.987 262.01 132.984L261.76 130.999C261.479 131.034 261.192 131.12 260.929 131.284L261.988 132.981ZM262.028 132.981C262.038 132.98 262.077 132.976 262.157 132.997L262.675 131.066C262.377 130.986 262.062 130.955 261.741 131.002L262.028 132.981ZM262.157 132.997C262.287 133.032 262.358 133.076 262.399 133.11L263.688 131.581C263.389 131.33 263.043 131.164 262.675 131.066L262.157 132.997ZM262.406 133.116C262.474 133.172 262.502 133.216 262.516 133.247L264.331 132.408C264.178 132.077 263.953 131.8 263.68 131.575L262.406 133.116ZM262.512 133.239C262.542 133.306 262.572 133.404 262.586 133.546L264.576 133.34C264.543 133.021 264.467 132.709 264.335 132.416L262.512 133.239ZM262.586 133.536C262.6 133.696 262.599 133.855 262.58 134.014L264.566 134.249C264.601 133.95 264.605 133.65 264.577 133.35L262.586 133.536ZM262.58 134.014C262.559 134.189 262.521 134.383 262.464 134.597L264.396 135.115C264.475 134.821 264.532 134.532 264.566 134.249L262.58 134.014ZM262.464 134.597C262.465 134.594 262.464 134.598 262.46 134.61C262.457 134.621 262.452 134.636 262.446 134.656L264.351 135.266C264.366 135.216 264.383 135.162 264.396 135.115L262.464 134.597ZM262.446 134.654C262.431 134.702 262.414 134.756 262.401 134.804L264.333 135.321C264.332 135.324 264.333 135.322 264.336 135.311C264.339 135.301 264.344 135.287 264.35 135.268L262.446 134.654ZM263.497 134.071L263.337 134.05L263.079 136.033L263.238 136.054L263.497 134.071ZM264.187 135.245C264.233 135.024 264.269 134.817 264.295 134.625L262.312 134.362C262.294 134.495 262.267 134.653 262.229 134.838L264.187 135.245ZM264.296 134.611C264.32 134.408 264.332 134.201 264.334 133.99L262.334 133.977C262.333 134.12 262.325 134.253 262.31 134.377L264.296 134.611ZM264.334 133.99C264.335 133.739 264.309 133.485 264.239 133.238L262.315 133.785C262.323 133.812 262.335 133.872 262.334 133.977L264.334 133.99ZM264.237 133.232C264.171 133.004 264.074 132.788 263.948 132.586L262.253 133.648C262.281 133.692 262.302 133.739 262.317 133.791L264.237 133.232ZM263.948 132.587C263.786 132.327 263.571 132.119 263.327 131.958L262.227 133.628C262.243 133.639 262.25 133.646 262.253 133.648C262.255 133.651 262.254 133.65 262.253 133.647L263.948 132.587ZM263.323 131.955C263.079 131.796 262.811 131.687 262.536 131.613L262.018 133.545C262.13 133.575 262.196 133.608 262.23 133.63L263.323 131.955ZM262.536 131.613C261.995 131.468 261.379 131.469 260.832 131.824C260.309 132.165 260.037 132.711 259.895 133.241L261.827 133.758C261.902 133.479 261.975 133.467 261.923 133.501C261.896 133.519 261.872 133.522 261.872 133.522C261.879 133.522 261.923 133.519 262.018 133.545L262.536 131.613ZM259.895 133.241C259.853 133.398 259.819 133.56 259.793 133.726L261.768 134.041C261.784 133.936 261.804 133.842 261.827 133.758L259.895 133.241ZM260.942 132.897L260.731 132.862L260.408 134.836L260.618 134.87L260.942 132.897ZM261.567 133.916C261.604 133.372 261.554 132.822 261.327 132.337L259.515 133.185C259.546 133.251 259.596 133.426 259.572 133.782L261.567 133.916ZM261.329 132.341C261.085 131.814 260.655 131.423 260.07 131.266L259.553 133.198C259.556 133.199 259.552 133.198 259.544 133.194C259.536 133.19 259.526 133.183 259.517 133.176C259.509 133.168 259.504 133.162 259.503 133.161C259.502 133.16 259.507 133.165 259.513 133.18L261.329 132.341ZM260.07 131.266C259.633 131.149 259.097 131.135 258.611 131.448L259.692 133.13C259.663 133.149 259.632 133.163 259.602 133.173C259.572 133.183 259.547 133.187 259.53 133.189C259.499 133.191 259.502 133.185 259.553 133.198L260.07 131.266ZM258.617 131.443C258.199 131.707 257.952 132.105 257.838 132.533L259.77 133.05C259.775 133.03 259.776 133.04 259.759 133.064C259.741 133.09 259.715 133.116 259.685 133.135L258.617 131.443ZM257.838 132.533C257.761 132.818 257.744 133.108 257.772 133.395L259.763 133.199C259.755 133.125 259.762 133.078 259.77 133.05L257.838 132.533ZM257.772 133.387C257.797 133.67 257.867 133.945 257.983 134.206L259.81 133.392C259.786 133.338 259.77 133.278 259.763 133.206L257.772 133.387ZM258.412 132.924L258.27 133.003L259.24 134.752L259.382 134.673L258.412 132.924ZM259.59 133.328C259.549 133.266 259.517 133.188 259.502 133.078L257.52 133.349C257.573 133.734 257.703 134.099 257.92 134.428L259.59 133.328ZM259.503 133.082C259.486 132.954 259.494 132.848 259.52 132.753L257.588 132.235C257.49 132.6 257.47 132.973 257.52 133.345L259.503 133.082ZM259.52 132.753C259.55 132.639 259.584 132.62 259.589 132.617L258.415 130.997C257.983 131.31 257.718 131.749 257.588 132.235L259.52 132.753ZM259.593 132.613C259.585 132.62 259.572 132.628 259.554 132.635C259.537 132.642 259.521 132.646 259.508 132.648C259.482 132.651 259.488 132.644 259.54 132.658L260.057 130.726C259.515 130.58 258.922 130.626 258.411 131L259.593 132.613ZM259.54 132.658C259.547 132.66 259.55 132.661 259.551 132.661C259.551 132.662 259.552 132.662 259.553 132.663C259.555 132.664 259.572 132.678 259.599 132.722L261.318 131.701C261.038 131.229 260.614 130.875 260.057 130.726L259.54 132.658ZM259.601 132.727C259.663 132.83 259.706 132.962 259.709 133.151L261.709 133.124C261.702 132.618 261.578 132.133 261.315 131.697L259.601 132.727ZM262.064 128.779C262.397 128.869 262.689 128.978 262.941 129.103L263.831 127.312C263.445 127.12 263.027 126.967 262.581 126.847L262.064 128.779ZM262.946 129.106C263.193 129.227 263.389 129.359 263.543 129.496L264.873 128.003C264.566 127.729 264.214 127.5 263.826 127.31L262.946 129.106ZM263.541 129.494C263.657 129.598 263.716 129.695 263.748 129.785L265.634 129.119C265.479 128.682 265.217 128.311 264.876 128.005L263.541 129.494ZM263.747 129.783C263.767 129.84 263.776 129.907 263.747 130.014L265.679 130.532C265.804 130.066 265.797 129.586 265.635 129.121L263.747 129.783ZM263.747 130.014C263.742 130.031 263.738 130.037 263.734 130.042C263.729 130.048 263.71 130.07 263.658 130.101L264.664 131.829C265.156 131.543 265.525 131.107 265.679 130.532L263.747 130.014ZM263.662 130.098C263.526 130.177 263.341 130.237 263.082 130.252L263.196 132.248C263.716 132.219 264.213 132.089 264.659 131.832L263.662 130.098ZM263.088 130.251C262.812 130.265 262.517 130.234 262.199 130.149L261.681 132.081C262.183 132.215 262.688 132.274 263.19 132.249L263.088 130.251ZM262.199 130.149C261.862 130.059 261.576 129.952 261.333 129.831L260.445 131.624C260.824 131.811 261.237 131.962 261.681 132.081L262.199 130.149ZM261.339 129.834C261.099 129.713 260.914 129.585 260.773 129.455L259.417 130.925C259.715 131.199 260.059 131.429 260.439 131.621L261.339 129.834ZM260.775 129.457C260.665 129.354 260.613 129.263 260.587 129.183L258.686 129.804C258.829 130.241 259.083 130.614 259.414 130.922L260.775 129.457ZM260.586 129.18C260.566 129.119 260.558 129.044 260.589 128.927L258.657 128.409C258.534 128.869 258.534 129.344 258.687 129.806L260.586 129.18ZM260.589 128.927C260.596 128.899 260.603 128.874 260.677 128.828L259.645 127.115C259.16 127.407 258.808 127.846 258.657 128.409L260.589 128.927ZM260.682 128.826C260.799 128.754 260.963 128.697 261.205 128.682L261.083 126.686C260.57 126.717 260.079 126.851 259.641 127.118L260.682 128.826ZM261.205 128.682C261.463 128.666 261.748 128.694 262.064 128.779L262.581 126.847C262.081 126.713 261.58 126.655 261.083 126.686L261.205 128.682ZM261.551 131.487C261.88 131.575 262.22 131.636 262.569 131.669L262.757 129.678C262.515 129.655 262.285 129.613 262.068 129.555L261.551 131.487ZM262.576 131.669C262.926 131.7 263.27 131.701 263.605 131.67L263.421 129.679C263.215 129.698 262.992 129.698 262.75 129.677L262.576 131.669ZM263.605 131.67C263.981 131.636 264.352 131.54 264.69 131.356L263.732 129.6C263.681 129.628 263.586 129.664 263.421 129.679L263.605 131.67ZM264.696 131.352C265.073 131.143 265.408 130.803 265.541 130.308L263.609 129.791C263.624 129.733 263.653 129.681 263.686 129.642C263.717 129.606 263.737 129.597 263.725 129.604L264.696 131.352ZM265.541 130.308C265.656 129.877 265.577 129.459 265.378 129.108L263.638 130.094C263.628 130.076 263.608 130.034 263.599 129.972C263.59 129.908 263.595 129.844 263.609 129.791L265.541 130.308ZM265.378 129.107C265.215 128.819 264.993 128.583 264.737 128.392L263.544 129.998C263.606 130.044 263.629 130.078 263.638 130.094L265.378 129.107ZM264.742 128.396C264.523 128.231 264.279 128.086 264.018 127.957L263.133 129.751C263.303 129.835 263.437 129.917 263.539 129.994L264.742 128.396ZM264.027 127.962C263.782 127.838 263.541 127.731 263.304 127.644L262.614 129.521C262.769 129.578 262.939 129.652 263.124 129.746L264.027 127.962ZM263.304 127.644C263.083 127.563 262.865 127.493 262.651 127.436L262.133 129.368C262.284 129.408 262.444 129.459 262.614 129.521L263.304 127.644ZM262.651 127.436C262.321 127.347 261.985 127.288 261.643 127.258L261.468 129.25C261.694 129.27 261.916 129.309 262.133 129.368L262.651 127.436ZM261.643 127.258C261.302 127.228 260.968 127.228 260.643 127.264L260.86 129.252C261.039 129.233 261.241 129.23 261.468 129.25L261.643 127.258ZM260.655 127.263C260.292 127.298 259.932 127.394 259.604 127.583L260.601 129.316C260.632 129.299 260.705 129.267 260.848 129.253L260.655 127.263ZM259.619 127.575C259.252 127.777 258.928 128.109 258.799 128.59L260.731 129.107C260.715 129.169 260.684 129.226 260.646 129.27C260.611 129.312 260.584 129.326 260.587 129.324L259.619 127.575ZM258.799 128.59C258.694 128.982 258.741 129.372 258.902 129.72L260.716 128.877C260.724 128.894 260.737 128.928 260.741 128.975C260.746 129.024 260.741 129.07 260.731 129.107L258.799 128.59ZM258.898 129.71C259.033 130.01 259.234 130.26 259.473 130.464L260.772 128.944C260.749 128.924 260.736 128.909 260.73 128.901C260.723 128.893 260.721 128.888 260.721 128.887L258.898 129.71ZM259.469 130.461C259.667 130.632 259.89 130.783 260.13 130.92L261.117 129.18C260.967 129.095 260.856 129.016 260.776 128.947L259.469 130.461ZM260.139 130.925C260.372 131.054 260.61 131.166 260.852 131.261L261.579 129.398C261.424 129.337 261.267 129.263 261.108 129.175L260.139 130.925ZM260.861 131.264C261.089 131.351 261.319 131.425 261.551 131.487L262.068 129.555C261.903 129.511 261.737 129.457 261.57 129.394L260.861 131.264ZM261.266 127.024C262.269 127.293 263.093 126.785 263.658 126.086L262.103 124.828C261.954 125.013 261.853 125.073 261.816 125.089C261.8 125.096 261.796 125.096 261.799 125.095C261.803 125.095 261.799 125.096 261.783 125.092L261.266 127.024ZM263.855 125.233C263.765 124.844 263.59 124.473 263.298 124.167C263.006 123.86 262.643 123.668 262.255 123.564L261.737 125.496C261.826 125.52 261.849 125.545 261.851 125.547C261.854 125.551 261.882 125.58 261.906 125.681L263.855 125.233ZM262.255 123.564C261.806 123.444 261.227 123.378 260.699 123.656L261.63 125.426C261.559 125.464 261.514 125.461 261.533 125.461C261.555 125.46 261.619 125.464 261.737 125.496L262.255 123.564ZM260.706 123.652C260.239 123.893 259.941 124.3 259.813 124.778L261.745 125.295C261.746 125.292 261.739 125.318 261.711 125.355C261.682 125.392 261.648 125.417 261.624 125.429L260.706 123.652ZM259.813 124.778C259.681 125.27 259.732 125.812 260.081 126.275L261.678 125.071C261.707 125.11 261.733 125.165 261.742 125.225C261.751 125.282 261.741 125.31 261.745 125.295L259.813 124.778ZM260.077 126.27C260.388 126.688 260.836 126.909 261.266 127.024L261.783 125.092C261.703 125.071 261.664 125.05 261.652 125.043C261.642 125.037 261.659 125.046 261.682 125.077L260.077 126.27ZM264.546 126.512C264.46 126.488 264.416 126.462 264.397 126.448L263.228 128.07C263.466 128.242 263.731 128.36 264.004 128.437L264.546 126.512ZM264.393 126.445C264.339 126.406 264.299 126.366 264.267 126.326L262.681 127.544C262.838 127.748 263.023 127.925 263.232 128.073L264.393 126.445ZM264.274 126.335C264.226 126.271 264.184 126.199 264.148 126.118L262.323 126.936C262.418 127.149 262.535 127.348 262.674 127.534L264.274 126.335ZM264.151 126.127C264.098 126.005 264.048 125.876 264.002 125.741L262.109 126.385C262.172 126.571 262.242 126.752 262.319 126.928L264.151 126.127ZM262.296 125.412C262.151 125.581 262.06 125.617 262.036 125.624L262.609 127.54C263.1 127.393 263.498 127.083 263.814 126.714L262.296 125.412ZM262.04 125.623C261.94 125.652 261.878 125.647 261.832 125.635L261.314 127.567C261.748 127.683 262.185 127.665 262.604 127.542L262.04 125.623ZM261.832 125.635C261.784 125.622 261.745 125.603 261.708 125.576L260.516 127.182C260.757 127.36 261.026 127.489 261.314 127.567L261.832 125.635ZM261.704 125.573C261.66 125.54 261.627 125.505 261.601 125.464L259.921 126.55C260.082 126.798 260.283 127.01 260.52 127.184L261.704 125.573ZM261.601 125.464C261.598 125.46 261.582 125.435 261.573 125.366L259.591 125.632C259.634 125.951 259.737 126.265 259.921 126.55L261.601 125.464ZM261.573 125.366C261.567 125.316 261.567 125.247 261.594 125.149L259.662 124.631C259.575 124.955 259.545 125.292 259.591 125.632L261.573 125.366ZM261.594 125.149C261.614 125.073 261.641 125.04 261.699 125.003L260.631 123.312C260.142 123.62 259.811 124.075 259.662 124.631L261.594 125.149ZM261.703 125C261.715 124.992 261.723 124.989 261.727 124.987C261.731 124.986 261.734 124.985 261.737 124.985C261.741 124.984 261.767 124.981 261.824 124.996L262.341 123.065C261.755 122.908 261.157 122.976 260.627 123.314L261.703 125ZM261.824 124.996C261.876 125.011 261.895 125.026 261.919 125.058L263.536 123.881C263.237 123.472 262.826 123.195 262.341 123.065L261.824 124.996ZM261.915 125.054C261.974 125.136 262.033 125.259 262.068 125.451L264.035 125.087C263.955 124.654 263.797 124.245 263.539 123.886L261.915 125.054ZM263.809 125.923C264.232 125.432 264.462 125.462 264.582 125.495L265.1 123.563C263.975 123.261 263.012 123.785 262.295 124.616L263.809 125.923ZM264.582 125.495C264.672 125.519 264.729 125.556 264.79 125.667L266.542 124.701C266.228 124.132 265.735 123.733 265.1 123.563L264.582 125.495ZM264.792 125.671C264.829 125.736 264.869 125.853 264.801 126.107L266.733 126.625C266.906 125.978 266.879 125.308 266.54 124.698L264.792 125.671ZM264.801 126.107C264.765 126.243 264.714 126.342 264.656 126.417L266.247 127.629C266.477 127.328 266.636 126.988 266.733 126.625L264.801 126.107ZM264.656 126.417C264.612 126.474 264.574 126.5 264.534 126.517L265.319 128.357C265.693 128.197 266.005 127.947 266.247 127.629L264.656 126.417ZM264.548 126.512C264.544 126.513 264.543 126.513 264.545 126.513C264.546 126.513 264.548 126.512 264.55 126.512C264.552 126.512 264.553 126.512 264.551 126.512C264.549 126.512 264.543 126.511 264.534 126.509L264.016 128.44C264.445 128.555 264.886 128.534 265.305 128.363L264.548 126.512ZM265.118 124.108C263.993 123.807 263.082 124.451 262.452 125.261L264.031 126.489C264.24 126.219 264.397 126.104 264.486 126.06C264.552 126.028 264.575 126.033 264.601 126.04L265.118 124.108ZM262.287 126.174C262.414 126.579 262.608 126.974 262.914 127.29L264.349 125.897C264.33 125.877 264.264 125.793 264.195 125.576L262.287 126.174ZM262.914 127.29C263.245 127.631 263.673 127.826 264.099 127.94L264.617 126.008C264.4 125.95 264.344 125.892 264.349 125.897L262.914 127.29ZM264.099 127.94C264.596 128.073 265.121 128.048 265.607 127.792L264.677 126.022C264.676 126.022 264.677 126.021 264.68 126.02C264.684 126.019 264.686 126.019 264.685 126.019C264.685 126.019 264.68 126.02 264.669 126.019C264.658 126.018 264.641 126.015 264.617 126.008L264.099 127.94ZM265.607 127.792C266.13 127.517 266.439 127.053 266.577 126.535L264.646 126.018C264.633 126.065 264.623 126.072 264.632 126.06C264.637 126.054 264.644 126.046 264.653 126.038C264.663 126.03 264.671 126.025 264.677 126.022L265.607 127.792ZM266.577 126.535C266.714 126.026 266.658 125.502 266.381 125.033L264.657 126.047C264.659 126.049 264.657 126.046 264.655 126.04C264.653 126.033 264.651 126.025 264.65 126.017C264.649 126.009 264.649 126.003 264.649 126.002C264.649 126.001 264.649 126.006 264.646 126.018L266.577 126.535ZM266.381 125.033C266.089 124.535 265.625 124.244 265.118 124.108L264.601 126.04C264.659 126.056 264.679 126.07 264.677 126.069C264.677 126.069 264.673 126.066 264.668 126.061C264.663 126.055 264.659 126.05 264.657 126.046L266.381 125.033ZM266.053 124.332L266.088 124.326L265.779 122.35L265.744 122.356L266.053 124.332ZM266.885 123.645C266.945 123.457 267.001 123.28 267.051 123.112L265.134 122.54C265.089 122.692 265.038 122.856 264.981 123.032L266.885 123.645ZM267.051 123.111C267.102 122.941 267.148 122.78 267.189 122.626L265.257 122.109C265.221 122.242 265.18 122.386 265.134 122.54L267.051 123.111ZM267.189 122.626C267.245 122.417 267.289 122.21 267.318 122.008L265.338 121.724C265.322 121.836 265.295 121.964 265.257 122.109L267.189 122.626ZM267.317 122.01C267.352 121.772 267.358 121.529 267.327 121.286L265.343 121.544C265.348 121.584 265.35 121.642 265.338 121.722L267.317 122.01ZM267.327 121.292C267.295 121.027 267.214 120.773 267.088 120.537L265.324 121.479C265.334 121.499 265.34 121.516 265.342 121.538L267.327 121.292ZM267.088 120.537C266.946 120.272 266.751 120.054 266.537 119.876L265.256 121.412C265.318 121.463 265.329 121.489 265.324 121.479L267.088 120.537ZM266.689 121.253L266.757 121.166L265.171 119.946L265.104 120.034L266.689 121.253ZM265.451 121.414C265.668 121.544 265.819 121.634 265.889 121.674L266.874 119.933C266.83 119.908 266.702 119.832 266.477 119.698L265.451 121.414ZM265.889 121.674C265.921 121.691 266.005 121.743 266.16 121.841L267.233 120.153C267.082 120.057 266.957 119.979 266.874 119.933L265.889 121.674ZM266.171 121.848C266.245 121.893 266.302 121.929 266.343 121.956C266.364 121.969 266.379 121.978 266.388 121.985C266.4 121.993 266.399 121.992 266.391 121.986L267.571 120.372C267.496 120.317 267.363 120.233 267.222 120.146L266.171 121.848ZM266.416 122.004C266.424 122.01 266.426 122.011 266.425 122.01C266.424 122.01 266.421 122.008 266.418 122.005C266.414 122.002 266.408 121.997 266.401 121.99L267.726 120.492C267.662 120.436 267.597 120.389 267.546 120.354L266.416 122.004ZM266.116 120.921C266.088 121.002 266.055 121.106 266.017 121.229L267.928 121.819C267.964 121.703 267.991 121.619 268.01 121.562L266.116 120.921ZM266.017 121.229C265.98 121.35 265.941 121.478 265.899 121.614L267.813 122.196C267.853 122.062 267.892 121.937 267.928 121.819L266.017 121.229ZM265.899 121.614C265.857 121.755 265.815 121.896 265.775 122.037L267.698 122.587C267.735 122.456 267.773 122.326 267.813 122.196L265.899 121.614ZM265.775 122.036C265.735 122.174 265.701 122.296 265.673 122.403L267.605 122.921C267.63 122.827 267.66 122.716 267.698 122.587L265.775 122.036ZM265.673 122.403C265.657 122.461 265.587 122.731 265.466 123.201L267.403 123.7C267.526 123.223 267.592 122.967 267.605 122.921L265.673 122.403ZM265.466 123.201C265.344 123.677 265.279 123.928 265.268 123.967L267.2 124.485C267.214 124.433 267.283 124.168 267.403 123.7L265.466 123.201ZM265.961 123.264L265.822 123.304L266.369 125.228L266.508 125.188L265.961 123.264ZM266.958 123.761C266.369 122.755 265.973 122.096 265.797 121.845L264.158 122.99C264.276 123.159 264.624 123.732 265.232 124.771L266.958 123.761ZM265.797 121.845C265.635 121.612 265.47 121.397 265.302 121.199L263.779 122.496C263.901 122.639 264.027 122.803 264.158 122.99L265.797 121.845ZM265.304 121.201C265.13 120.996 264.946 120.808 264.753 120.652L263.496 122.207C263.564 122.262 263.658 122.353 263.777 122.494L265.304 121.201ZM264.76 120.657C264.649 120.566 264.537 120.481 264.425 120.406L263.312 122.067C263.357 122.098 263.416 122.141 263.489 122.201L264.76 120.657ZM264.437 120.414C264.318 120.331 264.193 120.257 264.061 120.194L263.194 121.996C263.223 122.01 263.258 122.03 263.299 122.059L264.437 120.414ZM264.084 120.205C263.965 120.144 263.842 120.091 263.715 120.046L263.047 121.932C263.09 121.947 263.132 121.965 263.171 121.985L264.084 120.205ZM263.713 120.046C263.598 120.005 263.477 119.968 263.352 119.935L262.834 121.867C262.919 121.889 262.99 121.911 263.049 121.932L263.713 120.046ZM263.352 119.935C263.1 119.867 262.825 119.829 262.542 119.855L262.725 121.847C262.713 121.848 262.745 121.843 262.834 121.867L263.352 119.935ZM262.548 119.854C262.279 119.878 262.005 119.955 261.752 120.11L262.796 121.815C262.774 121.829 262.753 121.838 262.737 121.843C262.722 121.847 262.715 121.847 262.72 121.847L262.548 119.854ZM261.764 120.103C261.507 120.255 261.307 120.463 261.161 120.702L262.865 121.748C262.862 121.753 262.854 121.765 262.84 121.78C262.824 121.795 262.806 121.81 262.784 121.823L261.764 120.103ZM261.17 120.687C261.034 120.9 260.941 121.129 260.879 121.363L262.81 121.881C262.829 121.81 262.848 121.775 262.856 121.763L261.17 120.687ZM260.879 121.363C260.835 121.524 260.816 121.685 260.81 121.836L262.809 121.915C262.809 121.895 262.811 121.883 262.812 121.876C262.813 121.87 262.813 121.872 262.81 121.881L260.879 121.363ZM260.81 121.841C260.805 121.99 260.812 122.139 260.83 122.287L262.816 122.048C262.809 121.995 262.808 121.949 262.809 121.91L260.81 121.841ZM260.828 122.266C260.843 122.418 260.869 122.568 260.908 122.716L262.843 122.21C262.831 122.164 262.823 122.117 262.818 122.07L260.828 122.266ZM260.911 122.728C260.95 122.87 261.001 123.012 261.066 123.149L262.871 122.287C262.864 122.273 262.853 122.245 262.84 122.198L260.911 122.728ZM261.456 121.859L261.325 121.938L262.35 123.655L262.481 123.577L261.456 121.859ZM262.69 122.274C262.657 122.22 262.631 122.165 262.612 122.106L260.718 122.75C260.786 122.95 260.875 123.139 260.985 123.319L262.69 122.274ZM262.615 122.115C262.591 122.044 262.576 121.976 262.568 121.913L260.584 122.159C260.608 122.357 260.653 122.551 260.715 122.741L262.615 122.115ZM262.568 121.913C262.559 121.839 262.557 121.77 262.561 121.705L260.564 121.592C260.553 121.781 260.56 121.97 260.584 122.159L262.568 121.913ZM262.561 121.709C262.565 121.639 262.574 121.585 262.586 121.543L260.654 121.025C260.604 121.21 260.576 121.399 260.564 121.588L262.561 121.709ZM262.586 121.543C262.617 121.427 262.652 121.357 262.68 121.316L261.016 120.205C260.848 120.458 260.731 120.737 260.654 121.025L262.586 121.543ZM262.687 121.305C262.7 121.284 262.711 121.272 262.717 121.266C262.72 121.263 262.722 121.261 262.723 121.26C262.724 121.259 262.725 121.259 262.725 121.259L261.655 119.569C261.387 119.739 261.174 119.963 261.009 120.216L262.687 121.305ZM262.733 121.254C262.734 121.253 262.733 121.254 262.733 121.254C262.732 121.254 262.732 121.254 262.733 121.254C262.733 121.254 262.738 121.252 262.751 121.25L262.527 119.263C262.216 119.298 261.917 119.4 261.647 119.575L262.733 121.254ZM262.764 121.249C262.78 121.247 262.829 121.244 262.921 121.269L263.439 119.337C263.144 119.258 262.832 119.225 262.514 119.265L262.764 121.249ZM262.921 121.269C262.985 121.286 263.051 121.313 263.119 121.354L264.136 119.631C263.918 119.502 263.685 119.403 263.439 119.337L262.921 121.269ZM263.119 121.354C263.21 121.407 263.299 121.471 263.386 121.546L264.693 120.032C264.518 119.882 264.333 119.748 264.136 119.631L263.119 121.354ZM263.391 121.55C263.481 121.627 263.568 121.713 263.652 121.81L265.162 120.498C265.015 120.329 264.857 120.172 264.688 120.028L263.391 121.55ZM263.66 121.818C263.76 121.932 263.855 122.046 263.942 122.161L265.531 120.945C265.412 120.79 265.287 120.639 265.155 120.49L263.66 121.818ZM263.937 122.154C264.026 122.272 264.106 122.386 264.178 122.496L265.852 121.402C265.754 121.252 265.649 121.102 265.536 120.952L263.937 122.154ZM264.178 122.496C264.261 122.623 264.335 122.738 264.401 122.841L266.091 121.772C266.019 121.659 265.939 121.535 265.852 121.402L264.178 122.496ZM264.399 122.838L264.738 123.379L266.432 122.315L266.093 121.775L264.399 122.838ZM264.733 123.372C264.865 123.585 264.976 123.761 265.064 123.894L266.734 122.793C266.662 122.684 266.563 122.529 266.436 122.322L264.733 123.372ZM264.663 119.134L264.699 119.136L264.83 117.14L264.794 117.138L264.663 119.134ZM265.711 118.461C265.742 118.371 265.775 118.293 265.81 118.227L264.037 117.301C263.951 117.466 263.879 117.637 263.818 117.815L265.711 118.461ZM265.818 118.211C265.836 118.174 265.869 118.121 265.926 118.052L264.387 116.776C264.249 116.942 264.126 117.122 264.029 117.317L265.818 118.211ZM265.926 118.052C265.961 118.01 265.986 117.992 265.997 117.986L264.958 116.277C264.736 116.412 264.547 116.583 264.387 116.776L265.926 118.052ZM266.007 117.979C265.993 117.988 265.985 117.991 265.987 117.99C265.99 117.989 266.003 117.985 266.029 117.982L265.779 115.997C265.499 116.033 265.212 116.118 264.948 116.283L266.007 117.979ZM266.047 117.979C266.057 117.978 266.097 117.974 266.177 117.996L266.695 116.064C266.397 115.984 266.082 115.954 265.761 116L266.047 117.979ZM266.177 117.996C266.307 118.03 266.378 118.074 266.418 118.109L267.707 116.579C267.409 116.328 267.062 116.162 266.695 116.064L266.177 117.996ZM266.426 118.115C266.493 118.17 266.521 118.215 266.536 118.245L268.351 117.406C268.198 117.075 267.973 116.799 267.7 116.573L266.426 118.115ZM266.532 118.237C266.562 118.304 266.592 118.402 266.606 118.544L268.596 118.339C268.563 118.02 268.487 117.707 268.355 117.414L266.532 118.237ZM266.605 118.535C266.62 118.694 266.618 118.853 266.599 119.012L268.586 119.247C268.621 118.948 268.625 118.648 268.597 118.348L266.605 118.535ZM266.599 119.012C266.579 119.187 266.541 119.381 266.484 119.596L268.415 120.113C268.494 119.819 268.552 119.53 268.586 119.247L266.599 119.012ZM266.484 119.596C266.484 119.593 266.484 119.596 266.48 119.608C266.477 119.619 266.472 119.634 266.465 119.655L268.37 120.264C268.386 120.214 268.403 120.16 268.415 120.113L266.484 119.596ZM266.466 119.652C266.45 119.701 266.434 119.754 266.421 119.802L268.353 120.319C268.352 120.323 268.353 120.32 268.356 120.309C268.359 120.299 268.363 120.285 268.37 120.266L266.466 119.652ZM267.516 119.069L267.357 119.048L267.098 121.031L267.258 121.052L267.516 119.069ZM268.207 120.243C268.253 120.022 268.289 119.815 268.314 119.623L266.332 119.361C266.314 119.493 266.287 119.651 266.248 119.836L268.207 120.243ZM268.316 119.609C268.34 119.407 268.352 119.199 268.354 118.988L266.354 118.975C266.353 119.119 266.344 119.252 266.33 119.375L268.316 119.609ZM268.354 118.988C268.355 118.738 268.329 118.483 268.258 118.236L266.335 118.783C266.343 118.81 266.354 118.87 266.354 118.975L268.354 118.988ZM268.257 118.23C268.191 118.002 268.094 117.786 267.968 117.584L266.273 118.646C266.3 118.691 266.321 118.737 266.336 118.789L268.257 118.23ZM267.968 117.585C267.805 117.325 267.591 117.117 267.347 116.956L266.246 118.626C266.262 118.637 266.27 118.644 266.273 118.647C266.275 118.649 266.274 118.648 266.272 118.646L267.968 117.585ZM267.343 116.954C267.099 116.795 266.831 116.685 266.556 116.611L266.038 118.543C266.15 118.573 266.215 118.606 266.25 118.629L267.343 116.954ZM266.556 116.611C266.015 116.466 265.399 116.467 264.852 116.823C264.328 117.163 264.057 117.71 263.915 118.239L265.847 118.757C265.921 118.477 265.994 118.466 265.942 118.499C265.915 118.517 265.892 118.521 265.892 118.521C265.899 118.52 265.943 118.517 266.038 118.543L266.556 116.611ZM263.915 118.239C263.873 118.396 263.839 118.558 263.812 118.724L265.787 119.039C265.804 118.934 265.824 118.841 265.847 118.757L263.915 118.239ZM264.962 117.895L264.751 117.86L264.427 119.834L264.638 119.868L264.962 117.895ZM265.587 118.914C265.623 118.371 265.574 117.82 265.347 117.335L263.535 118.183C263.566 118.249 263.615 118.424 263.591 118.78L265.587 118.914ZM265.349 117.34C265.105 116.812 264.675 116.421 264.09 116.264L263.572 118.196C263.576 118.197 263.572 118.197 263.564 118.192C263.555 118.188 263.546 118.182 263.537 118.174C263.528 118.167 263.524 118.161 263.523 118.159C263.522 118.158 263.526 118.164 263.533 118.178L265.349 117.34ZM264.09 116.264C263.653 116.147 263.116 116.134 262.63 116.446L263.711 118.129C263.682 118.147 263.652 118.162 263.621 118.172C263.591 118.181 263.567 118.185 263.55 118.187C263.519 118.19 263.522 118.183 263.572 118.196L264.09 116.264ZM262.637 116.442C262.219 116.706 261.972 117.104 261.858 117.531L263.79 118.048C263.795 118.029 263.795 118.038 263.779 118.062C263.761 118.088 263.734 118.114 263.705 118.133L262.637 116.442ZM261.858 117.531C261.781 117.816 261.764 118.107 261.792 118.393L263.782 118.197C263.775 118.123 263.782 118.076 263.79 118.048L261.858 117.531ZM261.791 118.385C261.817 118.668 261.887 118.943 262.003 119.204L263.83 118.39C263.806 118.336 263.79 118.276 263.783 118.205L261.791 118.385ZM262.431 117.923L262.289 118.001L263.26 119.75L263.402 119.671L262.431 117.923ZM263.61 118.326C263.569 118.264 263.537 118.186 263.522 118.076L261.54 118.347C261.593 118.732 261.723 119.097 261.939 119.426L263.61 118.326ZM263.522 118.08C263.505 117.952 263.514 117.846 263.539 117.751L261.607 117.234C261.51 117.598 261.49 117.971 261.54 118.343L263.522 118.08ZM263.539 117.751C263.57 117.638 263.603 117.619 263.608 117.615L262.435 115.996C262.003 116.308 261.738 116.747 261.607 117.234L263.539 117.751ZM263.613 117.612C263.604 117.618 263.591 117.626 263.574 117.633C263.557 117.64 263.541 117.644 263.528 117.646C263.502 117.65 263.508 117.642 263.56 117.656L264.077 115.724C263.534 115.579 262.941 115.624 262.43 115.999L263.613 117.612ZM263.56 117.656C263.567 117.658 263.57 117.659 263.57 117.66C263.571 117.66 263.571 117.66 263.573 117.661C263.575 117.663 263.592 117.677 263.618 117.721L265.338 116.7C265.057 116.227 264.634 115.873 264.077 115.724L263.56 117.656ZM263.621 117.725C263.683 117.829 263.726 117.961 263.729 118.149L265.728 118.122C265.722 117.617 265.598 117.132 265.335 116.695L263.621 117.725ZM268.4 113.624L267.805 113.465L267.288 115.397L267.883 115.556L268.4 113.624ZM266.586 114.154C266.372 114.896 266.171 115.645 265.983 116.402L267.924 116.884C268.106 116.151 268.301 115.426 268.508 114.708L266.586 114.154ZM266.517 115.743L266.42 115.79L267.294 117.589L267.391 117.542L266.517 115.743ZM267.693 116.142C267.291 115.527 266.746 114.834 266.071 114.066L264.568 115.385C265.208 116.114 265.688 116.73 266.021 117.238L267.693 116.142ZM266.072 114.066C265.403 113.303 264.83 112.702 264.36 112.278L263.021 113.765C263.406 114.111 263.919 114.645 264.568 115.385L266.072 114.066ZM264.602 113.433L264.674 113.273L262.851 112.45L262.779 112.61L264.602 113.433ZM263.551 113.839C263.622 113.855 263.736 113.883 263.899 113.926L264.417 111.994C264.243 111.948 264.093 111.91 263.974 111.884L263.551 113.839ZM263.899 113.926L266.994 114.756L267.512 112.824L264.417 111.994L263.899 113.926ZM268.219 114.049L268.221 114.042L266.289 113.524L266.287 113.531L268.219 114.049ZM268.221 114.042C268.29 113.781 268.325 113.467 268.242 113.14L266.304 113.632C266.291 113.58 266.29 113.542 266.291 113.523C266.292 113.505 266.294 113.505 266.289 113.524L268.221 114.042ZM268.242 113.14C268.154 112.794 267.95 112.523 267.771 112.331L266.308 113.695C266.339 113.728 266.348 113.743 266.346 113.739C266.344 113.736 266.338 113.727 266.33 113.709C266.323 113.692 266.313 113.666 266.304 113.632L268.242 113.14ZM267.807 113.654L267.872 113.576L266.337 112.295L266.272 112.372L267.807 113.654ZM266.581 113.787L267.33 114.248L268.377 112.543L267.628 112.083L266.581 113.787ZM266.898 113.1C266.825 113.335 266.769 113.522 266.735 113.651L268.667 114.169C268.691 114.079 268.737 113.924 268.809 113.691L266.898 113.1ZM267.442 114.876L268.023 115.031L268.541 113.1L267.96 112.944L267.442 114.876ZM268.023 115.031C268.333 115.114 268.776 115.158 269.203 114.92L268.229 113.173C268.438 113.057 268.592 113.113 268.541 113.1L268.023 115.031ZM269.203 114.92C269.59 114.704 269.805 114.338 269.928 114.078L268.12 113.223C268.093 113.28 268.079 113.296 268.085 113.288C268.09 113.282 268.134 113.226 268.229 113.173L269.203 114.92ZM268.474 114.486L268.548 114.535L269.649 112.865L269.574 112.816L268.474 114.486ZM268.178 113.31C268.053 113.604 267.95 113.904 267.868 114.21L269.8 114.728C269.858 114.512 269.931 114.299 270.019 114.09L268.178 113.31ZM267.868 114.21C267.779 114.543 267.713 114.87 267.674 115.19L269.659 115.433C269.686 115.216 269.732 114.981 269.8 114.728L267.868 114.21ZM268.571 114.316L268.481 114.325L268.672 116.316L268.762 116.307L268.571 114.316ZM269.573 115.403C269.597 115.116 269.594 114.691 269.366 114.311L267.65 115.337C267.594 115.243 267.584 115.173 267.583 115.165C267.581 115.155 267.585 115.176 267.58 115.238L269.573 115.403ZM269.366 114.311C269.116 113.891 268.71 113.707 268.4 113.624L267.883 115.556C267.934 115.57 267.772 115.541 267.65 115.337L269.366 114.311ZM267.609 116.21C267.737 115.811 267.893 115.263 268.078 114.573L266.146 114.056C265.965 114.734 265.817 115.247 265.704 115.601L267.609 116.21ZM267.371 113.349L265.627 112.881L265.109 114.813L266.853 115.28L267.371 113.349ZM265.627 112.881C265.435 112.83 265.248 112.76 265.066 112.673L264.197 114.474C264.491 114.616 264.795 114.729 265.109 114.813L265.627 112.881ZM263.884 112.908L263.858 112.938L265.352 114.267L265.379 114.238L263.884 112.908ZM263.893 114.305C264.739 115.162 265.377 115.894 265.822 116.503L267.436 115.323C266.912 114.606 266.201 113.797 265.317 112.901L263.893 114.305ZM266.882 116.88L266.91 116.873L266.403 114.938L266.376 114.945L266.882 116.88ZM266.298 110.928L266.168 111.014L267.275 112.68L267.404 112.594L266.298 110.928ZM267.003 110.887C266.807 110.829 266.613 110.774 266.42 110.72L265.879 112.645C266.064 112.697 266.251 112.751 266.44 112.806L267.003 110.887ZM266.42 110.72C266.228 110.666 266.033 110.612 265.835 110.559L265.317 112.491C265.507 112.542 265.695 112.593 265.879 112.645L266.42 110.72ZM265.835 110.559C265.637 110.506 265.442 110.455 265.248 110.406L264.754 112.343C264.939 112.391 265.127 112.44 265.317 112.491L265.835 110.559ZM265.248 110.406C265.054 110.356 264.858 110.307 264.66 110.259L264.187 112.203C264.379 112.249 264.567 112.296 264.754 112.343L265.248 110.406ZM265.086 110.482L265.05 110.45L263.725 111.948L263.761 111.98L265.086 110.482ZM265.34 111.506C265.4 111.317 265.457 111.133 265.511 110.954L263.593 110.386C263.545 110.549 263.492 110.718 263.436 110.893L265.34 111.506ZM265.511 110.954C265.564 110.774 265.614 110.597 265.661 110.423L263.729 109.905C263.687 110.062 263.641 110.222 263.593 110.386L265.511 110.954ZM265.661 110.423C265.72 110.199 265.768 109.997 265.798 109.827L263.826 109.49C263.812 109.571 263.782 109.706 263.729 109.905L265.661 110.423ZM265.8 109.808C265.828 109.63 265.844 109.419 265.813 109.203L263.833 109.484C263.831 109.469 263.83 109.459 263.83 109.453C263.83 109.448 263.83 109.447 263.83 109.45C263.829 109.456 263.828 109.475 263.823 109.508L265.8 109.808ZM265.813 109.203C265.782 108.985 265.705 108.758 265.558 108.55L263.925 109.706C263.863 109.618 263.84 109.535 263.833 109.484L265.813 109.203ZM265.546 108.534C265.469 108.43 265.38 108.328 265.288 108.231L263.837 109.608C263.894 109.668 263.924 109.705 263.937 109.722L265.546 108.534ZM265.28 108.223C265.248 108.19 265.212 108.155 265.173 108.12L263.848 109.618C263.843 109.614 263.841 109.612 263.841 109.612C263.841 109.612 263.842 109.613 263.845 109.616L265.28 108.223ZM265.241 108.186C265.242 108.187 265.246 108.191 265.251 108.198C265.257 108.205 265.267 108.216 265.278 108.232L263.669 109.42C263.709 109.474 263.749 109.519 263.78 109.552L265.241 108.186ZM265.24 109.469L265.31 109.385L263.778 108.1L263.708 108.184L265.24 109.469ZM264.04 109.606C264.298 109.757 264.496 109.876 264.637 109.964C264.707 110.008 264.759 110.042 264.794 110.065C264.837 110.094 264.832 110.094 264.808 110.073L266.12 108.563C266.006 108.464 265.838 108.356 265.697 108.268C265.531 108.165 265.314 108.034 265.048 107.879L264.04 109.606ZM264.523 108.98C264.439 109.213 264.362 109.448 264.29 109.688L266.205 110.264C266.267 110.057 266.334 109.854 266.405 109.656L264.523 108.98ZM264.29 109.688C264.22 109.919 264.153 110.156 264.087 110.399L266.019 110.917C266.08 110.692 266.141 110.475 266.205 110.264L264.29 109.688ZM264.087 110.399C264.087 110.399 264.087 110.4 264.087 110.4C264.087 110.4 264.087 110.4 264.087 110.4C264.087 110.4 264.087 110.401 264.087 110.401C264.087 110.401 264.087 110.401 264.087 110.401C264.087 110.401 264.087 110.401 264.087 110.402C264.087 110.402 264.087 110.402 264.087 110.402C264.087 110.402 264.087 110.402 264.087 110.402C264.087 110.403 264.087 110.403 264.087 110.403C264.086 110.403 264.086 110.403 264.086 110.403C264.086 110.404 264.086 110.404 264.086 110.404C264.086 110.404 264.086 110.404 264.086 110.404C264.086 110.404 264.086 110.405 264.086 110.405C264.086 110.405 264.086 110.405 264.086 110.405C264.086 110.405 264.086 110.405 264.086 110.406C264.086 110.406 264.086 110.406 264.086 110.406C264.086 110.406 264.086 110.406 264.086 110.407C264.085 110.407 264.085 110.407 264.085 110.407C264.085 110.407 264.085 110.407 264.085 110.407C264.085 110.408 264.085 110.408 264.085 110.408C264.085 110.408 264.085 110.408 264.085 110.408C264.085 110.409 264.085 110.409 264.085 110.409C264.085 110.409 264.085 110.409 264.085 110.409C264.085 110.409 264.085 110.41 264.085 110.41C264.085 110.41 264.085 110.41 264.085 110.41C264.085 110.41 264.084 110.41 264.084 110.411C264.084 110.411 264.084 110.411 264.084 110.411C264.084 110.411 264.084 110.411 264.084 110.412C264.084 110.412 264.084 110.412 264.084 110.412C264.084 110.412 264.084 110.412 264.084 110.412C264.084 110.413 264.084 110.413 264.084 110.413C264.084 110.413 264.084 110.413 264.084 110.413C264.084 110.413 264.084 110.414 264.084 110.414C264.084 110.414 264.084 110.414 264.083 110.414C264.083 110.414 264.083 110.415 264.083 110.415C264.083 110.415 264.083 110.415 264.083 110.415C264.083 110.415 264.083 110.415 264.083 110.416C264.083 110.416 264.083 110.416 264.083 110.416C264.083 110.416 264.083 110.416 264.083 110.417C264.083 110.417 264.083 110.417 264.083 110.417C264.083 110.417 264.083 110.417 264.083 110.417C264.083 110.418 264.083 110.418 264.083 110.418C264.082 110.418 264.082 110.418 264.082 110.418C264.082 110.418 264.082 110.419 264.082 110.419C264.082 110.419 264.082 110.419 264.082 110.419C264.082 110.419 264.082 110.42 264.082 110.42C264.082 110.42 264.082 110.42 264.082 110.42C264.082 110.42 264.082 110.42 264.082 110.421C264.082 110.421 264.082 110.421 264.082 110.421C264.082 110.421 264.082 110.421 264.082 110.421C264.081 110.422 264.081 110.422 264.081 110.422C264.081 110.422 264.081 110.422 264.081 110.422C264.081 110.423 264.081 110.423 264.081 110.423C264.081 110.423 264.081 110.423 264.081 110.423C264.081 110.423 264.081 110.424 264.081 110.424C264.081 110.424 264.081 110.424 264.081 110.424C264.081 110.424 264.081 110.424 264.081 110.425C264.081 110.425 264.081 110.425 264.081 110.425C264.081 110.425 264.08 110.425 264.08 110.426C264.08 110.426 264.08 110.426 264.08 110.426C264.08 110.426 264.08 110.426 264.08 110.426C264.08 110.427 264.08 110.427 264.08 110.427C264.08 110.427 264.08 110.427 264.08 110.427C264.08 110.428 264.08 110.428 264.08 110.428C264.08 110.428 264.08 110.428 264.08 110.428C264.08 110.428 264.08 110.429 264.08 110.429C264.08 110.429 264.08 110.429 264.079 110.429C264.079 110.429 264.079 110.429 264.079 110.43C264.079 110.43 264.079 110.43 264.079 110.43C264.079 110.43 264.079 110.43 264.079 110.431C264.079 110.431 264.079 110.431 264.079 110.431C264.079 110.431 264.079 110.431 264.079 110.431C264.079 110.432 264.079 110.432 264.079 110.432C264.079 110.432 264.079 110.432 264.079 110.432C264.079 110.432 264.079 110.433 264.079 110.433C264.078 110.433 264.078 110.433 264.078 110.433C264.078 110.433 264.078 110.434 264.078 110.434C264.078 110.434 264.078 110.434 264.078 110.434C264.078 110.434 264.078 110.434 264.078 110.435C264.078 110.435 264.078 110.435 264.078 110.435C264.078 110.435 264.078 110.435 264.078 110.436C264.078 110.436 264.078 110.436 264.078 110.436C264.078 110.436 264.078 110.436 264.078 110.436C264.077 110.437 264.077 110.437 264.077 110.437C264.077 110.437 264.077 110.437 264.077 110.437C264.077 110.437 264.077 110.438 264.077 110.438C264.077 110.438 264.077 110.438 264.077 110.438C264.077 110.438 264.077 110.439 264.077 110.439C264.077 110.439 264.077 110.439 264.077 110.439C264.077 110.439 264.077 110.439 264.077 110.44C264.077 110.44 264.077 110.44 264.077 110.44C264.077 110.44 264.076 110.44 264.076 110.44C264.076 110.441 264.076 110.441 264.076 110.441C264.076 110.441 264.076 110.441 264.076 110.441C264.076 110.442 264.076 110.442 264.076 110.442C264.076 110.442 264.076 110.442 264.076 110.442C264.076 110.442 264.076 110.443 264.076 110.443C264.076 110.443 264.076 110.443 264.076 110.443C264.076 110.443 264.076 110.444 264.076 110.444C264.076 110.444 264.076 110.444 264.075 110.444C264.075 110.444 264.075 110.444 264.075 110.445C264.075 110.445 264.075 110.445 264.075 110.445C264.075 110.445 264.075 110.445 264.075 110.445C264.075 110.446 264.075 110.446 264.075 110.446C264.075 110.446 264.075 110.446 264.075 110.446C264.075 110.447 264.075 110.447 264.075 110.447C264.075 110.447 264.075 110.447 264.075 110.447C264.075 110.447 264.075 110.448 264.074 110.448C264.074 110.448 264.074 110.448 264.074 110.448C264.074 110.448 264.074 110.448 264.074 110.449C264.074 110.449 264.074 110.449 264.074 110.449C264.074 110.449 264.074 110.449 264.074 110.45C264.074 110.45 264.074 110.45 264.074 110.45C264.074 110.45 264.074 110.45 264.074 110.45C264.074 110.451 264.074 110.451 264.074 110.451C264.074 110.451 264.074 110.451 264.074 110.451C264.073 110.452 264.073 110.452 264.073 110.452C264.073 110.452 264.073 110.452 264.073 110.452C264.073 110.452 264.073 110.453 264.073 110.453C264.073 110.453 264.073 110.453 264.073 110.453C264.073 110.453 264.073 110.453 264.073 110.454C264.073 110.454 264.073 110.454 264.073 110.454C264.073 110.454 264.073 110.454 264.073 110.455C264.073 110.455 264.073 110.455 264.073 110.455C264.073 110.455 264.072 110.455 264.072 110.455C264.072 110.456 264.072 110.456 264.072 110.456C264.072 110.456 264.072 110.456 264.072 110.456C264.072 110.456 264.072 110.457 264.072 110.457C264.072 110.457 264.072 110.457 264.072 110.457C264.072 110.457 264.072 110.458 264.072 110.458C264.072 110.458 264.072 110.458 264.072 110.458C264.072 110.458 264.072 110.458 264.072 110.459C264.072 110.459 264.072 110.459 264.071 110.459C264.071 110.459 264.071 110.459 264.071 110.459C264.071 110.46 264.071 110.46 264.071 110.46C264.071 110.46 264.071 110.46 264.071 110.46C264.071 110.461 264.071 110.461 264.071 110.461C264.071 110.461 264.071 110.461 264.071 110.461C264.071 110.461 264.071 110.462 264.071 110.462C264.071 110.462 264.071 110.462 264.071 110.462C264.071 110.462 264.071 110.463 264.07 110.463C264.07 110.463 264.07 110.463 264.07 110.463C264.07 110.463 264.07 110.463 264.07 110.464C264.07 110.464 264.07 110.464 264.07 110.464C264.07 110.464 264.07 110.464 264.07 110.464C264.07 110.465 264.07 110.465 264.07 110.465C264.07 110.465 264.07 110.465 264.07 110.465C264.07 110.466 264.07 110.466 264.07 110.466C264.07 110.466 264.07 110.466 264.07 110.466C264.069 110.466 264.069 110.467 264.069 110.467C264.069 110.467 264.069 110.467 264.069 110.467C264.069 110.467 264.069 110.467 264.069 110.468C264.069 110.468 264.069 110.468 264.069 110.468C264.069 110.468 264.069 110.468 264.069 110.469C264.069 110.469 264.069 110.469 264.069 110.469C264.069 110.469 264.069 110.469 264.069 110.469C264.069 110.47 264.069 110.47 264.069 110.47C264.069 110.47 264.068 110.47 264.068 110.47C264.068 110.471 264.068 110.471 264.068 110.471C264.068 110.471 264.068 110.471 264.068 110.471C264.068 110.471 264.068 110.472 264.068 110.472C264.068 110.472 264.068 110.472 264.068 110.472C264.068 110.472 264.068 110.472 264.068 110.473C264.068 110.473 264.068 110.473 264.068 110.473C264.068 110.473 264.068 110.473 264.068 110.474C264.068 110.474 264.068 110.474 264.067 110.474C264.067 110.474 264.067 110.474 264.067 110.474C264.067 110.475 264.067 110.475 264.067 110.475C264.067 110.475 264.067 110.475 264.067 110.475C264.067 110.475 264.067 110.476 264.067 110.476C264.067 110.476 264.067 110.476 264.067 110.476C264.067 110.476 264.067 110.477 264.067 110.477C264.067 110.477 264.067 110.477 264.067 110.477C264.067 110.477 264.067 110.477 264.066 110.478C264.066 110.478 264.066 110.478 264.066 110.478C264.066 110.478 264.066 110.478 264.066 110.479C264.066 110.479 264.066 110.479 264.066 110.479C264.066 110.479 264.066 110.479 264.066 110.479C264.066 110.48 264.066 110.48 264.066 110.48C264.066 110.48 264.066 110.48 264.066 110.48C264.066 110.48 264.066 110.481 264.066 110.481C264.066 110.481 264.066 110.481 264.066 110.481C264.065 110.481 264.065 110.482 264.065 110.482C264.065 110.482 264.065 110.482 264.065 110.482C264.065 110.482 264.065 110.482 264.065 110.483C264.065 110.483 264.065 110.483 264.065 110.483C264.065 110.483 264.065 110.483 264.065 110.483C264.065 110.484 264.065 110.484 264.065 110.484C264.065 110.484 264.065 110.484 264.065 110.484C264.065 110.485 264.065 110.485 264.065 110.485C264.065 110.485 264.064 110.485 264.064 110.485C264.064 110.485 264.064 110.486 264.064 110.486C264.064 110.486 264.064 110.486 264.064 110.486C264.064 110.486 264.064 110.487 264.064 110.487C264.064 110.487 264.064 110.487 264.064 110.487C264.064 110.487 264.064 110.487 264.064 110.488C264.064 110.488 264.064 110.488 264.064 110.488C264.064 110.488 264.064 110.488 264.064 110.488C264.064 110.489 264.064 110.489 264.063 110.489C264.063 110.489 264.063 110.489 264.063 110.489C264.063 110.49 264.063 110.49 264.063 110.49C264.063 110.49 264.063 110.49 264.063 110.49C264.063 110.49 264.063 110.491 264.063 110.491C264.063 110.491 264.063 110.491 264.063 110.491C264.063 110.491 264.063 110.491 264.063 110.492C264.063 110.492 264.063 110.492 264.063 110.492C264.063 110.492 264.063 110.492 264.062 110.493C264.062 110.493 264.062 110.493 264.062 110.493C264.062 110.493 264.062 110.493 264.062 110.493C264.062 110.494 264.062 110.494 264.062 110.494C264.062 110.494 264.062 110.494 264.062 110.494C264.062 110.494 264.062 110.495 264.062 110.495C264.062 110.495 264.062 110.495 264.062 110.495C264.062 110.495 264.062 110.496 264.062 110.496C264.062 110.496 264.062 110.496 264.062 110.496C264.061 110.496 264.061 110.496 264.061 110.497C264.061 110.497 264.061 110.497 264.061 110.497C264.061 110.497 264.061 110.497 264.061 110.498C264.061 110.498 264.061 110.498 264.061 110.498C264.061 110.498 264.061 110.498 264.061 110.498C264.061 110.499 264.061 110.499 264.061 110.499C264.061 110.499 264.061 110.499 264.061 110.499C264.061 110.499 264.061 110.5 264.061 110.5C264.061 110.5 264.06 110.5 264.06 110.5C264.06 110.5 264.06 110.501 264.06 110.501C264.06 110.501 264.06 110.501 264.06 110.501C264.06 110.501 264.06 110.501 264.06 110.502C264.06 110.502 264.06 110.502 264.06 110.502C264.06 110.502 264.06 110.502 264.06 110.502C264.06 110.503 264.06 110.503 264.06 110.503C264.06 110.503 264.06 110.503 264.06 110.503C264.06 110.504 264.06 110.504 264.059 110.504C264.059 110.504 264.059 110.504 264.059 110.504C264.059 110.504 264.059 110.505 264.059 110.505C264.059 110.505 264.059 110.505 264.059 110.505C264.059 110.505 264.059 110.506 264.059 110.506C264.059 110.506 264.059 110.506 264.059 110.506C264.059 110.506 264.059 110.506 264.059 110.507C264.059 110.507 264.059 110.507 264.059 110.507C264.059 110.507 264.059 110.507 264.058 110.507C264.058 110.508 264.058 110.508 264.058 110.508C264.058 110.508 264.058 110.508 264.058 110.508C264.058 110.509 264.058 110.509 264.058 110.509C264.058 110.509 264.058 110.509 264.058 110.509C264.058 110.509 264.058 110.51 264.058 110.51C264.058 110.51 264.058 110.51 264.058 110.51C264.058 110.51 264.058 110.51 264.058 110.511C264.058 110.511 264.058 110.511 264.058 110.511C264.057 110.511 264.057 110.511 264.057 110.512C264.057 110.512 264.057 110.512 264.057 110.512C264.057 110.512 264.057 110.512 264.057 110.512C264.057 110.513 264.057 110.513 264.057 110.513C264.057 110.513 264.057 110.513 264.057 110.513C264.057 110.514 264.057 110.514 264.057 110.514C264.057 110.514 264.057 110.514 264.057 110.514C264.057 110.514 264.057 110.515 264.057 110.515C264.057 110.515 264.056 110.515 264.056 110.515C264.056 110.515 264.056 110.515 264.056 110.516C264.056 110.516 264.056 110.516 264.056 110.516C264.056 110.516 264.056 110.516 264.056 110.517C264.056 110.517 264.056 110.517 264.056 110.517C264.056 110.517 264.056 110.517 264.056 110.517C264.056 110.518 264.056 110.518 264.056 110.518C264.056 110.518 264.056 110.518 264.056 110.518C264.056 110.518 264.055 110.519 264.055 110.519C264.055 110.519 264.055 110.519 264.055 110.519C264.055 110.519 264.055 110.52 264.055 110.52C264.055 110.52 264.055 110.52 264.055 110.52C264.055 110.52 264.055 110.52 264.055 110.521C264.055 110.521 264.055 110.521 264.055 110.521C264.055 110.521 264.055 110.521 264.055 110.522C264.055 110.522 264.055 110.522 264.055 110.522C264.055 110.522 264.055 110.522 264.054 110.522C264.054 110.523 264.054 110.523 264.054 110.523C264.054 110.523 264.054 110.523 264.054 110.523C264.054 110.523 264.054 110.524 264.054 110.524C264.054 110.524 264.054 110.524 264.054 110.524C264.054 110.524 264.054 110.525 264.054 110.525C264.054 110.525 264.054 110.525 264.054 110.525C264.054 110.525 264.054 110.525 264.054 110.526C264.054 110.526 264.054 110.526 264.054 110.526C264.053 110.526 264.053 110.526 264.053 110.526C264.053 110.527 264.053 110.527 264.053 110.527C264.053 110.527 264.053 110.527 264.053 110.527C264.053 110.528 264.053 110.528 264.053 110.528C264.053 110.528 264.053 110.528 264.053 110.528C264.053 110.528 264.053 110.529 264.053 110.529C264.053 110.529 264.053 110.529 264.053 110.529C264.053 110.529 264.053 110.53 264.053 110.53C264.053 110.53 264.052 110.53 264.052 110.53C264.052 110.53 264.052 110.53 264.052 110.531C264.052 110.531 264.052 110.531 264.052 110.531C264.052 110.531 264.052 110.531 264.052 110.531C264.052 110.532 264.052 110.532 264.052 110.532C264.052 110.532 264.052 110.532 264.052 110.532C264.052 110.533 264.052 110.533 264.052 110.533C264.052 110.533 264.052 110.533 264.052 110.533C264.052 110.533 264.051 110.534 264.051 110.534C264.051 110.534 264.051 110.534 264.051 110.534C264.051 110.534 264.051 110.534 264.051 110.535C264.051 110.535 264.051 110.535 264.051 110.535C264.051 110.535 264.051 110.535 264.051 110.536C264.051 110.536 264.051 110.536 264.051 110.536C264.051 110.536 264.051 110.536 264.051 110.536C264.051 110.537 264.051 110.537 264.051 110.537C264.051 110.537 264.051 110.537 264.05 110.537C264.05 110.538 264.05 110.538 264.05 110.538C264.05 110.538 264.05 110.538 264.05 110.538C264.05 110.538 264.05 110.539 264.05 110.539C264.05 110.539 264.05 110.539 264.05 110.539C264.05 110.539 264.05 110.539 264.05 110.54C264.05 110.54 264.05 110.54 264.05 110.54C264.05 110.54 264.05 110.54 264.05 110.541C264.05 110.541 264.05 110.541 264.05 110.541C264.049 110.541 264.049 110.541 264.049 110.541C264.049 110.542 264.049 110.542 264.049 110.542C264.049 110.542 264.049 110.542 264.049 110.542C264.049 110.542 264.049 110.543 264.049 110.543C264.049 110.543 264.049 110.543 264.049 110.543C264.049 110.543 264.049 110.544 264.049 110.544C264.049 110.544 264.049 110.544 264.049 110.544C264.049 110.544 264.049 110.544 264.049 110.545C264.049 110.545 264.048 110.545 264.048 110.545C264.048 110.545 264.048 110.545 264.048 110.545C264.048 110.546 264.048 110.546 264.048 110.546C264.048 110.546 264.048 110.546 264.048 110.546C264.048 110.547 264.048 110.547 264.048 110.547C264.048 110.547 264.048 110.547 264.048 110.547C264.048 110.547 264.048 110.548 264.048 110.548C264.048 110.548 264.048 110.548 264.048 110.548C264.048 110.548 264.047 110.549 264.047 110.549C264.047 110.549 264.047 110.549 264.047 110.549C264.047 110.549 264.047 110.549 264.047 110.55C264.047 110.55 264.047 110.55 264.047 110.55C264.047 110.55 264.047 110.55 264.047 110.55C264.047 110.551 264.047 110.551 264.047 110.551C264.047 110.551 264.047 110.551 264.047 110.551C264.047 110.552 264.047 110.552 264.047 110.552C264.047 110.552 264.047 110.552 264.046 110.552C264.046 110.552 264.046 110.553 264.046 110.553C264.046 110.553 264.046 110.553 264.046 110.553C264.046 110.553 264.046 110.553 264.046 110.554C264.046 110.554 264.046 110.554 264.046 110.554C264.046 110.554 264.046 110.554 264.046 110.555C264.046 110.555 264.046 110.555 264.046 110.555C264.046 110.555 264.046 110.555 264.046 110.555C264.046 110.556 264.046 110.556 264.046 110.556C264.045 110.556 264.045 110.556 264.045 110.556C264.045 110.557 264.045 110.557 264.045 110.557C264.045 110.557 264.045 110.557 264.045 110.557C264.045 110.557 264.045 110.558 264.045 110.558C264.045 110.558 264.045 110.558 264.045 110.558C264.045 110.558 264.045 110.558 264.045 110.559C264.045 110.559 264.045 110.559 264.045 110.559C264.045 110.559 264.045 110.559 264.045 110.56C264.045 110.56 264.044 110.56 264.044 110.56C264.044 110.56 264.044 110.56 264.044 110.56C264.044 110.561 264.044 110.561 264.044 110.561C264.044 110.561 264.044 110.561 264.044 110.561C264.044 110.561 264.044 110.562 264.044 110.562C264.044 110.562 264.044 110.562 264.044 110.562C264.044 110.562 264.044 110.563 264.044 110.563C264.044 110.563 264.044 110.563 264.044 110.563C264.044 110.563 264.043 110.563 264.043 110.564C264.043 110.564 264.043 110.564 264.043 110.564C264.043 110.564 264.043 110.564 264.043 110.565C264.043 110.565 264.043 110.565 264.043 110.565C264.043 110.565 264.043 110.565 264.043 110.565C264.043 110.566 264.043 110.566 264.043 110.566C264.043 110.566 264.043 110.566 264.043 110.566C264.043 110.566 264.043 110.567 264.043 110.567C264.043 110.567 264.043 110.567 264.042 110.567C264.042 110.567 264.042 110.568 264.042 110.568C264.042 110.568 264.042 110.568 264.042 110.568C264.042 110.568 264.042 110.568 264.042 110.569C264.042 110.569 264.042 110.569 264.042 110.569C264.042 110.569 264.042 110.569 264.042 110.569C264.042 110.57 264.042 110.57 264.042 110.57C264.042 110.57 264.042 110.57 264.042 110.57C264.042 110.571 264.042 110.571 264.042 110.571C264.041 110.571 264.041 110.571 264.041 110.571C264.041 110.571 264.041 110.572 264.041 110.572C264.041 110.572 264.041 110.572 264.041 110.572C264.041 110.572 264.041 110.573 264.041 110.573C264.041 110.573 264.041 110.573 264.041 110.573C264.041 110.573 264.041 110.573 264.041 110.574C264.041 110.574 264.041 110.574 264.041 110.574C264.041 110.574 264.041 110.574 264.041 110.574C264.041 110.575 264.04 110.575 264.04 110.575C264.04 110.575 264.04 110.575 264.04 110.575C264.04 110.576 264.04 110.576 264.04 110.576C264.04 110.576 264.04 110.576 264.04 110.576C264.04 110.576 264.04 110.577 264.04 110.577C264.04 110.577 264.04 110.577 264.04 110.577C264.04 110.577 264.04 110.577 264.04 110.578C264.04 110.578 264.04 110.578 264.04 110.578C264.04 110.578 264.039 110.578 264.039 110.579C264.039 110.579 264.039 110.579 264.039 110.579C264.039 110.579 264.039 110.579 264.039 110.579C264.039 110.58 264.039 110.58 264.039 110.58C264.039 110.58 264.039 110.58 264.039 110.58C264.039 110.58 264.039 110.581 264.039 110.581C264.039 110.581 264.039 110.581 264.039 110.581C264.039 110.581 264.039 110.582 264.039 110.582C264.039 110.582 264.039 110.582 264.038 110.582C264.038 110.582 264.038 110.582 264.038 110.583C264.038 110.583 264.038 110.583 264.038 110.583C264.038 110.583 264.038 110.583 264.038 110.584C264.038 110.584 264.038 110.584 264.038 110.584C264.038 110.584 264.038 110.584 264.038 110.584C264.038 110.585 264.038 110.585 264.038 110.585C264.038 110.585 264.038 110.585 264.038 110.585C264.038 110.585 264.038 110.586 264.038 110.586C264.037 110.586 264.037 110.586 264.037 110.586C264.037 110.586 264.037 110.587 264.037 110.587C264.037 110.587 264.037 110.587 264.037 110.587C264.037 110.587 264.037 110.587 264.037 110.588C264.037 110.588 264.037 110.588 264.037 110.588C264.037 110.588 264.037 110.588 264.037 110.588C264.037 110.589 264.037 110.589 264.037 110.589C264.037 110.589 264.037 110.589 264.037 110.589C264.036 110.59 264.036 110.59 264.036 110.59C264.036 110.59 264.036 110.59 264.036 110.59C264.036 110.59 264.036 110.591 264.036 110.591C264.036 110.591 264.036 110.591 264.036 110.591C264.036 110.591 264.036 110.592 264.036 110.592C264.036 110.592 264.036 110.592 264.036 110.592C264.036 110.592 264.036 110.592 264.036 110.593C264.036 110.593 264.036 110.593 264.036 110.593C264.036 110.593 264.035 110.593 264.035 110.593C264.035 110.594 264.035 110.594 264.035 110.594C264.035 110.594 264.035 110.594 264.035 110.594C264.035 110.595 264.035 110.595 264.035 110.595C264.035 110.595 264.035 110.595 264.035 110.595C264.035 110.595 264.035 110.596 264.035 110.596C264.035 110.596 264.035 110.596 264.035 110.596C264.035 110.596 264.035 110.596 264.035 110.597C264.035 110.597 264.035 110.597 264.034 110.597C264.034 110.597 264.034 110.597 264.034 110.598C264.034 110.598 264.034 110.598 264.034 110.598C264.034 110.598 264.034 110.598 264.034 110.598C264.034 110.599 264.034 110.599 264.034 110.599C264.034 110.599 264.034 110.599 264.034 110.599C264.034 110.6 264.034 110.6 264.034 110.6C264.034 110.6 264.034 110.6 264.034 110.6C264.034 110.6 264.034 110.601 264.034 110.601C264.033 110.601 264.033 110.601 264.033 110.601C264.033 110.601 264.033 110.601 264.033 110.602C264.033 110.602 264.033 110.602 264.033 110.602C264.033 110.602 264.033 110.602 264.033 110.603C264.033 110.603 264.033 110.603 264.033 110.603C264.033 110.603 264.033 110.603 264.033 110.603C264.033 110.604 264.033 110.604 264.033 110.604C264.033 110.604 264.033 110.604 264.033 110.604C264.032 110.604 264.032 110.605 264.032 110.605C264.032 110.605 264.032 110.605 264.032 110.605C264.032 110.605 264.032 110.606 264.032 110.606C264.032 110.606 264.032 110.606 264.032 110.606C264.032 110.606 264.032 110.606 264.032 110.607C264.032 110.607 264.032 110.607 264.032 110.607C264.032 110.607 264.032 110.607 264.032 110.608C264.032 110.608 264.032 110.608 264.032 110.608C264.032 110.608 264.031 110.608 264.031 110.608C264.031 110.609 264.031 110.609 264.031 110.609C264.031 110.609 264.031 110.609 264.031 110.609C264.031 110.609 264.031 110.61 264.031 110.61C264.031 110.61 264.031 110.61 264.031 110.61C264.031 110.61 264.031 110.611 264.031 110.611C264.031 110.611 264.031 110.611 264.031 110.611C264.031 110.611 264.031 110.611 264.031 110.612C264.031 110.612 264.031 110.612 264.03 110.612C264.03 110.612 264.03 110.612 264.03 110.612C264.03 110.613 264.03 110.613 264.03 110.613C264.03 110.613 264.03 110.613 264.03 110.613C264.03 110.614 264.03 110.614 264.03 110.614C264.03 110.614 264.03 110.614 264.03 110.614C264.03 110.614 264.03 110.615 264.03 110.615C264.03 110.615 264.03 110.615 264.03 110.615C264.03 110.615 264.03 110.616 264.03 110.616C264.029 110.616 264.029 110.616 264.029 110.616C264.029 110.616 264.029 110.616 264.029 110.617C264.029 110.617 264.029 110.617 264.029 110.617C264.029 110.617 264.029 110.617 264.029 110.617C264.029 110.618 264.029 110.618 264.029 110.618C264.029 110.618 264.029 110.618 264.029 110.618C264.029 110.619 264.029 110.619 264.029 110.619C264.029 110.619 264.029 110.619 264.029 110.619C264.028 110.619 264.028 110.62 264.028 110.62C264.028 110.62 264.028 110.62 264.028 110.62C264.028 110.62 264.028 110.62 264.028 110.621C264.028 110.621 264.028 110.621 264.028 110.621C264.028 110.621 264.028 110.621 264.028 110.622C264.028 110.622 264.028 110.622 264.028 110.622C264.028 110.622 264.028 110.622 264.028 110.622C264.028 110.623 264.028 110.623 264.028 110.623C264.028 110.623 264.027 110.623 264.027 110.623C264.027 110.623 264.027 110.624 264.027 110.624C264.027 110.624 264.027 110.624 264.027 110.624C264.027 110.624 264.027 110.625 264.027 110.625C264.027 110.625 264.027 110.625 264.027 110.625C264.027 110.625 264.027 110.625 264.027 110.626C264.027 110.626 264.027 110.626 264.027 110.626C264.027 110.626 264.027 110.626 264.027 110.627C264.027 110.627 264.027 110.627 264.026 110.627C264.026 110.627 264.026 110.627 264.026 110.627C264.026 110.628 264.026 110.628 264.026 110.628C264.026 110.628 264.026 110.628 264.026 110.628C264.026 110.628 264.026 110.629 264.026 110.629C264.026 110.629 264.026 110.629 264.026 110.629C264.026 110.629 264.026 110.63 264.026 110.63C264.026 110.63 264.026 110.63 264.026 110.63C264.026 110.63 264.026 110.63 264.026 110.631C264.025 110.631 264.025 110.631 264.025 110.631L265.957 111.149C265.957 111.149 265.957 111.148 265.957 111.148C265.957 111.148 265.957 111.148 265.957 111.148C265.958 111.148 265.958 111.147 265.958 111.147C265.958 111.147 265.958 111.147 265.958 111.147C265.958 111.147 265.958 111.147 265.958 111.146C265.958 111.146 265.958 111.146 265.958 111.146C265.958 111.146 265.958 111.146 265.958 111.146C265.958 111.145 265.958 111.145 265.958 111.145C265.958 111.145 265.958 111.145 265.958 111.145C265.958 111.144 265.958 111.144 265.958 111.144C265.958 111.144 265.959 111.144 265.959 111.144C265.959 111.144 265.959 111.143 265.959 111.143C265.959 111.143 265.959 111.143 265.959 111.143C265.959 111.143 265.959 111.142 265.959 111.142C265.959 111.142 265.959 111.142 265.959 111.142C265.959 111.142 265.959 111.142 265.959 111.141C265.959 111.141 265.959 111.141 265.959 111.141C265.959 111.141 265.959 111.141 265.959 111.141C265.959 111.14 265.959 111.14 265.96 111.14C265.96 111.14 265.96 111.14 265.96 111.14C265.96 111.139 265.96 111.139 265.96 111.139C265.96 111.139 265.96 111.139 265.96 111.139C265.96 111.139 265.96 111.138 265.96 111.138C265.96 111.138 265.96 111.138 265.96 111.138C265.96 111.138 265.96 111.138 265.96 111.137C265.96 111.137 265.96 111.137 265.96 111.137C265.96 111.137 265.96 111.137 265.961 111.136C265.961 111.136 265.961 111.136 265.961 111.136C265.961 111.136 265.961 111.136 265.961 111.136C265.961 111.135 265.961 111.135 265.961 111.135C265.961 111.135 265.961 111.135 265.961 111.135C265.961 111.134 265.961 111.134 265.961 111.134C265.961 111.134 265.961 111.134 265.961 111.134C265.961 111.134 265.961 111.133 265.961 111.133C265.961 111.133 265.961 111.133 265.961 111.133C265.962 111.133 265.962 111.133 265.962 111.132C265.962 111.132 265.962 111.132 265.962 111.132C265.962 111.132 265.962 111.132 265.962 111.131C265.962 111.131 265.962 111.131 265.962 111.131C265.962 111.131 265.962 111.131 265.962 111.131C265.962 111.13 265.962 111.13 265.962 111.13C265.962 111.13 265.962 111.13 265.962 111.13C265.962 111.13 265.962 111.129 265.962 111.129C265.962 111.129 265.963 111.129 265.963 111.129C265.963 111.129 265.963 111.128 265.963 111.128C265.963 111.128 265.963 111.128 265.963 111.128C265.963 111.128 265.963 111.128 265.963 111.127C265.963 111.127 265.963 111.127 265.963 111.127C265.963 111.127 265.963 111.127 265.963 111.127C265.963 111.126 265.963 111.126 265.963 111.126C265.963 111.126 265.963 111.126 265.963 111.126C265.963 111.125 265.963 111.125 265.964 111.125C265.964 111.125 265.964 111.125 265.964 111.125C265.964 111.125 265.964 111.124 265.964 111.124C265.964 111.124 265.964 111.124 265.964 111.124C265.964 111.124 265.964 111.123 265.964 111.123C265.964 111.123 265.964 111.123 265.964 111.123C265.964 111.123 265.964 111.123 265.964 111.122C265.964 111.122 265.964 111.122 265.964 111.122C265.964 111.122 265.964 111.122 265.965 111.122C265.965 111.121 265.965 111.121 265.965 111.121C265.965 111.121 265.965 111.121 265.965 111.121C265.965 111.12 265.965 111.12 265.965 111.12C265.965 111.12 265.965 111.12 265.965 111.12C265.965 111.12 265.965 111.119 265.965 111.119C265.965 111.119 265.965 111.119 265.965 111.119C265.965 111.119 265.965 111.119 265.965 111.118C265.965 111.118 265.965 111.118 265.965 111.118C265.966 111.118 265.966 111.118 265.966 111.117C265.966 111.117 265.966 111.117 265.966 111.117C265.966 111.117 265.966 111.117 265.966 111.117C265.966 111.116 265.966 111.116 265.966 111.116C265.966 111.116 265.966 111.116 265.966 111.116C265.966 111.115 265.966 111.115 265.966 111.115C265.966 111.115 265.966 111.115 265.966 111.115C265.966 111.115 265.966 111.114 265.966 111.114C265.966 111.114 265.967 111.114 265.967 111.114C265.967 111.114 265.967 111.114 265.967 111.113C265.967 111.113 265.967 111.113 265.967 111.113C265.967 111.113 265.967 111.113 265.967 111.112C265.967 111.112 265.967 111.112 265.967 111.112C265.967 111.112 265.967 111.112 265.967 111.112C265.967 111.111 265.967 111.111 265.967 111.111C265.967 111.111 265.967 111.111 265.967 111.111C265.967 111.111 265.968 111.11 265.968 111.11C265.968 111.11 265.968 111.11 265.968 111.11C265.968 111.11 265.968 111.109 265.968 111.109C265.968 111.109 265.968 111.109 265.968 111.109C265.968 111.109 265.968 111.109 265.968 111.108C265.968 111.108 265.968 111.108 265.968 111.108C265.968 111.108 265.968 111.108 265.968 111.107C265.968 111.107 265.968 111.107 265.968 111.107C265.968 111.107 265.968 111.107 265.969 111.107C265.969 111.106 265.969 111.106 265.969 111.106C265.969 111.106 265.969 111.106 265.969 111.106C265.969 111.106 265.969 111.105 265.969 111.105C265.969 111.105 265.969 111.105 265.969 111.105C265.969 111.105 265.969 111.104 265.969 111.104C265.969 111.104 265.969 111.104 265.969 111.104C265.969 111.104 265.969 111.104 265.969 111.103C265.969 111.103 265.969 111.103 265.969 111.103C265.97 111.103 265.97 111.103 265.97 111.103C265.97 111.102 265.97 111.102 265.97 111.102C265.97 111.102 265.97 111.102 265.97 111.102C265.97 111.101 265.97 111.101 265.97 111.101C265.97 111.101 265.97 111.101 265.97 111.101C265.97 111.101 265.97 111.1 265.97 111.1C265.97 111.1 265.97 111.1 265.97 111.1C265.97 111.1 265.97 111.099 265.97 111.099C265.97 111.099 265.971 111.099 265.971 111.099C265.971 111.099 265.971 111.099 265.971 111.098C265.971 111.098 265.971 111.098 265.971 111.098C265.971 111.098 265.971 111.098 265.971 111.098C265.971 111.097 265.971 111.097 265.971 111.097C265.971 111.097 265.971 111.097 265.971 111.097C265.971 111.096 265.971 111.096 265.971 111.096C265.971 111.096 265.971 111.096 265.971 111.096C265.971 111.096 265.972 111.095 265.972 111.095C265.972 111.095 265.972 111.095 265.972 111.095C265.972 111.095 265.972 111.095 265.972 111.094C265.972 111.094 265.972 111.094 265.972 111.094C265.972 111.094 265.972 111.094 265.972 111.093C265.972 111.093 265.972 111.093 265.972 111.093C265.972 111.093 265.972 111.093 265.972 111.093C265.972 111.092 265.972 111.092 265.972 111.092C265.972 111.092 265.972 111.092 265.973 111.092C265.973 111.091 265.973 111.091 265.973 111.091C265.973 111.091 265.973 111.091 265.973 111.091C265.973 111.091 265.973 111.09 265.973 111.09C265.973 111.09 265.973 111.09 265.973 111.09C265.973 111.09 265.973 111.09 265.973 111.089C265.973 111.089 265.973 111.089 265.973 111.089C265.973 111.089 265.973 111.089 265.973 111.088C265.973 111.088 265.973 111.088 265.973 111.088C265.974 111.088 265.974 111.088 265.974 111.088C265.974 111.087 265.974 111.087 265.974 111.087C265.974 111.087 265.974 111.087 265.974 111.087C265.974 111.087 265.974 111.086 265.974 111.086C265.974 111.086 265.974 111.086 265.974 111.086C265.974 111.086 265.974 111.085 265.974 111.085C265.974 111.085 265.974 111.085 265.974 111.085C265.974 111.085 265.974 111.085 265.974 111.084C265.974 111.084 265.975 111.084 265.975 111.084C265.975 111.084 265.975 111.084 265.975 111.084C265.975 111.083 265.975 111.083 265.975 111.083C265.975 111.083 265.975 111.083 265.975 111.083C265.975 111.082 265.975 111.082 265.975 111.082C265.975 111.082 265.975 111.082 265.975 111.082C265.975 111.082 265.975 111.081 265.975 111.081C265.975 111.081 265.975 111.081 265.975 111.081C265.975 111.081 265.976 111.08 265.976 111.08C265.976 111.08 265.976 111.08 265.976 111.08C265.976 111.08 265.976 111.08 265.976 111.079C265.976 111.079 265.976 111.079 265.976 111.079C265.976 111.079 265.976 111.079 265.976 111.079C265.976 111.078 265.976 111.078 265.976 111.078C265.976 111.078 265.976 111.078 265.976 111.078C265.976 111.077 265.976 111.077 265.976 111.077C265.976 111.077 265.976 111.077 265.977 111.077C265.977 111.077 265.977 111.076 265.977 111.076C265.977 111.076 265.977 111.076 265.977 111.076C265.977 111.076 265.977 111.076 265.977 111.075C265.977 111.075 265.977 111.075 265.977 111.075C265.977 111.075 265.977 111.075 265.977 111.074C265.977 111.074 265.977 111.074 265.977 111.074C265.977 111.074 265.977 111.074 265.977 111.074C265.977 111.073 265.977 111.073 265.977 111.073C265.978 111.073 265.978 111.073 265.978 111.073C265.978 111.072 265.978 111.072 265.978 111.072C265.978 111.072 265.978 111.072 265.978 111.072C265.978 111.072 265.978 111.071 265.978 111.071C265.978 111.071 265.978 111.071 265.978 111.071C265.978 111.071 265.978 111.071 265.978 111.07C265.978 111.07 265.978 111.07 265.978 111.07C265.978 111.07 265.978 111.07 265.978 111.069C265.978 111.069 265.979 111.069 265.979 111.069C265.979 111.069 265.979 111.069 265.979 111.069C265.979 111.068 265.979 111.068 265.979 111.068C265.979 111.068 265.979 111.068 265.979 111.068C265.979 111.068 265.979 111.067 265.979 111.067C265.979 111.067 265.979 111.067 265.979 111.067C265.979 111.067 265.979 111.066 265.979 111.066C265.979 111.066 265.979 111.066 265.979 111.066C265.979 111.066 265.98 111.066 265.98 111.065C265.98 111.065 265.98 111.065 265.98 111.065C265.98 111.065 265.98 111.065 265.98 111.064C265.98 111.064 265.98 111.064 265.98 111.064C265.98 111.064 265.98 111.064 265.98 111.064C265.98 111.063 265.98 111.063 265.98 111.063C265.98 111.063 265.98 111.063 265.98 111.063C265.98 111.063 265.98 111.062 265.98 111.062C265.98 111.062 265.98 111.062 265.981 111.062C265.981 111.062 265.981 111.061 265.981 111.061C265.981 111.061 265.981 111.061 265.981 111.061C265.981 111.061 265.981 111.061 265.981 111.06C265.981 111.06 265.981 111.06 265.981 111.06C265.981 111.06 265.981 111.06 265.981 111.06C265.981 111.059 265.981 111.059 265.981 111.059C265.981 111.059 265.981 111.059 265.981 111.059C265.981 111.058 265.981 111.058 265.981 111.058C265.982 111.058 265.982 111.058 265.982 111.058C265.982 111.058 265.982 111.057 265.982 111.057C265.982 111.057 265.982 111.057 265.982 111.057C265.982 111.057 265.982 111.056 265.982 111.056C265.982 111.056 265.982 111.056 265.982 111.056C265.982 111.056 265.982 111.056 265.982 111.055C265.982 111.055 265.982 111.055 265.982 111.055C265.982 111.055 265.982 111.055 265.982 111.055C265.982 111.054 265.983 111.054 265.983 111.054C265.983 111.054 265.983 111.054 265.983 111.054C265.983 111.053 265.983 111.053 265.983 111.053C265.983 111.053 265.983 111.053 265.983 111.053C265.983 111.053 265.983 111.052 265.983 111.052C265.983 111.052 265.983 111.052 265.983 111.052C265.983 111.052 265.983 111.052 265.983 111.051C265.983 111.051 265.983 111.051 265.983 111.051C265.983 111.051 265.984 111.051 265.984 111.05C265.984 111.05 265.984 111.05 265.984 111.05C265.984 111.05 265.984 111.05 265.984 111.05C265.984 111.049 265.984 111.049 265.984 111.049C265.984 111.049 265.984 111.049 265.984 111.049C265.984 111.048 265.984 111.048 265.984 111.048C265.984 111.048 265.984 111.048 265.984 111.048C265.984 111.048 265.984 111.047 265.984 111.047C265.984 111.047 265.984 111.047 265.985 111.047C265.985 111.047 265.985 111.047 265.985 111.046C265.985 111.046 265.985 111.046 265.985 111.046C265.985 111.046 265.985 111.046 265.985 111.045C265.985 111.045 265.985 111.045 265.985 111.045C265.985 111.045 265.985 111.045 265.985 111.045C265.985 111.044 265.985 111.044 265.985 111.044C265.985 111.044 265.985 111.044 265.985 111.044C265.985 111.044 265.985 111.043 265.985 111.043C265.986 111.043 265.986 111.043 265.986 111.043C265.986 111.043 265.986 111.042 265.986 111.042C265.986 111.042 265.986 111.042 265.986 111.042C265.986 111.042 265.986 111.042 265.986 111.041C265.986 111.041 265.986 111.041 265.986 111.041C265.986 111.041 265.986 111.041 265.986 111.041C265.986 111.04 265.986 111.04 265.986 111.04C265.986 111.04 265.986 111.04 265.986 111.04C265.987 111.039 265.987 111.039 265.987 111.039C265.987 111.039 265.987 111.039 265.987 111.039C265.987 111.039 265.987 111.038 265.987 111.038C265.987 111.038 265.987 111.038 265.987 111.038C265.987 111.038 265.987 111.037 265.987 111.037C265.987 111.037 265.987 111.037 265.987 111.037C265.987 111.037 265.987 111.037 265.987 111.036C265.987 111.036 265.987 111.036 265.987 111.036C265.987 111.036 265.988 111.036 265.988 111.036C265.988 111.035 265.988 111.035 265.988 111.035C265.988 111.035 265.988 111.035 265.988 111.035C265.988 111.034 265.988 111.034 265.988 111.034C265.988 111.034 265.988 111.034 265.988 111.034C265.988 111.034 265.988 111.033 265.988 111.033C265.988 111.033 265.988 111.033 265.988 111.033C265.988 111.033 265.988 111.033 265.988 111.032C265.988 111.032 265.988 111.032 265.989 111.032C265.989 111.032 265.989 111.032 265.989 111.031C265.989 111.031 265.989 111.031 265.989 111.031C265.989 111.031 265.989 111.031 265.989 111.031C265.989 111.03 265.989 111.03 265.989 111.03C265.989 111.03 265.989 111.03 265.989 111.03C265.989 111.029 265.989 111.029 265.989 111.029C265.989 111.029 265.989 111.029 265.989 111.029C265.989 111.029 265.989 111.028 265.989 111.028C265.99 111.028 265.99 111.028 265.99 111.028C265.99 111.028 265.99 111.028 265.99 111.027C265.99 111.027 265.99 111.027 265.99 111.027C265.99 111.027 265.99 111.027 265.99 111.026C265.99 111.026 265.99 111.026 265.99 111.026C265.99 111.026 265.99 111.026 265.99 111.026C265.99 111.025 265.99 111.025 265.99 111.025C265.99 111.025 265.99 111.025 265.99 111.025C265.991 111.025 265.991 111.024 265.991 111.024C265.991 111.024 265.991 111.024 265.991 111.024C265.991 111.024 265.991 111.023 265.991 111.023C265.991 111.023 265.991 111.023 265.991 111.023C265.991 111.023 265.991 111.023 265.991 111.022C265.991 111.022 265.991 111.022 265.991 111.022C265.991 111.022 265.991 111.022 265.991 111.021C265.991 111.021 265.991 111.021 265.991 111.021C265.991 111.021 265.992 111.021 265.992 111.021C265.992 111.02 265.992 111.02 265.992 111.02C265.992 111.02 265.992 111.02 265.992 111.02C265.992 111.02 265.992 111.019 265.992 111.019C265.992 111.019 265.992 111.019 265.992 111.019C265.992 111.019 265.992 111.018 265.992 111.018C265.992 111.018 265.992 111.018 265.992 111.018C265.992 111.018 265.992 111.018 265.992 111.017C265.992 111.017 265.992 111.017 265.993 111.017C265.993 111.017 265.993 111.017 265.993 111.017C265.993 111.016 265.993 111.016 265.993 111.016C265.993 111.016 265.993 111.016 265.993 111.016C265.993 111.015 265.993 111.015 265.993 111.015C265.993 111.015 265.993 111.015 265.993 111.015C265.993 111.015 265.993 111.014 265.993 111.014C265.993 111.014 265.993 111.014 265.993 111.014C265.993 111.014 265.993 111.013 265.993 111.013C265.994 111.013 265.994 111.013 265.994 111.013C265.994 111.013 265.994 111.013 265.994 111.012C265.994 111.012 265.994 111.012 265.994 111.012C265.994 111.012 265.994 111.012 265.994 111.012C265.994 111.011 265.994 111.011 265.994 111.011C265.994 111.011 265.994 111.011 265.994 111.011C265.994 111.01 265.994 111.01 265.994 111.01C265.994 111.01 265.994 111.01 265.994 111.01C265.995 111.01 265.995 111.009 265.995 111.009C265.995 111.009 265.995 111.009 265.995 111.009C265.995 111.009 265.995 111.009 265.995 111.008C265.995 111.008 265.995 111.008 265.995 111.008C265.995 111.008 265.995 111.008 265.995 111.007C265.995 111.007 265.995 111.007 265.995 111.007C265.995 111.007 265.995 111.007 265.995 111.007C265.995 111.006 265.995 111.006 265.995 111.006C265.995 111.006 265.996 111.006 265.996 111.006C265.996 111.006 265.996 111.005 265.996 111.005C265.996 111.005 265.996 111.005 265.996 111.005C265.996 111.005 265.996 111.004 265.996 111.004C265.996 111.004 265.996 111.004 265.996 111.004C265.996 111.004 265.996 111.004 265.996 111.003C265.996 111.003 265.996 111.003 265.996 111.003C265.996 111.003 265.996 111.003 265.996 111.002C265.996 111.002 265.996 111.002 265.997 111.002C265.997 111.002 265.997 111.002 265.997 111.002C265.997 111.001 265.997 111.001 265.997 111.001C265.997 111.001 265.997 111.001 265.997 111.001C265.997 111.001 265.997 111 265.997 111C265.997 111 265.997 111 265.997 111C265.997 111 265.997 110.999 265.997 110.999C265.997 110.999 265.997 110.999 265.997 110.999C265.997 110.999 265.997 110.999 265.997 110.998C265.998 110.998 265.998 110.998 265.998 110.998C265.998 110.998 265.998 110.998 265.998 110.998C265.998 110.997 265.998 110.997 265.998 110.997C265.998 110.997 265.998 110.997 265.998 110.997C265.998 110.996 265.998 110.996 265.998 110.996C265.998 110.996 265.998 110.996 265.998 110.996C265.998 110.996 265.998 110.995 265.998 110.995C265.998 110.995 265.998 110.995 265.998 110.995C265.999 110.995 265.999 110.994 265.999 110.994C265.999 110.994 265.999 110.994 265.999 110.994C265.999 110.994 265.999 110.994 265.999 110.993C265.999 110.993 265.999 110.993 265.999 110.993C265.999 110.993 265.999 110.993 265.999 110.993C265.999 110.992 265.999 110.992 265.999 110.992C265.999 110.992 265.999 110.992 265.999 110.992C265.999 110.991 265.999 110.991 265.999 110.991C265.999 110.991 266 110.991 266 110.991C266 110.991 266 110.99 266 110.99C266 110.99 266 110.99 266 110.99C266 110.99 266 110.99 266 110.989C266 110.989 266 110.989 266 110.989C266 110.989 266 110.989 266 110.988C266 110.988 266 110.988 266 110.988C266 110.988 266 110.988 266 110.988C266 110.987 266 110.987 266.001 110.987C266.001 110.987 266.001 110.987 266.001 110.987C266.001 110.986 266.001 110.986 266.001 110.986C266.001 110.986 266.001 110.986 266.001 110.986C266.001 110.986 266.001 110.985 266.001 110.985C266.001 110.985 266.001 110.985 266.001 110.985C266.001 110.985 266.001 110.985 266.001 110.984C266.001 110.984 266.001 110.984 266.001 110.984C266.001 110.984 266.001 110.984 266.001 110.983C266.002 110.983 266.002 110.983 266.002 110.983C266.002 110.983 266.002 110.983 266.002 110.983C266.002 110.982 266.002 110.982 266.002 110.982C266.002 110.982 266.002 110.982 266.002 110.982C266.002 110.982 266.002 110.981 266.002 110.981C266.002 110.981 266.002 110.981 266.002 110.981C266.002 110.981 266.002 110.98 266.002 110.98C266.002 110.98 266.002 110.98 266.002 110.98C266.003 110.98 266.003 110.98 266.003 110.979C266.003 110.979 266.003 110.979 266.003 110.979C266.003 110.979 266.003 110.979 266.003 110.978C266.003 110.978 266.003 110.978 266.003 110.978C266.003 110.978 266.003 110.978 266.003 110.978C266.003 110.977 266.003 110.977 266.003 110.977C266.003 110.977 266.003 110.977 266.003 110.977C266.003 110.977 266.003 110.976 266.003 110.976C266.003 110.976 266.004 110.976 266.004 110.976C266.004 110.976 266.004 110.975 266.004 110.975C266.004 110.975 266.004 110.975 266.004 110.975C266.004 110.975 266.004 110.975 266.004 110.974C266.004 110.974 266.004 110.974 266.004 110.974C266.004 110.974 266.004 110.974 266.004 110.974C266.004 110.973 266.004 110.973 266.004 110.973C266.004 110.973 266.004 110.973 266.004 110.973C266.004 110.972 266.004 110.972 266.005 110.972C266.005 110.972 266.005 110.972 266.005 110.972C266.005 110.972 266.005 110.971 266.005 110.971C266.005 110.971 266.005 110.971 266.005 110.971C266.005 110.971 266.005 110.971 266.005 110.97C266.005 110.97 266.005 110.97 266.005 110.97C266.005 110.97 266.005 110.97 266.005 110.969C266.005 110.969 266.005 110.969 266.005 110.969C266.005 110.969 266.005 110.969 266.006 110.969C266.006 110.968 266.006 110.968 266.006 110.968C266.006 110.968 266.006 110.968 266.006 110.968C266.006 110.967 266.006 110.967 266.006 110.967C266.006 110.967 266.006 110.967 266.006 110.967C266.006 110.967 266.006 110.966 266.006 110.966C266.006 110.966 266.006 110.966 266.006 110.966C266.006 110.966 266.006 110.966 266.006 110.965C266.006 110.965 266.006 110.965 266.006 110.965C266.007 110.965 266.007 110.965 266.007 110.964C266.007 110.964 266.007 110.964 266.007 110.964C266.007 110.964 266.007 110.964 266.007 110.964C266.007 110.963 266.007 110.963 266.007 110.963C266.007 110.963 266.007 110.963 266.007 110.963C266.007 110.963 266.007 110.962 266.007 110.962C266.007 110.962 266.007 110.962 266.007 110.962C266.007 110.962 266.007 110.961 266.007 110.961C266.007 110.961 266.008 110.961 266.008 110.961C266.008 110.961 266.008 110.961 266.008 110.96C266.008 110.96 266.008 110.96 266.008 110.96C266.008 110.96 266.008 110.96 266.008 110.959C266.008 110.959 266.008 110.959 266.008 110.959C266.008 110.959 266.008 110.959 266.008 110.959C266.008 110.958 266.008 110.958 266.008 110.958C266.008 110.958 266.008 110.958 266.008 110.958C266.008 110.958 266.008 110.957 266.009 110.957C266.009 110.957 266.009 110.957 266.009 110.957C266.009 110.957 266.009 110.956 266.009 110.956C266.009 110.956 266.009 110.956 266.009 110.956C266.009 110.956 266.009 110.956 266.009 110.955C266.009 110.955 266.009 110.955 266.009 110.955C266.009 110.955 266.009 110.955 266.009 110.955C266.009 110.954 266.009 110.954 266.009 110.954C266.009 110.954 266.009 110.954 266.01 110.954C266.01 110.953 266.01 110.953 266.01 110.953C266.01 110.953 266.01 110.953 266.01 110.953C266.01 110.953 266.01 110.952 266.01 110.952C266.01 110.952 266.01 110.952 266.01 110.952C266.01 110.952 266.01 110.951 266.01 110.951C266.01 110.951 266.01 110.951 266.01 110.951C266.01 110.951 266.01 110.951 266.01 110.95C266.01 110.95 266.01 110.95 266.01 110.95C266.011 110.95 266.011 110.95 266.011 110.95C266.011 110.949 266.011 110.949 266.011 110.949C266.011 110.949 266.011 110.949 266.011 110.949C266.011 110.948 266.011 110.948 266.011 110.948C266.011 110.948 266.011 110.948 266.011 110.948C266.011 110.948 266.011 110.947 266.011 110.947C266.011 110.947 266.011 110.947 266.011 110.947C266.011 110.947 266.011 110.947 266.011 110.946C266.011 110.946 266.012 110.946 266.012 110.946C266.012 110.946 266.012 110.946 266.012 110.945C266.012 110.945 266.012 110.945 266.012 110.945C266.012 110.945 266.012 110.945 266.012 110.945C266.012 110.944 266.012 110.944 266.012 110.944C266.012 110.944 266.012 110.944 266.012 110.944C266.012 110.943 266.012 110.943 266.012 110.943C266.012 110.943 266.012 110.943 266.012 110.943C266.012 110.943 266.012 110.942 266.013 110.942C266.013 110.942 266.013 110.942 266.013 110.942C266.013 110.942 266.013 110.942 266.013 110.941C266.013 110.941 266.013 110.941 266.013 110.941C266.013 110.941 266.013 110.941 266.013 110.94C266.013 110.94 266.013 110.94 266.013 110.94C266.013 110.94 266.013 110.94 266.013 110.94C266.013 110.939 266.013 110.939 266.013 110.939C266.013 110.939 266.013 110.939 266.014 110.939C266.014 110.939 266.014 110.938 266.014 110.938C266.014 110.938 266.014 110.938 266.014 110.938C266.014 110.938 266.014 110.937 266.014 110.937C266.014 110.937 266.014 110.937 266.014 110.937C266.014 110.937 266.014 110.937 266.014 110.936C266.014 110.936 266.014 110.936 266.014 110.936C266.014 110.936 266.014 110.936 266.014 110.935C266.014 110.935 266.014 110.935 266.014 110.935C266.015 110.935 266.015 110.935 266.015 110.935C266.015 110.934 266.015 110.934 266.015 110.934C266.015 110.934 266.015 110.934 266.015 110.934C266.015 110.934 266.015 110.933 266.015 110.933C266.015 110.933 266.015 110.933 266.015 110.933C266.015 110.933 266.015 110.932 266.015 110.932C266.015 110.932 266.015 110.932 266.015 110.932C266.015 110.932 266.015 110.932 266.015 110.931C266.015 110.931 266.016 110.931 266.016 110.931C266.016 110.931 266.016 110.931 266.016 110.931C266.016 110.93 266.016 110.93 266.016 110.93C266.016 110.93 266.016 110.93 266.016 110.93C266.016 110.929 266.016 110.929 266.016 110.929C266.016 110.929 266.016 110.929 266.016 110.929C266.016 110.929 266.016 110.928 266.016 110.928C266.016 110.928 266.016 110.928 266.016 110.928C266.016 110.928 266.016 110.928 266.017 110.927C266.017 110.927 266.017 110.927 266.017 110.927C266.017 110.927 266.017 110.927 266.017 110.926C266.017 110.926 266.017 110.926 266.017 110.926C266.017 110.926 266.017 110.926 266.017 110.926C266.017 110.925 266.017 110.925 266.017 110.925C266.017 110.925 266.017 110.925 266.017 110.925C266.017 110.924 266.017 110.924 266.017 110.924C266.017 110.924 266.017 110.924 266.018 110.924C266.018 110.924 266.018 110.923 266.018 110.923C266.018 110.923 266.018 110.923 266.018 110.923C266.018 110.923 266.018 110.923 266.018 110.922C266.018 110.922 266.018 110.922 266.018 110.922C266.018 110.922 266.018 110.922 266.018 110.921C266.018 110.921 266.018 110.921 266.018 110.921C266.018 110.921 266.018 110.921 266.018 110.921C266.018 110.92 266.018 110.92 266.018 110.92C266.019 110.92 266.019 110.92 266.019 110.92C266.019 110.92 266.019 110.919 266.019 110.919C266.019 110.919 266.019 110.919 266.019 110.919C266.019 110.919 266.019 110.918 266.019 110.918C266.019 110.918 266.019 110.918 266.019 110.918C266.019 110.918 266.019 110.918 266.019 110.917C266.019 110.917 266.019 110.917 266.019 110.917L264.087 110.399ZM264.025 110.631C264.003 110.716 263.981 110.801 263.96 110.889L265.907 111.349C265.923 111.281 265.94 111.214 265.957 111.149L264.025 110.631ZM264.643 112.076C264.778 112.117 264.912 112.158 265.046 112.198L265.628 110.285C265.495 110.244 265.36 110.204 265.224 110.162L264.643 112.076ZM265.062 112.203C265.201 112.243 265.344 112.283 265.491 112.322L266.009 110.39C265.872 110.354 265.74 110.317 265.612 110.28L265.062 112.203ZM265.491 112.322C265.635 112.361 265.781 112.398 265.928 112.435L266.415 110.495C266.278 110.461 266.142 110.426 266.009 110.39L265.491 112.322ZM265.944 112.439C266.086 112.472 266.23 112.506 266.374 112.54L266.831 110.593C266.686 110.559 266.542 110.525 266.399 110.492L265.944 112.439ZM267.599 111.487C267.59 111.371 267.601 111.224 267.65 111.04L265.719 110.522C265.62 110.892 265.576 111.269 265.606 111.645L267.599 111.487ZM267.65 111.04C267.663 110.994 267.683 110.935 267.716 110.861L265.885 110.055C265.818 110.207 265.761 110.363 265.719 110.522L267.65 111.04ZM267.723 110.844C267.743 110.795 267.77 110.746 267.804 110.696L266.156 109.563C266.046 109.723 265.953 109.893 265.878 110.072L267.723 110.844ZM267.814 110.682C267.84 110.642 267.872 110.604 267.912 110.566L266.542 109.109C266.392 109.25 266.26 109.406 266.146 109.578L267.814 110.682ZM267.912 110.566C267.925 110.554 267.938 110.546 267.955 110.538L267.14 108.711C266.919 108.81 266.719 108.943 266.542 109.109L267.912 110.566ZM267.968 110.532C267.968 110.532 267.985 110.524 268.028 110.52L267.87 108.527C267.618 108.547 267.367 108.606 267.128 108.717L267.968 110.532ZM268.043 110.519C268.049 110.519 268.09 110.516 268.175 110.539L268.693 108.607C268.427 108.536 268.144 108.501 267.855 108.528L268.043 110.519ZM268.175 110.539C268.361 110.589 268.449 110.668 268.517 110.861C268.61 111.125 268.65 111.608 268.506 112.403L270.474 112.759C270.643 111.821 270.664 110.937 270.404 110.198C270.12 109.389 269.524 108.83 268.693 108.607L268.175 110.539ZM269.63 111.591L269.457 111.566L269.177 113.547L269.35 113.571L269.63 111.591ZM270.307 112.696C270.413 111.947 270.396 111.21 270.128 110.582C269.836 109.896 269.287 109.442 268.579 109.252L268.061 111.184C268.205 111.223 268.249 111.273 268.289 111.367C268.353 111.518 268.409 111.836 268.327 112.417L270.307 112.696ZM268.579 109.252C268.318 109.183 268.045 109.149 267.767 109.168L267.904 111.163C267.929 111.161 267.98 111.163 268.061 111.184L268.579 109.252ZM267.782 109.167C267.49 109.183 267.206 109.258 266.942 109.402L267.898 111.159C267.894 111.161 267.889 111.163 267.885 111.164C267.881 111.165 267.882 111.164 267.889 111.164L267.782 109.167ZM266.942 109.402C266.668 109.551 266.448 109.759 266.278 109.997L267.903 111.162C267.912 111.149 267.917 111.145 267.915 111.147C267.913 111.149 267.907 111.154 267.898 111.159L266.942 109.402ZM266.278 109.997C266.098 110.248 265.981 110.529 265.905 110.813L267.836 111.331C267.866 111.219 267.896 111.172 267.903 111.162L266.278 109.997ZM265.905 110.813C265.875 110.924 265.853 111.036 265.839 111.151L267.825 111.389C267.827 111.371 267.831 111.352 267.836 111.331L265.905 110.813ZM265.839 111.151C265.827 111.256 265.82 111.364 265.821 111.473L267.821 111.448C267.821 111.435 267.822 111.415 267.825 111.389L265.839 111.151ZM265.821 111.473C265.822 111.56 265.827 111.647 265.836 111.734L267.825 111.528C267.823 111.51 267.822 111.484 267.821 111.448L265.821 111.473ZM265.838 111.751C265.846 111.819 265.857 111.891 265.871 111.963L267.83 111.559C267.83 111.559 267.83 111.555 267.828 111.547C267.827 111.539 267.825 111.527 267.823 111.511L265.838 111.751ZM271.227 108.922C271.302 108.104 271.082 107.345 270.56 106.708L269.014 107.977C269.188 108.189 269.264 108.422 269.235 108.74L271.227 108.922ZM270.56 106.708C270.04 106.075 269.279 105.667 268.408 105.408L267.839 107.326C268.49 107.519 268.837 107.761 269.014 107.977L270.56 106.708ZM267.318 106.959C267.305 106.941 267.307 106.939 267.317 106.964C267.326 106.99 267.34 107.036 267.353 107.108L269.323 106.764C269.265 106.433 269.153 106.079 268.93 105.775L267.318 106.959ZM267.351 107.1C267.371 107.22 267.363 107.3 267.348 107.354L269.28 107.871C269.378 107.507 269.385 107.136 269.324 106.772L267.351 107.1ZM267.348 107.354C267.326 107.435 267.301 107.489 267.279 107.524L268.973 108.587C269.113 108.363 269.213 108.122 269.28 107.871L267.348 107.354ZM267.281 107.52C267.267 107.543 267.244 107.57 267.204 107.601L268.427 109.183C268.64 109.019 268.824 108.822 268.971 108.59L267.281 107.52ZM267.212 107.595C267.222 107.588 267.231 107.582 267.239 107.578C267.247 107.573 267.252 107.571 267.254 107.571C267.257 107.569 267.246 107.574 267.216 107.577L267.455 109.563C267.783 109.524 268.123 109.415 268.42 109.189L267.212 107.595ZM267.216 107.577C267.177 107.582 267.091 107.583 266.944 107.543L266.426 109.475C266.757 109.564 267.105 109.605 267.455 109.563L267.216 107.577ZM266.944 107.543C266.791 107.502 266.684 107.442 266.604 107.373L265.297 108.887C265.626 109.171 266.009 109.363 266.426 109.475L266.944 107.543ZM266.61 107.378C266.539 107.315 266.496 107.25 266.47 107.168L264.57 107.794C264.71 108.22 264.955 108.587 265.291 108.882L266.61 107.378ZM266.471 107.173C266.453 107.116 266.445 107.045 266.475 106.933L264.543 106.416C264.422 106.868 264.421 107.334 264.568 107.789L266.471 107.173ZM266.475 106.933C266.526 106.741 266.594 106.694 266.692 106.657L265.987 104.785C265.232 105.07 264.746 105.658 264.543 106.416L266.475 106.933ZM266.696 106.655C266.868 106.59 267.153 106.558 267.618 106.682L268.135 104.751C267.405 104.555 266.666 104.526 265.983 104.787L266.696 106.655ZM267.618 106.682C267.907 106.76 268.161 106.862 268.384 106.985L269.35 105.234C268.973 105.026 268.567 104.866 268.135 104.751L267.618 106.682ZM268.39 106.988C268.619 107.113 268.792 107.243 268.921 107.374L270.339 105.964C270.053 105.676 269.717 105.434 269.345 105.231L268.39 106.988ZM268.926 107.378C269.072 107.523 269.184 107.672 269.269 107.825L271.017 106.854C270.835 106.525 270.605 106.227 270.334 105.959L268.926 107.378ZM269.269 107.825C269.35 107.971 269.399 108.113 269.422 108.252L271.395 107.92C271.331 107.545 271.203 107.188 271.017 106.854L269.269 107.825ZM269.422 108.252C269.447 108.396 269.446 108.536 269.42 108.677L271.388 109.034C271.455 108.664 271.457 108.291 271.395 107.92L269.422 108.252ZM270.544 107.865L270.371 107.841L270.091 109.821L270.264 109.846L270.544 107.865ZM269.052 107.602C269.156 107.212 269.126 106.824 269.028 106.47L267.101 107.007C267.114 107.054 267.117 107.081 267.117 107.093C267.118 107.103 267.116 107.098 267.12 107.084L269.052 107.602ZM269.027 106.467C268.956 106.215 268.814 105.799 268.471 105.517L267.202 107.063C267.149 107.02 267.115 106.979 267.097 106.954C267.078 106.929 267.069 106.912 267.068 106.91C267.067 106.908 267.071 106.914 267.077 106.932C267.084 106.95 267.092 106.975 267.102 107.01L269.027 106.467ZM268.064 105.316C267.902 105.279 267.741 105.247 267.582 105.222L267.269 107.197C267.378 107.214 267.491 107.236 267.609 107.264L268.064 105.316ZM267.582 105.222C267.42 105.196 267.249 105.176 267.072 105.162L266.912 107.156C267.046 107.166 267.164 107.18 267.269 107.197L267.582 105.222ZM267.072 105.162C266.851 105.144 266.628 105.149 266.407 105.183L266.713 107.159C266.757 107.152 266.822 107.148 266.912 107.156L267.072 105.162ZM266.43 105.179C266.228 105.206 266.029 105.253 265.837 105.323L266.523 107.202C266.569 107.185 266.624 107.171 266.69 107.162L266.43 105.179ZM265.837 105.323C265.568 105.421 265.329 105.58 265.134 105.795L266.618 107.137C266.605 107.151 266.59 107.165 266.571 107.177C266.552 107.189 266.536 107.197 266.523 107.202L265.837 105.323ZM265.152 105.776C264.942 105.997 264.805 106.259 264.731 106.535L266.662 107.053C266.661 107.06 266.656 107.075 266.645 107.095C266.633 107.116 266.618 107.137 266.6 107.156L265.152 105.776ZM264.731 106.535C264.648 106.843 264.639 107.18 264.748 107.516L266.651 106.9C266.662 106.935 266.667 106.971 266.667 107.002C266.668 107.032 266.663 107.05 266.662 107.053L264.731 106.535ZM264.743 107.502C264.837 107.807 265.008 108.069 265.238 108.277L266.585 106.8C266.595 106.809 266.609 106.824 266.624 106.846C266.638 106.869 266.649 106.892 266.655 106.914L264.743 107.502ZM265.249 108.288C265.419 108.438 265.607 108.564 265.808 108.666L266.716 106.884C266.655 106.853 266.609 106.82 266.574 106.789L265.249 108.288ZM265.819 108.672C266.014 108.768 266.219 108.842 266.43 108.899L266.948 106.967C266.849 106.941 266.769 106.91 266.705 106.878L265.819 108.672ZM266.43 108.899C266.911 109.028 267.456 109.074 267.971 108.873L267.242 107.01C267.261 107.003 267.255 107.01 267.206 107.01C267.156 107.01 267.072 107.001 266.948 106.967L266.43 108.899ZM267.983 108.868C268.575 108.628 268.909 108.134 269.052 107.602L267.12 107.084C267.107 107.131 267.101 107.124 267.125 107.094C267.137 107.08 267.153 107.063 267.174 107.047C267.195 107.032 267.215 107.022 267.231 107.015L267.983 108.868Z\"\r\n        fill=\"#294069\"\r\n        mask=\"url(#path-1-outside-1_432_1698)\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Billet;\r\n","function Bienvenue() {\r\n  return (\r\n    <svg\r\n      width=\"100\"\r\n      height=\"100\"\r\n      viewBox=\"0 0 122 122\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <rect\r\n        x=\"71.6064\"\r\n        y=\"15.127\"\r\n        width=\"45.0635\"\r\n        height=\"7.20756\"\r\n        transform=\"rotate(42.5151 71.6064 15.127)\"\r\n        fill=\"#294069\"\r\n      />\r\n      <rect\r\n        width=\"45.0635\"\r\n        height=\"7.20756\"\r\n        transform=\"matrix(-0.737099 0.675785 0.675785 0.737099 49.6641 16.0847)\"\r\n        fill=\"#294069\"\r\n      />\r\n      <path\r\n        fill-rule=\"evenodd\"\r\n        clip-rule=\"evenodd\"\r\n        d=\"M49.0288 4.93318C51.7612 2.35561 56.1913 2.35561 58.9237 4.93318L60.9729 6.86636L63.0222 4.93318C65.7546 2.35561 70.1847 2.35561 72.9171 4.93318C73.7501 5.71902 74.3163 6.77505 74.701 7.86349C75.8581 11.1371 74.9698 14.7079 72.8029 17.4208C70.0366 20.8842 65.6564 24.9983 61.9664 25.7995C61.5896 25.8813 61.1978 25.8177 60.8444 25.6632C54.3716 22.8341 50.9775 20.4926 48.2148 15.2163C47.4565 13.7682 46.8754 12.2058 46.7417 10.5766C46.5769 8.56937 47.0509 6.79909 49.0288 4.93318Z\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <path\r\n        d=\"M3 50.2504C3 46.8379 5.76639 44.0715 9.1789 44.0715H15.3578H106.769H112.766C116.179 44.0715 118.945 46.8379 118.945 50.2504V57.1563V106.406V113.13C118.945 116.542 116.179 119.309 112.766 119.309H106.951H15.5395H9.1789C5.76639 119.309 3 116.542 3 113.13V106.588V57.1563V50.2504Z\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <path\r\n        d=\"M112.766 44.0715H106.769C107.26 53.8297 109.75 56.8821 118.945 57.1563V50.2504C118.945 46.8379 116.179 44.0715 112.766 44.0715Z\"\r\n        fill=\"#294069\"\r\n      />\r\n      <path\r\n        d=\"M118.945 113.13V106.406C110.139 106.85 107.316 109.455 106.951 119.309H112.766C116.179 119.309 118.945 116.542 118.945 113.13Z\"\r\n        fill=\"#294069\"\r\n      />\r\n      <path\r\n        d=\"M9.1789 119.309H15.5395C15.0757 110.032 12.956 106.638 3 106.588V113.13C3 116.542 5.76639 119.309 9.1789 119.309Z\"\r\n        fill=\"#294069\"\r\n      />\r\n      <path\r\n        d=\"M3 50.2504V57.1563C11.9244 55.9625 15.8324 54.247 15.3578 44.0715H9.1789C5.76639 44.0715 3 46.8379 3 50.2504Z\"\r\n        fill=\"#294069\"\r\n      />\r\n      <rect x=\"3\" y=\"66.6063\" width=\"115.945\" height=\"30.1676\" fill=\"#FFFCF5\" />\r\n      <path\r\n        d=\"M21.0924 82.0558C21.8117 82.2091 22.3895 82.5688 22.8258 83.1348C23.2622 83.689 23.4803 84.3258 23.4803 85.0452C23.4803 86.0829 23.1148 86.9084 22.3836 87.5216C21.6643 88.123 20.656 88.4237 19.3589 88.4237H13.5747V76.0063H19.1643C20.4261 76.0063 21.4108 76.2952 22.1183 76.873C22.8376 77.4509 23.1973 78.2351 23.1973 79.2256C23.1973 79.9567 23.0027 80.5641 22.6136 81.0475C22.2362 81.531 21.7292 81.8671 21.0924 82.0558ZM16.5995 81.0299H18.5806C19.0759 81.0299 19.4532 80.9237 19.7126 80.7115C19.9839 80.4874 20.1195 80.1631 20.1195 79.7386C20.1195 79.3141 19.9839 78.9898 19.7126 78.7657C19.4532 78.5417 19.0759 78.4296 18.5806 78.4296H16.5995V81.0299ZM18.8282 85.9827C19.3353 85.9827 19.7244 85.8706 19.9957 85.6466C20.2787 85.4107 20.4202 85.0747 20.4202 84.6383C20.4202 84.202 20.2728 83.86 19.978 83.6124C19.695 83.3648 19.2999 83.2409 18.7928 83.2409H16.5995V85.9827H18.8282ZM28.2594 76.0063V88.4237H25.2347V76.0063H28.2594ZM33.4762 78.4296V80.9414H37.5269V83.2763H33.4762V86.0004H38.0576V88.4237H30.4514V76.0063H38.0576V78.4296H33.4762ZM51.1297 88.4237H48.105L43.046 80.7645V88.4237H40.0213V76.0063H43.046L48.105 83.7008V76.0063H51.1297V88.4237ZM64.9791 76.0063L60.5746 88.4237H56.7893L52.3848 76.0063H55.6041L58.6819 85.3813L61.7774 76.0063H64.9791ZM69.268 78.4296V80.9414H73.3187V83.2763H69.268V86.0004H73.8494V88.4237H66.2433V76.0063H73.8494V78.4296H69.268ZM86.9216 88.4237H83.8968L78.8379 80.7645V88.4237H75.8131V76.0063H78.8379L83.8968 83.7008V76.0063H86.9216V88.4237ZM92.0858 76.0063V83.4355C92.0858 84.1784 92.2686 84.7504 92.6342 85.1513C92.9997 85.5523 93.5363 85.7527 94.2438 85.7527C94.9514 85.7527 95.4938 85.5523 95.8712 85.1513C96.2485 84.7504 96.4372 84.1784 96.4372 83.4355V76.0063H99.462V83.4178C99.462 84.5263 99.2261 85.4638 98.7544 86.2303C98.2827 86.9968 97.6459 87.5747 96.8441 87.9638C96.054 88.353 95.1695 88.5475 94.1908 88.5475C93.212 88.5475 92.3335 88.3588 91.5552 87.9815C90.7886 87.5923 90.1813 87.0145 89.7332 86.248C89.2851 85.4697 89.0611 84.5263 89.0611 83.4178V76.0063H92.0858ZM104.611 78.4296V80.9414H108.661V83.2763H104.611V86.0004H109.192V88.4237H101.586V76.0063H109.192V78.4296H104.611Z\"\r\n        fill=\"#97AC83\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Bienvenue;\r\n","function Lit() {\r\n  return (\r\n    <svg\r\n      width=\"100\"\r\n      height=\"100\"\r\n      viewBox=\"0 0 122 122\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <rect\r\n        x=\"55.4736\"\r\n        y=\"48.8888\"\r\n        width=\"55.6475\"\r\n        height=\"40.1507\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <rect\r\n        x=\"12.9751\"\r\n        y=\"54.2892\"\r\n        width=\"31.4632\"\r\n        height=\"15.4968\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <rect\r\n        x=\"12.0361\"\r\n        y=\"69.7859\"\r\n        width=\"33.5764\"\r\n        height=\"12.4444\"\r\n        fill=\"#294069\"\r\n      />\r\n      <rect\r\n        x=\"109.008\"\r\n        y=\"47.9497\"\r\n        width=\"12.2096\"\r\n        height=\"49.3079\"\r\n        rx=\"1.59693\"\r\n        fill=\"#294069\"\r\n      />\r\n      <path\r\n        d=\"M43.7334 51.3942C43.7334 48.4544 46.1166 46.0712 49.0565 46.0712H54.5495C55.5785 46.0712 56.4126 46.9053 56.4126 47.9342V87.1764C56.4126 88.2054 55.5785 89.0395 54.5495 89.0395H45.5965C44.5675 89.0395 43.7334 88.2054 43.7334 87.1764V51.3942Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M15.5576 52.9912C15.5576 49.1694 18.6558 46.0712 22.4776 46.0712H34.4656C38.2874 46.0712 41.3856 49.1694 41.3856 52.9912V54.2892H15.5576V52.9912Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <rect\r\n        x=\"1\"\r\n        y=\"24\"\r\n        width=\"11.9748\"\r\n        height=\"73.0227\"\r\n        rx=\"1.59693\"\r\n        fill=\"#294069\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Lit;\r\n","function Parking() {\r\n  return (\r\n    <svg\r\n      width=\"100\"\r\n      height=\"100\"\r\n      viewBox=\"0 0 122 122\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M43.6055 107.717H64.5742V111.754C64.5742 117.413 59.9869 122 54.3281 122H53.8516C48.1928 122 43.6055 117.413 43.6055 111.754V107.717Z\"\r\n        fill=\"#294069\"\r\n      />\r\n      <path\r\n        d=\"M93.6445 107.717H114.613V111.754C114.613 117.413 110.026 122 104.367 122H103.891C98.2319 122 93.6445 117.413 93.6445 111.754V107.717Z\"\r\n        fill=\"#294069\"\r\n      />\r\n      <path\r\n        d=\"M49.1634 57.6547C50.5383 53.4384 54.4697 50.5853 58.9046 50.5853H99.497C103.901 50.5853 107.812 53.3996 109.212 57.5753L115.686 76.8897H42.8906L49.1634 57.6547Z\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <path\r\n        d=\"M56.0665 59.9203C56.5568 58.4672 57.9195 57.4888 59.4531 57.4888H98.9538C100.476 57.4888 101.832 58.4534 102.331 59.8919L108.597 77.961H49.9795L56.0665 59.9203Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M36.457 81.7793C36.457 76.3837 40.831 72.0098 46.2266 72.0098H112.23C117.626 72.0098 122 76.3837 122 81.7793V104.858C122 106.437 120.72 107.717 119.141 107.717H39.3164C37.7372 107.717 36.457 106.437 36.457 104.858V81.7793Z\"\r\n        fill=\"#F9A626\"\r\n      />\r\n      <rect\r\n        x=\"93.6445\"\r\n        y=\"86.2927\"\r\n        width=\"14.5352\"\r\n        height=\"7.37951\"\r\n        rx=\"3.68976\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <rect\r\n        x=\"50.0391\"\r\n        y=\"86.2927\"\r\n        width=\"14.5352\"\r\n        height=\"7.37951\"\r\n        rx=\"3.68976\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M0 10.1268C0 4.59967 4.48065 0.119019 10.0078 0.119019H32.6445C42.2513 0.119019 50.0391 7.90682 50.0391 17.5136V40.0942C50.0391 49.701 42.2513 57.4888 32.6445 57.4888H10.0078C4.48065 57.4888 0 53.0081 0 47.481V10.1268Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <rect\r\n        x=\"14.2969\"\r\n        y=\"57.4888\"\r\n        width=\"7.14844\"\r\n        height=\"43.0868\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M7.14844 103.673C7.14844 101.962 8.53531 100.576 10.2461 100.576H25.4961C27.2069 100.576 28.5938 101.962 28.5938 103.673V114.858H7.14844V103.673Z\"\r\n        fill=\"#294069\"\r\n      />\r\n      <rect\r\n        y=\"114.859\"\r\n        width=\"35.7422\"\r\n        height=\"7.14146\"\r\n        rx=\"3.57073\"\r\n        fill=\"#294069\"\r\n      />\r\n      <path\r\n        d=\"M36.6398 24.4076C36.6398 26.0955 36.2442 27.6382 35.4531 29.036C34.6883 30.4073 33.5147 31.5149 31.9324 32.3588C30.3764 33.1764 28.4644 33.5851 26.1964 33.5851H22.3593V43H14.6059V15.1115H26.1964C28.4381 15.1115 30.3369 15.5071 31.8928 16.2982C33.4751 17.0894 34.6619 18.1838 35.4531 19.5815C36.2442 20.9793 36.6398 22.588 36.6398 24.4076ZM25.4448 27.4141C27.6337 27.4141 28.7282 26.4119 28.7282 24.4076C28.7282 22.377 27.6337 21.3617 25.4448 21.3617H22.3593V27.4141H25.4448Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Parking;\r\n","// //Assets\r\nimport Bienvenue from \"../assets/icons/Bienvenue\";\r\nimport Lit from \"../assets/icons/Lit\";\r\nimport Parking from \"../assets/icons/Parking\";\r\nimport accueil from \"../assets/programmation/accueil.jpg\";\r\nimport ceremonieLaique from \"../assets/programmation/ceremonie-laique.jpg\";\r\nimport vinHonneur from \"../assets/programmation/vin-honneur.jpg\";\r\nimport debutActivites from \"../assets/programmation/début-activités.jpg\";\r\nimport dispoLogements from \"../assets/programmation/dispo-logements.jpg\";\r\nimport repas from \"../assets/programmation/repas.jpg\";\r\nimport ouvertureBal from \"../assets/programmation/ouverture-bal.jpg\";\r\nimport desserts from \"../assets/programmation/desserts.jpg\";\r\nimport checkOut from \"../assets/programmation/check-out.jpg\";\r\nimport activitesLendemain from \"../assets/programmation/activités-lendemain.jpg\";\r\nimport brunch from \"../assets/programmation/brunch.jpg\";\r\nimport depart from \"../assets/programmation/depart.jpg\";\r\n\r\nexport const listeCardProgramme = [\r\n  {\r\n    id: \"un\",\r\n    icon: Bienvenue,\r\n    title: \"Comment se passe l'arrivée ?\",\r\n    content:\r\n      \"L’arrivée est possible à partir de 12h, et nous viendrons vous accueillir à 13h. Les camping-cars et vans peuvent se brancher dès leur arrivée, et les tentes peuvent s’installer immédiatement.\",\r\n    bgColor: \"bg-pink\",\r\n  },\r\n  {\r\n    id: \"deux\",\r\n    icon: Lit,\r\n    title: \"Quand peut-on prendre les chambres ?\",\r\n    content:\r\n      \"La répartition des hébergements se fait à partir de 15h, avec un accès possible à partir de 16h le samedi.\",\r\n    bgColor: \"bg-orange\",\r\n  },\r\n  {\r\n    id: \"trois\",\r\n    icon: Parking,\r\n    title: \"Où se garer ?\",\r\n    content:\r\n      \"À l’arrivée, garez-vous sur le parking des camping-cars. Pour les lodges les plus éloignés, vous pouvez utiliser le petit parking pour décharger vos affaires, puis déplacer votre véhicule sur le parking principal.\",\r\n    bgColor: \"bg-green\",\r\n  },\r\n];\r\n\r\nexport const samediSlides = [\r\n  {\r\n    horaire: \"13h00\",\r\n    title: \"Accueil\",\r\n    cover: accueil,\r\n  },\r\n  {\r\n    horaire: \"14h00\",\r\n    title: \"Cérémonie laïque (au domaine)\",\r\n    cover: ceremonieLaique,\r\n  },\r\n  {\r\n    horaire: \"15h00\",\r\n    title: \"Vin d'honneur\",\r\n    cover: vinHonneur,\r\n  },\r\n  {\r\n    horaire: \"15h45\",\r\n    title: \"Début des activités & séance photos\",\r\n    cover: debutActivites,\r\n  },\r\n  {\r\n    horaire: \"16h00\",\r\n    title: \"Mise à disposition des logements\",\r\n    cover: dispoLogements,\r\n  },\r\n  {\r\n    horaire: \"18h00\",\r\n    title: \"Repas\",\r\n    cover: repas,\r\n  },\r\n  {\r\n    horaire: \"21h00\",\r\n    title: \"Ouverture de bal\",\r\n    cover: ouvertureBal,\r\n  },\r\n  {\r\n    horaire: \"22h00\",\r\n    title: \"Dessert\",\r\n    cover: desserts,\r\n  },\r\n];\r\n\r\nexport const dimancheSlides = [\r\n  {\r\n    horaire: \"Avant 12h00\",\r\n    title: \"Check out des logements\",\r\n    cover: checkOut,\r\n  },\r\n  {\r\n    horaire: \"De 9h00 à 16h00\",\r\n    title: \"Activités sur le domaine (piscine, jeux, ballades...)\",\r\n    cover: activitesLendemain,\r\n  },\r\n  {\r\n    horaire: \"11h00\",\r\n    title: \"Brunch\",\r\n    cover: brunch,\r\n  },\r\n  {\r\n    horaire: \"Avant 16h00\",\r\n    title: \"Départ\",\r\n    cover: depart,\r\n  },\r\n];\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// Composants\r\nimport WaveShapeHaut from \"../../components/Wave-shape-haut\";\r\nimport Banner from \"../../components/Banner\";\r\nimport CardProgrammation from \"../../components/Card-programmation\";\r\nimport Button from \"../../components/Button\";\r\nimport CarrouselProgramme from \"../../components/Carrousel-programme\";\r\n\r\n// Styles\r\nimport \"../../styles/Programmation.css\";\r\n\r\n//Assets\r\nimport Coeur from \"../../assets/icons/Coeur\";\r\nimport puyDuFou from \"../../assets/programmation/puy-du-fou.jpg\";\r\nimport grandeRoue from \"../../assets/grande-roue.png\";\r\nimport buissonDroit from \"../../assets/buisson-droit.png\";\r\nimport Origamis from \"../../assets/svg/Origamis\";\r\nimport Billet from \"../../assets/svg/Billets\";\r\n\r\n// Données\r\nimport {\r\n  listeCardProgramme,\r\n  samediSlides,\r\n  dimancheSlides,\r\n} from \"../../datas/programmation\";\r\nimport { white } from \"../../datas/colors\";\r\n\r\nfunction Programmation() {\r\n  const [toggle, setToggle] = useState(1);\r\n\r\n  function updateToggle(id) {\r\n    setToggle(id);\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = \"Programmation - Mariage Stéphie & Alain\"\r\n  }, [])\r\n\r\n  return (\r\n    <main>\r\n      {/* Bannière */}\r\n      <Banner />\r\n      <WaveShapeHaut />\r\n\r\n      {/* Description programmation */}\r\n      <section className=\"description-programmation bg-white fade-in-section\">\r\n        <Origamis /> \r\n        <h2 className=\"text-center \">\r\n          La programmation du{\" \"}\r\n          <span className=\"green title text-center\">week-end</span> !\r\n        </h2>\r\n        <div className=\"text text-center\">\r\n          <p>\r\n            Ce week-end place à l'aventure avec des jeux, des défis et beaucoup\r\n            de rires.\r\n          </p>\r\n          <p>\r\n            Pour les tenues, on vous l'a dit, faites dans le Pratique-Habillé et\r\n            pour les couleurs, lâchez-vous, elles sont à l'honneur ! (parmi le\r\n            petit panachage présenté ci-dessous).\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"palette-couleur\">\r\n          <div className=\"couleur bleu\"></div>\r\n          <div className=\"couleur violet\"></div>\r\n          <div className=\"couleur rose\"></div>\r\n          <div className=\"couleur orange-flash\"></div>\r\n          <div className=\"couleur jaune\"></div>\r\n          <div className=\"couleur turquoise\"></div>\r\n          <div className=\"couleur vert\"></div>\r\n        </div>\r\n\r\n        <div className=\"card-programme-layout\">\r\n          {listeCardProgramme.map(\r\n            ({ icon, title, content, bgColor, id }, index) => (\r\n              <CardProgrammation\r\n                key={index}\r\n                Icon={icon}\r\n                title={title}\r\n                content={content}\r\n                bgColor={bgColor}\r\n                id={id}\r\n              />\r\n            )\r\n          )}\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"tabs tabs-programme bg-white fade-in-section\">\r\n        <ul className=\"tabs-nav-container\">\r\n          <li\r\n            className={toggle === 1 ? \"tabs-title-active\" : \"tabs-title\"}\r\n            onClick={() => updateToggle(1)}\r\n          >\r\n            Le samedi\r\n          </li>\r\n          <li\r\n            className={toggle === 2 ? \"tabs-title-active\" : \"tabs-title\"}\r\n            onClick={() => updateToggle(2)}\r\n          >\r\n            Le dimanche\r\n          </li>\r\n        </ul>\r\n        <div\r\n          className={\r\n            toggle === 1\r\n              ? \"show-content tabs-content-programme\"\r\n              : \"tabs-content\"\r\n          }\r\n        >\r\n          <ul className=\"calendrier\">\r\n            <li className=\"date\">1</li>\r\n            <li className=\"date\">2</li>\r\n            <li className=\"date\">3</li>\r\n            <li className=\"date\">4</li>\r\n            <li className=\"date\">5</li>\r\n            <div className=\"date-coeur\">\r\n              <li className=\"date pink\">6</li>\r\n              <Coeur className=\"coeur\" />\r\n            </div>\r\n            <li className=\"date\">7</li>\r\n          </ul>\r\n          \r\n          <CarrouselProgramme typeSwiper={samediSlides}/>\r\n\r\n        </div>\r\n        <div\r\n          className={\r\n            toggle === 2\r\n              ? \"show-content tabs-content-programme\"\r\n              : \"tabs-content\"\r\n          }\r\n        >\r\n          <ul className=\"calendrier\">\r\n            <li className=\"date\">1</li>\r\n            <li className=\"date\">2</li>\r\n            <li className=\"date\">3</li>\r\n            <li className=\"date\">4</li>\r\n            <li className=\"date\">5</li>\r\n            <li className=\"date\">6</li>\r\n            <div className=\"date-coeur\">\r\n              <li className=\"date pink\">7</li>\r\n              <Coeur className=\"coeur\" />\r\n            </div>\r\n          </ul>\r\n          \r\n          <CarrouselProgramme typeSwiper={dimancheSlides}/>\r\n\r\n        </div>\r\n      </section>\r\n\r\n      {/* Puy du fou */}\r\n      <section className=\"encart-bleu encart-programme fade-in-section\">\r\n        <Billet />\r\n        <div className=\"img-title\">\r\n          <img src={puyDuFou} alt=\"\" className=\"img-puy-fou\" />\r\n          <h2 className=\"white\">Envie d'une escapade au Puy du Fou ?</h2>\r\n        </div>\r\n        <div className=\"text content-galerie\">\r\n          <p className=\"white\">\r\n          Le domaine où nous célébrerons notre mariage se trouve à seulement 30 minutes du Puy du Fou, un parc unique où l’Histoire prend vie sous vos yeux.\r\n          </p>\r\n          <p className=\"white\">Et si vous en profitiez pour y faire un tour ?</p>\r\n          <p className=\"white\">\r\n          De notre côté, nous pensons y aller le mardi suivant (sous réserve, bien sûr, que notre énergie post-fête soit au rendez-vous !). <br /> Si vous envisagez d’y aller aussi, n’hésitez pas à nous faire signe : ce serait l’occasion de nous retrouver là-bas et qui sait… peut-être partager ensemble quelques instants de magie en plus.\r\n          </p>\r\n          <p className=\"white\">\r\n          💡 À savoir : <br /> Le parc propose un Pass Émotion (places limitées chaque jour, au tarif de 30 € par jour, on vous assure il vaut vraiment le coup) qui permet de bénéficier :\r\n          </p>\r\n          <ul>\r\n            <li className=\"white\">de places réservées bien situées pour les grands spectacles,\r\n            </li>\r\n            <li className=\"white\">et d’un accès facilité sans longues files d’attente.\r\n            </li>\r\n          </ul>\r\n          <p className=\"white\">Si cela vous tente, pensez à réserver vos billets en avance !\r\n          </p>\r\n        </div>\r\n        <Button\r\n          link=\"https://www.puydufou.com/france/fr?utm_term=puy%20du%20fou&utm_campaign=%5BB2C%5D+SEA_D%C3%A9fense_Nouveaux+clients&utm_source=adwords&utm_medium=ppc&hsa_acc=2657850800&hsa_cam=72954872&hsa_grp=118675126480&hsa_ad=650203640301&hsa_src=g&hsa_tgt=kwd-2543611260&hsa_kw=puy%20du%20fou&hsa_mt=e&hsa_net=adwords&hsa_ver=3&gad_source=1&gclid=Cj0KCQjw782_BhDjARIsABTv_JATjPBZajPcLyNqSRw02gQ4R1dMUxjyUtIcxs2ZSIeLbTAcU3h71McaAsCDEALw_wcB\"\r\n          color={white}\r\n          borderColor=\"button-white\"\r\n        />\r\n      </section>\r\n\r\n      <div className=\"illustrations-bas\">\r\n        <img src={grandeRoue} alt=\"\" className=\"img-bas1 img-bas-programme1\" />\r\n        <img src={buissonDroit} alt=\"\" className=\"img-bas2 img-bas-programme2\" />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Programmation;\r\n","function FeuxVert() {\r\n  return (\r\n    <svg\r\n      width=\"217\"\r\n      height=\"306\"\r\n      viewBox=\"0 0 217 306\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"feux-activites\"\r\n    >\r\n      <path\r\n        d=\"M150.878 76.4944C149.194 81.1374 159.965 69.818 161.83 65.9215C166.25 56.685 168.192 46.1457 169.16 36.0027C169.954 27.6769 157.928 24.6256 155.324 32.849C151.056 46.3315 156.237 61.7212 150.878 76.4944ZM124.103 72.6864C124.878 73.59 115.671 30.2684 115.522 25.3476C115.261 16.7402 102.21 16.6014 102.243 25.2713C102.305 41.7925 113.752 60.6204 124.103 72.6864ZM111.343 95.3295C112.518 95.8323 83.6792 62.0593 80.2059 57.1118C74.1968 48.5522 60.7276 56.7851 66.2502 65.8137C74.4302 79.1869 97.6145 89.4545 111.343 95.3295ZM115.753 112.698C117.216 112.055 61.8468 116.083 57.0364 115.658C50.3397 115.066 49.1208 125.203 55.841 125.88C75.7649 127.887 97.8232 120.573 115.753 112.698ZM134.749 124.441C133.258 117.13 126.077 142.398 122.532 147.621C119.632 151.895 125.687 156.767 129.021 152.713C135.48 144.859 136.719 134.101 134.749 124.441ZM162.255 106.305C158.049 106.058 172.829 116.749 185.444 115.118C186.762 114.948 187.946 114.415 188.821 113.387C195.682 105.334 168.402 106.665 162.255 106.305ZM156.265 90.7095C154.092 91.7446 167.213 92.2774 172.922 88.8173C180.444 84.2585 186.113 76.4239 190.036 68.6751C191.264 66.2492 191.179 63.4083 189.431 61.2355C185.102 55.8519 167.461 85.3759 156.265 90.7095Z\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <ellipse\r\n        cx=\"9.27214\"\r\n        cy=\"11.5902\"\r\n        rx=\"9.27214\"\r\n        ry=\"11.5902\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 148.465 95.4376)\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <circle\r\n        cx=\"6.9541\"\r\n        cy=\"6.9541\"\r\n        r=\"6.9541\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 202.746 48.7507)\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <path\r\n        d=\"M64.0834 187.029C63.4186 188.661 81.5601 174.459 87.0879 171.221C91.7787 168.473 88.1541 161.124 83.1965 163.53C74.5692 167.718 67.5781 178.455 64.0834 187.029ZM49.3808 186.599C50.0837 190.716 58.5868 181.396 52.2613 168.022C51.1739 165.723 48.4641 164.606 46.1458 165.872C42.4174 167.908 48.5715 181.86 49.3808 186.599ZM46.8265 212.508C52.2962 211.46 40.9194 202.767 26.6645 210.08C17.6068 214.727 29.3038 218.91 35.2011 215.846C38.9019 213.923 42.7782 213.284 46.8265 212.508ZM58.0356 220.487C58.4988 215.247 51.9279 227.93 51.2177 231.769C49.4992 241.058 49.6241 251.066 51.5791 260.318C52.1364 262.956 54.5493 264.836 57.2916 264.322C60.3936 263.742 57.3896 227.797 58.0356 220.487ZM68.1964 219.42C67.2093 219.005 77.6635 234.179 78.4419 240.832C79.0893 246.364 87.3579 245.134 86.3673 239.654C84.5476 229.585 77.258 223.232 68.1964 219.42ZM79.4882 208.926C76.2129 212.532 96.0632 215.376 91.6122 212.377C91.5469 212.333 97.3719 207.889 95.4006 206.824C94.0002 206.067 89.4869 207.447 92.9348 206.529C93.0338 206.503 93.3369 206.452 93.2353 206.464C90.1108 206.857 81.0519 207.204 79.4882 208.926ZM94.964 206.626C93.213 205.98 91.2699 206.876 90.624 208.627C89.9781 210.378 90.874 212.321 92.625 212.967C94.3761 213.613 96.3192 212.717 96.965 210.966C97.6109 209.215 96.715 207.272 94.964 206.626ZM74.9576 190.043C74.5766 190.35 100.393 184.728 108.489 184.009C114.618 183.465 114.452 174.19 108.216 174.27C96.719 174.417 83.5108 183.148 74.9576 190.043Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <ellipse\r\n        cx=\"4.96666\"\r\n        cy=\"3.97333\"\r\n        rx=\"4.96666\"\r\n        ry=\"3.97333\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 98.0344 155.246)\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <ellipse\r\n        cx=\"7.94666\"\r\n        cy=\"6.95333\"\r\n        rx=\"7.94666\"\r\n        ry=\"6.95333\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 70.1523 202.135)\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <circle\r\n        cx=\"5.96\"\r\n        cy=\"5.96\"\r\n        r=\"5.96\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 59.8242 270.32)\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M164.351 153.094C164.509 151.335 162.24 150.497 161.217 151.938L155.52 159.96C155.236 160.36 154.796 160.621 154.309 160.677L145.109 161.743C143.7 161.906 143.075 163.601 144.04 164.64L150.344 171.425C150.678 171.784 150.844 172.268 150.8 172.757L149.923 182.557C149.765 184.316 152.035 185.153 153.057 183.713L158.754 175.69C159.038 175.291 159.478 175.03 159.966 174.973L169.166 173.908C170.574 173.744 171.199 172.049 170.234 171.011L163.93 164.226C163.596 163.867 163.43 163.382 163.474 162.894L164.351 153.094Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M134.318 184.519C134.481 182.755 132.202 181.915 131.181 183.362L128.573 187.057C128.291 187.457 127.853 187.719 127.367 187.778L122.325 188.386C120.925 188.555 120.304 190.238 121.259 191.276L124.698 195.013C125.029 195.373 125.193 195.856 125.148 196.344L124.731 200.847C124.568 202.611 126.847 203.452 127.868 202.004L130.476 198.309C130.758 197.909 131.196 197.647 131.682 197.589L136.724 196.98C138.124 196.811 138.745 195.128 137.79 194.09L134.351 190.354C134.019 189.994 133.856 189.51 133.901 189.023L134.318 184.519Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default FeuxVert;\r\n","function FeuxBleu() {\r\n  return (\r\n    <svg\r\n      width=\"217\"\r\n      height=\"306\"\r\n      viewBox=\"0 0 217 306\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"feux-activites\"\r\n    >\r\n      <path\r\n        d=\"M150.878 76.4946C149.194 81.1375 159.965 69.8181 161.83 65.9216C166.25 56.6851 168.192 46.1458 169.16 36.0028C169.954 27.677 157.928 24.6257 155.324 32.8492C151.056 46.3317 156.237 61.7214 150.878 76.4946ZM124.103 72.6865C124.878 73.5901 115.671 30.2686 115.522 25.3477C115.261 16.7403 102.21 16.6015 102.243 25.2714C102.305 41.7926 113.752 60.6205 124.103 72.6865ZM111.343 95.3296C112.518 95.8324 83.6792 62.0594 80.2059 57.1119C74.1968 48.5523 60.7276 56.7852 66.2502 65.8139C74.4302 79.1871 97.6145 89.4546 111.343 95.3296ZM115.753 112.698C117.216 112.055 61.8468 116.083 57.0364 115.658C50.3397 115.066 49.1208 125.203 55.841 125.88C75.7649 127.887 97.8232 120.573 115.753 112.698ZM134.749 124.441C133.258 117.13 126.077 142.399 122.532 147.621C119.632 151.895 125.687 156.767 129.021 152.713C135.48 144.859 136.719 134.101 134.749 124.441ZM162.255 106.305C158.049 106.059 172.829 116.749 185.444 115.118C186.762 114.948 187.946 114.415 188.821 113.387C195.682 105.334 168.402 106.665 162.255 106.305ZM156.265 90.7096C154.092 91.7448 167.213 92.2776 172.922 88.8174C180.444 84.2586 186.113 76.424 190.036 68.6752C191.264 66.2493 191.179 63.4084 189.431 61.2356C185.102 55.852 167.461 85.376 156.265 90.7096Z\"\r\n        fill=\"#294069\"\r\n      />\r\n      <ellipse\r\n        cx=\"9.27214\"\r\n        cy=\"11.5902\"\r\n        rx=\"9.27214\"\r\n        ry=\"11.5902\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 148.465 95.4377)\"\r\n        fill=\"#294069\"\r\n      />\r\n      <circle\r\n        cx=\"6.9541\"\r\n        cy=\"6.9541\"\r\n        r=\"6.9541\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 202.746 48.7509)\"\r\n        fill=\"#294069\"\r\n      />\r\n      <path\r\n        d=\"M64.0834 187.029C63.4186 188.661 81.5601 174.459 87.0879 171.221C91.7787 168.473 88.1541 161.124 83.1965 163.53C74.5692 167.718 67.5781 178.455 64.0834 187.029ZM49.3808 186.599C50.0837 190.716 58.5868 181.396 52.2613 168.022C51.1739 165.723 48.4641 164.606 46.1458 165.872C42.4174 167.908 48.5715 181.86 49.3808 186.599ZM46.8265 212.508C52.2962 211.46 40.9194 202.767 26.6645 210.08C17.6068 214.727 29.3038 218.91 35.2011 215.846C38.9019 213.923 42.7782 213.284 46.8265 212.508ZM58.0356 220.487C58.4988 215.247 51.9279 227.93 51.2177 231.769C49.4992 241.058 49.6241 251.066 51.5791 260.318C52.1364 262.956 54.5493 264.836 57.2916 264.322C60.3936 263.742 57.3896 227.797 58.0356 220.487ZM68.1964 219.42C67.2093 219.005 77.6635 234.179 78.4419 240.832C79.0893 246.364 87.3579 245.134 86.3673 239.654C84.5476 229.585 77.258 223.232 68.1964 219.42ZM79.4882 208.926C76.2129 212.532 96.0632 215.376 91.6122 212.377C91.5469 212.333 97.3719 207.889 95.4006 206.824C94.0002 206.067 89.4869 207.447 92.9348 206.529C93.0338 206.503 93.3369 206.452 93.2353 206.464C90.1108 206.857 81.0519 207.204 79.4882 208.926ZM94.964 206.626C93.213 205.98 91.2699 206.876 90.624 208.627C89.9781 210.378 90.874 212.321 92.625 212.967C94.3761 213.613 96.3192 212.717 96.965 210.966C97.6109 209.215 96.715 207.272 94.964 206.626ZM74.9576 190.043C74.5766 190.35 100.393 184.728 108.489 184.009C114.618 183.465 114.452 174.19 108.216 174.27C96.719 174.417 83.5108 183.148 74.9576 190.043Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <ellipse\r\n        cx=\"4.96666\"\r\n        cy=\"3.97333\"\r\n        rx=\"4.96666\"\r\n        ry=\"3.97333\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 98.0344 155.246)\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <ellipse\r\n        cx=\"7.94666\"\r\n        cy=\"6.95333\"\r\n        rx=\"7.94666\"\r\n        ry=\"6.95333\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 70.1523 202.135)\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <circle\r\n        cx=\"5.96\"\r\n        cy=\"5.96\"\r\n        r=\"5.96\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 59.8242 270.32)\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M164.351 153.094C164.509 151.335 162.24 150.497 161.217 151.938L155.52 159.96C155.236 160.36 154.796 160.621 154.309 160.677L145.109 161.743C143.7 161.906 143.075 163.601 144.04 164.64L150.344 171.425C150.678 171.784 150.844 172.268 150.8 172.757L149.923 182.557C149.765 184.316 152.035 185.153 153.057 183.713L158.754 175.69C159.038 175.291 159.478 175.03 159.966 174.973L169.166 173.908C170.574 173.744 171.199 172.049 170.234 171.011L163.93 164.226C163.596 163.867 163.43 163.382 163.474 162.894L164.351 153.094Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M134.318 184.519C134.481 182.755 132.202 181.915 131.181 183.362L128.573 187.057C128.291 187.457 127.853 187.719 127.367 187.778L122.325 188.386C120.925 188.555 120.304 190.238 121.259 191.276L124.698 195.013C125.029 195.373 125.193 195.856 125.148 196.344L124.731 200.847C124.568 202.611 126.847 203.452 127.868 202.004L130.476 198.309C130.758 197.909 131.196 197.647 131.682 197.589L136.724 196.98C138.124 196.811 138.745 195.128 137.79 194.09L134.351 190.354C134.019 189.994 133.856 189.51 133.901 189.023L134.318 184.519Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default FeuxBleu;\r\n","//Assets\r\nimport escapeGame1 from \"../assets/activites/escape-game-1.jpg\";\r\nimport escapeGame2 from \"../assets/activites/escape-game-2.jpg\";\r\nimport activitesDomaines1 from \"../assets/activites/jeux-domaines-1.jpg\";\r\nimport activitesDomaines2 from \"../assets/activites/jeux-domaines-2.jpg\";\r\nimport jeuxCollectifs1 from \"../assets/activites/jeux-collectifs-1.jpg\";\r\nimport jeuxCollectifs2 from \"../assets/activites/jeux-collectifs-2.jpg\";\r\nimport jeuxBois1 from \"../assets/activites/jeux-bois-1.jpg\";\r\nimport jeuxBois2 from \"../assets/activites/jeux-bois-2.jpg\";\r\nimport jeuxKermesse1 from \"../assets/activites/jeux-kermesse-1.jpg\";\r\nimport jeuxKermesse2 from \"../assets/activites/jeux-kermesse-2.jpg\";\r\nimport activites1 from \"../assets/activites/activites-1.jpg\";\r\nimport activites2 from \"../assets/activites/activites-2.jpg\";\r\nimport FeuxVert from \"../assets/svg/Feux-vert\";\r\nimport FeuxBleu from \"../assets/svg/Feux-bleu\"\r\n\r\nexport const listeActivites = [\r\n  {\r\n    title: \"Escape Game Fil rouge\",\r\n    content:\r\n      \"Cliquez sur la flèche pour en savoir plus.\",\r\n    cover: escapeGame1,\r\n    cover2: escapeGame2,\r\n    bgColor: \"bg-blue\",\r\n    color: \"dark-blue\",\r\n    illustration: <FeuxVert />,\r\n  },\r\n  {\r\n    title: \"Activités sur le domaine\",\r\n    content: [\r\n      \"Piscine (dimanche)\",\r\n      \"Aire de jeux pour enfant\",\r\n      \"Une grande salle (garde d'enfant)\",\r\n    ],\r\n    cover: activitesDomaines1,\r\n    cover2: activitesDomaines2,\r\n    bgColor: \"bg-pink\",\r\n    color: \"dark-pink\",\r\n    illustration: <FeuxBleu />,\r\n  },\r\n  {\r\n    title: \"Jeux collectifs\",\r\n    content: [\"Pallet\", \"Fléchettes\", \"Molky\", \"Course en sac\", \"Croquet\", \"Badminton\", \"Pétanque\"],\r\n    cover: jeuxCollectifs1,\r\n    cover2: jeuxCollectifs2,\r\n    bgColor: \"bg-orange\",\r\n    color: \"dark-orange\",\r\n    illustration: <FeuxBleu />,\r\n  },\r\n  {\r\n    title: \"Jeux en bois\",\r\n    content: [\"Grenouille\", \"Puissance 4\", \"Corn hole\", \"Mikado géant\", \"Table à glisser\"],\r\n    cover: jeuxBois1,\r\n    cover2: jeuxBois2,\r\n    bgColor: \"bg-green\",\r\n    color: \"dark-green\",\r\n    illustration: <FeuxBleu />,\r\n  },\r\n  {\r\n    title: \"Jeux de kermesse\",\r\n    content: [\"Chamboule tout\", \"Pêche aux canard\", \"Shooting gallery\", \"Lancer d'anneaux\"],\r\n    cover: jeuxKermesse1,\r\n    cover2: jeuxKermesse2,\r\n    bgColor: \"bg-blue\",\r\n    color: \"dark-blue\",\r\n    illustration: <FeuxVert />,\r\n  },\r\n  {\r\n    title: \"Activités\",\r\n    content: [\"Sumo\", \"Photobooth\", \"Bar à tattoo et paillettes\", \"Morpion grandeur nature\"],\r\n    cover: activites1,\r\n    cover2: activites2,\r\n    bgColor: \"bg-pink\",\r\n    color: \"dark-pink\",\r\n    illustration: <FeuxBleu />,\r\n  },\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/swiper-bundle.css\";\r\nimport { FreeMode, Navigation, Thumbs } from \"swiper\";\r\n\r\n//Styles\r\nimport \"../../styles/Activites.css\";\r\n\r\n//Assets\r\nimport NavNext from \"../../assets/icons/Nav-next\";\r\nimport NavPrev from \"../../assets/icons/Nav-prev\";\r\nimport escapeGame from \"../../assets/activites/escape-game-modale.jpg\";\r\n\r\n//Données\r\nimport { listeActivites } from \"../../datas/activites\";\r\nimport { white } from \"../../datas/colors\";\r\n\r\nfunction Activites() {\r\n  const [thumbsSwiper, setThumbsSwiper] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Activités - Mariage Stéphie & Alain\"\r\n  }, [])\r\n\r\n  return (\r\n    <section className=\"carrousel-activites fade-in-section\">\r\n      <Swiper\r\n        spaceBetween={0}\r\n        thumbs={{ swiper: thumbsSwiper }}\r\n        modules={[FreeMode, Thumbs, Navigation]}\r\n        navigation={{\r\n          nextEl: \".custom-next\",\r\n          prevEl: \".custom-prev\",\r\n        }}\r\n        className=\"swiper-activites\"\r\n      >\r\n        {listeActivites.map(\r\n          ({ title, content, cover, bgColor, illustration }, index) => (\r\n            <SwiperSlide\r\n              key={index}\r\n              className={`swiper-slide-activites ${bgColor}`}\r\n            >\r\n              <div className=\"slide-content-activites\">\r\n                {illustration}\r\n                <h2 className=\"white\">{title}</h2>\r\n                {Array.isArray(content) ? (\r\n                  <ul>\r\n                    {content.map((item, i) => (\r\n                      <li key={i} className=\"white slide-liste-activites\">\r\n                        {item}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                ) : (\r\n                  <>\r\n                    <p className=\"white slide-liste-activites\">{content}</p>\r\n                    <button\r\n                      className=\"button button-white button-modale\"\r\n                      onClick={() => setIsModalOpen(true)}\r\n                    >\r\n                      <svg\r\n                        width=\"35\"\r\n                        height=\"24\"\r\n                        viewBox=\"0 0 39 28\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"fleche-modale\"\r\n                      >\r\n                        <path\r\n                          d=\"M2 14.2034H37M37 14.2034L27.1685 26M37 14.2034L27.1685 2\"\r\n                          stroke={white}\r\n                          stroke-width=\"3\"\r\n                          stroke-linecap=\"round\"\r\n                          stroke-linejoin=\"round\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <img src={cover} alt=\"\" className=\"slide-cover-activites\" />\r\n            </SwiperSlide>\r\n          )\r\n        )}\r\n      </Swiper>\r\n\r\n      <div className=\"container-thumbs-navigation\">\r\n        <div className=\"slide-thumbs-navigation\">\r\n          <button className=\"custom-prev btn-nav btn-nav-act\">\r\n            <NavPrev className={white} />\r\n          </button>\r\n          <Swiper\r\n            onSwiper={setThumbsSwiper}\r\n            spaceBetween={0}\r\n            slidesPerView={3}\r\n            freeMode={true}\r\n            modules={[FreeMode, Thumbs]}\r\n            className=\"swiper-thumbs-activites\"\r\n            breakpoints={{\r\n              320: {\r\n                slidesPerView: 1,\r\n              },\r\n              680: {\r\n                slidesPerView: 2,\r\n              },\r\n              970: {\r\n                slidesPerView: 3,\r\n              }\r\n            }}\r\n          >\r\n            {listeActivites.map(({ cover2, title }, el) => (\r\n              <SwiperSlide key={el} className=\"swiper-slide-thumbs-activites\">\r\n                <img src={cover2} alt=\"\" />\r\n                <p className=\"white\">{title}</p>\r\n              </SwiperSlide>\r\n            ))}\r\n          </Swiper>\r\n          <button className=\"custom-next btn-nav btn-nav-act\">\r\n            <NavNext className={white} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 🧊 MODALE */}\r\n      {isModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <button\r\n              className=\"modal-close white\"\r\n              onClick={() => setIsModalOpen(false)}\r\n            >\r\n              ✕\r\n            </button>\r\n            <div className=\"modale-cover-title-activites\">\r\n              <img src={escapeGame} alt=\"\" />\r\n              <h2 className=\"white\">Escape Game Fil rouge</h2>\r\n            </div>\r\n            <div className=\"text text-modale\">\r\n              <p className=\"white\">\r\n                Beaucoup d'entre vous le savent, nous adorons les escapes game.\r\n                C'est pourquoi nous avons décidé que le fil rouge de notre\r\n                mariage en serait un !\r\n              </p>\r\n              <p className=\"white\">\r\n                A votre arrivée, vous aurez à disposition un formulaire qui vous\r\n                aidera à trouver les énigmes dispersés sur le domaine. Chaque énigme vous permettra de trouver une lettre du mot mystère. Saurez-vous les retrouver ?\r\n              </p>\r\n              <p className=\"white\">\r\n                Une fois que vous pensez avoir la bonne réponse, il vous suffira\r\n                d'aller l'annoncer à la mariée qui vous la validera ou non. Si la\r\n                réponse donnée est correcte vous pourrez déposer votre ticket\r\n                numéroté (celui envoyé par courrier à détacher, ne l'oubliez pas\r\n                !) et à le déposer dans l'urne prévue à cet effet.\r\n              </p>\r\n              <p className=\"white\">\r\n                Un tirage au sort aura lieu pendant la soirée pour tenter de\r\n                gagner une journée pour deux personnes au Puy du Fou.\r\n              </p>\r\n              <p className=\"white\">\r\n                PS : mon petit doigt me dit qu'un premier indice se trouve sur\r\n                le site...\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Activites;\r\n","function PoissonGauche() {\r\n  return (\r\n    <svg\r\n      width=\"191\"\r\n      height=\"185\"\r\n      viewBox=\"0 0 191 185\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"poisson-gauche\"\r\n    >\r\n      <path\r\n        d=\"M172.527 44.8054C171.228 44.1325 169.842 43.522 168.364 42.9616C161.69 40.4311 154.411 40.0922 147.3 40.7086C137.426 41.5645 129.53 43.074 121.979 46.0794C119.711 34.7013 103.561 35.3105 94.4841 40.0264C91.4752 41.5898 89.0423 44.4747 89.4707 47.8384C89.8252 50.6213 92.4335 52.8415 95.199 53.313C100.034 54.1374 104.759 52.2995 109.651 52.4789C102.955 56.7537 95.8409 62.5229 87.218 70.3492C77.3273 80.3479 65.0526 100.348 58.1363 106.948C51.9165 106.662 44.2195 110.538 46.4927 116.029C44.9556 117.064 43.5086 117.952 42.1306 118.704C39.8815 110.427 37.3085 107.613 31.4944 104.297C25.2248 101.781 21.0234 100.89 16.6604 102.271C12.105 103.713 7.54506 107.78 8.35971 112.488C9.01417 116.271 12.786 118.579 16.5681 119.235C16.7851 119.273 17.01 119.311 17.2437 119.351C14.4883 120.332 12.4676 121.204 10.4824 122.353C6.98665 124.376 2.35499 127.848 3.49559 131.723C4.31213 134.496 6.87928 135.915 9.61188 136.86C22.0943 141.175 34.9141 133.564 40.3047 126.423C43.4752 127.099 46.8071 127.472 50.2506 127.543C51.2451 131.299 55.5689 132.843 59.3185 131.823C62.8233 130.87 66.0695 128.529 70.811 124.662C79.9342 121.995 89.1593 117.487 97.7327 111.146C106.932 104.342 115.132 100.434 125.195 97.9091C121.764 101.594 115.544 105.448 113.03 111.569C112.452 112.975 112.094 114.636 112.486 116.105C113.637 120.417 119.954 119.881 124.272 118.753C129.819 117.304 134.075 114.589 140.002 108.624C144.567 102.735 145.592 99.6642 142.872 94.8718C144.785 94.6485 146.772 94.4385 148.844 94.2367C161.357 91.378 168.988 87.9619 175.012 81.3779C184.871 70.6039 185.494 51.5219 172.527 44.8054Z\"\r\n        fill=\"#FFFAFA\"\r\n      />\r\n      <path\r\n        d=\"M168.364 42.9616L168.896 41.559L168.364 42.9616ZM172.527 44.8054L173.217 43.4734L173.217 43.4734L172.527 44.8054ZM175.012 81.3779L176.119 82.3905L176.119 82.3906L175.012 81.3779ZM148.844 94.2367L149.178 95.699C149.116 95.7132 149.053 95.7234 148.99 95.7296L148.844 94.2367ZM22.3276 122.172C21.5383 121.92 21.1026 121.076 21.3543 120.287C21.606 119.498 22.4499 119.062 23.2392 119.314L22.3276 122.172ZM42.1306 118.704L42.8491 120.02L42.8491 120.02L42.1306 118.704ZM31.4944 104.297L32.053 102.905C32.1165 102.93 32.1782 102.96 32.2376 102.994L31.4944 104.297ZM16.6604 102.271L16.2078 100.841L16.2078 100.841L16.6604 102.271ZM16.5681 119.235L16.8245 117.757L16.8245 117.757L16.5681 119.235ZM17.2437 119.351L17.4951 117.872C18.1681 117.986 18.6789 118.541 18.7381 119.221C18.7973 119.901 18.3899 120.535 17.7468 120.764L17.2437 119.351ZM10.4824 122.353L9.73119 121.055L9.7312 121.055L10.4824 122.353ZM9.61188 136.86L9.12177 138.278L9.12177 138.278L9.61188 136.86ZM33.0404 124.224L33.6005 122.832L33.6005 122.832L33.0404 124.224ZM36.8775 125.555L37.3018 124.117L36.8775 125.555ZM39.7858 119.882L40.4098 121.247L40.4098 121.247L39.7858 119.882ZM36.0997 121.271L36.5185 122.712L36.5185 122.712L36.0997 121.271ZM97.7327 111.146L98.6246 112.352L97.7327 111.146ZM59.3185 131.823L59.7122 133.271L59.3185 131.823ZM57.2916 107.708L58.2575 108.856L58.2575 108.856L57.2916 107.708ZM87.218 70.3492L86.1515 69.2943C86.1705 69.2751 86.1899 69.2565 86.2098 69.2384L87.218 70.3492ZM46.4927 116.029L47.3302 117.274L47.3302 117.274L46.4927 116.029ZM121.979 46.0794L122.534 47.473L122.534 47.473L121.979 46.0794ZM147.3 40.7086L147.429 42.203L147.3 40.7086ZM94.4841 40.0264L93.7925 38.6954L94.4841 40.0264ZM95.199 53.313L94.9469 54.7917L94.9469 54.7917L95.199 53.313ZM140.002 108.624L141.187 109.543C141.15 109.592 141.109 109.638 141.066 109.681L140.002 108.624ZM124.272 118.753L123.893 117.302L123.893 117.302L124.272 118.753ZM113.03 111.569L114.417 112.139L113.03 111.569ZM114.027 49.8658L113.299 48.5543L113.299 48.5543L114.027 49.8658ZM116.505 48.5514L115.828 47.2129L115.828 47.2129L116.505 48.5514ZM117.897 47.8664L118.544 49.2197L118.544 49.2197L117.897 47.8664ZM120.697 46.6058L121.281 47.9874L121.281 47.9874L120.697 46.6058ZM133.364 96.2119L133.112 94.7333L133.112 94.7333L133.364 96.2119ZM136.406 95.7256L136.184 94.2421L136.406 95.7256ZM138.963 95.3622L138.763 93.8757L138.763 93.8757L138.963 95.3622ZM141.372 95.0518L141.555 96.5405L141.555 96.5405L141.372 95.0518ZM112.486 116.105L111.037 116.492L111.037 116.492L112.486 116.105ZM89.4707 47.8384L87.9827 48.0279L89.4707 47.8384ZM8.35971 112.488L9.83774 112.233L9.83774 112.233L8.35971 112.488ZM3.49559 131.723L4.93453 131.299L4.93453 131.299L3.49559 131.723ZM168.896 41.559C170.42 42.1372 171.86 42.7707 173.217 43.4734L171.837 46.1373C170.595 45.4943 169.263 44.9068 167.832 44.3642L168.896 41.559ZM176.119 82.3906C169.792 89.3053 161.808 92.8136 149.178 95.699L148.51 92.7744C160.906 89.9425 168.184 86.6185 173.906 80.3653L176.119 82.3906ZM23.2392 119.314C25.1141 119.912 26.8496 120.31 28.5349 120.487L28.2216 123.471C26.2836 123.267 24.3431 122.815 22.3276 122.172L23.2392 119.314ZM40.6831 119.097C39.5817 115.044 38.4404 112.484 36.9592 110.553C35.4853 108.632 33.5876 107.218 30.7513 105.6L32.2376 102.994C35.2153 104.692 37.5111 106.344 39.3396 108.727C41.1606 111.101 42.4304 114.087 43.5781 118.31L40.6831 119.097ZM30.9358 105.689C24.7273 103.198 20.9502 102.487 17.113 103.701L16.2078 100.841C21.0965 99.2937 25.7223 100.365 32.053 102.905L30.9358 105.689ZM16.8245 117.757C17.0392 117.794 17.2623 117.832 17.4951 117.872L16.9923 120.83C16.7577 120.79 16.531 120.751 16.3117 120.713L16.8245 117.757ZM17.7468 120.764C15.0406 121.727 13.1119 122.564 11.2336 123.651L9.7312 121.055C11.8233 119.844 13.9361 118.936 16.7406 117.938L17.7468 120.764ZM10.102 135.442C15.917 137.453 21.8566 136.703 27.043 134.552C32.2453 132.394 36.5795 128.868 39.1075 125.519L41.5019 127.327C38.6393 131.119 33.8683 134.969 28.1924 137.323C22.5007 139.684 15.7892 140.583 9.12177 138.278L10.102 135.442ZM32.4803 125.615C30.7998 124.939 29.182 124.161 27.6367 123.283L29.1198 120.675C30.5436 121.485 32.0398 122.204 33.6005 122.832L32.4803 125.615ZM39.992 127.89C38.7904 127.634 37.6099 127.335 36.4531 126.994L37.3018 124.117C38.3829 124.436 39.4889 124.715 40.6174 124.956L39.992 127.89ZM36.4531 126.994C35.0948 126.594 33.7691 126.134 32.4803 125.615L33.6005 122.832C34.7976 123.314 36.0325 123.742 37.3018 124.117L36.4531 126.994ZM39.1618 118.518C39.8879 118.186 40.6366 117.81 41.4121 117.387L42.8491 120.02C42.0174 120.474 41.2056 120.882 40.4098 121.247L39.1618 118.518ZM28.5349 120.487C30.8938 120.735 33.1969 120.553 35.6809 119.831L36.5185 122.712C33.6581 123.543 30.9641 123.759 28.2216 123.471L28.5349 120.487ZM35.6809 119.831C36.7907 119.508 37.9442 119.075 39.1618 118.518L40.4098 121.247C39.075 121.857 37.7843 122.344 36.5185 122.712L35.6809 119.831ZM98.6246 112.352C89.9124 118.795 80.5284 123.384 71.2319 126.102L70.3901 123.222C79.3399 120.606 88.4061 116.178 96.8407 109.94L98.6246 112.352ZM71.759 125.824C67.045 129.669 63.5679 132.222 59.7122 133.271L58.9248 130.376C62.0787 129.518 65.0939 127.389 69.863 123.5L71.759 125.824ZM71.2319 126.102C64.0698 128.195 56.949 129.182 50.2196 129.043L50.2816 126.043C56.6784 126.175 63.4944 125.238 70.3901 123.222L71.2319 126.102ZM50.2196 129.043C46.6883 128.97 43.2617 128.587 39.992 127.89L40.6174 124.956C43.6888 125.611 46.926 125.974 50.2816 126.043L50.2196 129.043ZM56.3257 106.561C56.5698 106.355 56.8282 106.122 57.1007 105.862L59.1718 108.033C58.8618 108.328 58.5568 108.604 58.2575 108.856L56.3257 106.561ZM57.1007 105.862C60.435 102.681 65.1307 96.1816 70.3506 89.038C75.5018 81.9882 81.1117 74.3891 86.1515 69.2943L88.2844 71.404C83.4335 76.3079 77.9607 83.7081 72.7728 90.8079C67.6536 97.8138 62.7538 104.615 59.1718 108.033L57.1007 105.862ZM41.4121 117.387C42.7425 116.661 44.1495 115.798 45.6553 114.785L47.3302 117.274C45.7617 118.329 44.2748 119.242 42.8491 120.02L41.4121 117.387ZM45.6553 114.785C48.7519 112.701 52.245 109.995 56.3257 106.561L58.2575 108.856C54.1329 112.327 50.5494 115.108 47.3302 117.274L45.6553 114.785ZM58.0675 108.446C55.2438 108.316 52.0885 109.145 49.9646 110.568C48.9104 111.275 48.2009 112.066 47.8507 112.859C47.52 113.609 47.4641 114.454 47.8787 115.456L45.1068 116.603C44.3848 114.859 44.4385 113.161 45.106 111.648C45.754 110.18 46.9313 108.99 48.2947 108.076C51.0059 106.26 54.8089 105.293 58.205 105.449L58.0675 108.446ZM121.425 44.6857C129.16 41.607 137.213 40.0774 147.17 39.2142L147.429 42.203C137.639 43.0517 129.901 44.541 122.534 47.473L121.425 44.6857ZM120.508 46.3727C119.549 41.5614 115.701 39.1425 110.599 38.5061C105.47 37.8663 99.4672 39.1277 95.1757 41.3575L93.7925 38.6954C98.5775 36.2092 105.188 34.808 110.97 35.5292C116.78 36.2538 122.141 39.2193 123.45 45.7861L120.508 46.3727ZM86.2098 69.2384C94.858 61.3892 102.044 55.5556 108.844 51.2146L110.459 53.7432C103.866 57.9517 96.8237 63.6565 88.2261 71.4599L86.2098 69.2384ZM95.4511 51.8343C97.6208 52.2042 99.8092 51.9849 102.197 51.6522C104.521 51.3283 107.094 50.8841 109.706 50.9799L109.596 53.9779C107.317 53.8943 105.081 54.2793 102.611 54.6235C100.204 54.9588 97.6126 55.2461 94.9469 54.7917L95.4511 51.8343ZM148.99 95.7296C146.925 95.9307 144.948 96.1397 143.046 96.3617L142.698 93.382C144.622 93.1573 146.619 92.9463 148.699 92.7437L148.99 95.7296ZM144.177 94.1316C145.658 96.7409 146.227 99.0954 145.63 101.675C145.063 104.126 143.475 106.592 141.187 109.543L138.816 107.705C141.093 104.768 142.301 102.753 142.707 100.998C143.084 99.3723 142.807 97.7952 141.568 95.6121L144.177 94.1316ZM141.066 109.681C135.029 115.758 130.547 118.664 124.651 120.204L123.893 117.302C129.091 115.944 133.122 113.421 138.938 107.567L141.066 109.681ZM125.56 99.364C115.701 101.838 107.677 105.657 98.6246 112.352L96.8407 109.94C106.186 103.028 114.564 99.0303 124.83 96.4542L125.56 99.364ZM111.642 110.999C113.019 107.648 115.382 104.98 117.734 102.74C118.91 101.619 120.118 100.574 121.208 99.6127C122.314 98.6363 123.295 97.7482 124.097 96.8869L126.293 98.9313C125.379 99.9125 124.296 100.888 123.193 101.862C122.073 102.851 120.925 103.843 119.803 104.912C117.558 107.05 115.555 109.369 114.417 112.139L111.642 110.999ZM108.844 51.2146C110.343 50.2576 111.824 49.3727 113.299 48.5543L114.755 51.1774C113.337 51.964 111.909 52.8172 110.459 53.7432L108.844 51.2146ZM113.299 48.5543C114.143 48.0856 114.986 47.6389 115.828 47.2129L117.182 49.8899C116.375 50.2981 115.567 50.7269 114.755 51.1774L113.299 48.5543ZM115.828 47.2129C116.302 46.9731 116.776 46.7399 117.25 46.5131L118.544 49.2197C118.09 49.4367 117.636 49.6601 117.182 49.8899L115.828 47.2129ZM117.25 46.5131C118.202 46.0581 119.155 45.629 120.112 45.2242L121.281 47.9874C120.366 48.3741 119.455 48.7843 118.544 49.2197L117.25 46.5131ZM120.112 45.2242C120.549 45.0397 120.986 44.8602 121.425 44.6857L122.534 47.473C122.115 47.6397 121.698 47.8111 121.281 47.9874L120.112 45.2242ZM133.617 97.6905C130.77 98.1767 128.101 98.7263 125.56 99.364L124.83 96.4542C127.457 95.795 130.202 95.2302 133.112 94.7333L133.617 97.6905ZM136.628 97.209C135.602 97.3626 134.599 97.5228 133.617 97.6905L133.112 94.7333C134.115 94.5619 135.139 94.3985 136.184 94.2421L136.628 97.209ZM139.164 96.8487C138.303 96.9649 137.458 97.0848 136.628 97.209L136.184 94.2421C137.029 94.1156 137.888 93.9936 138.763 93.8757L139.164 96.8487ZM143.046 96.3617C142.544 96.4204 142.047 96.48 141.555 96.5405L141.189 93.563C141.687 93.5017 142.19 93.4413 142.698 93.382L143.046 96.3617ZM141.555 96.5405C140.744 96.6404 139.947 96.743 139.164 96.8487L138.763 93.8757C139.558 93.7683 140.367 93.6642 141.189 93.563L141.555 96.5405ZM124.651 120.204C122.414 120.789 119.547 121.254 117.018 120.959C114.493 120.664 111.846 119.521 111.037 116.492L113.935 115.718C114.278 117.001 115.364 117.746 117.365 117.979C119.362 118.212 121.813 117.845 123.893 117.302L124.651 120.204ZM90.9587 47.6488C91.2113 49.6323 93.1803 51.4472 95.4511 51.8343L94.9469 54.7917C91.6866 54.2358 88.439 51.6102 87.9827 48.0279L90.9587 47.6488ZM9.83774 112.233C10.3322 115.091 13.3016 117.146 16.8245 117.757L16.3117 120.713C12.2704 120.012 7.6961 117.451 6.88167 112.744L9.83774 112.233ZM111.037 116.492C110.522 114.562 111.011 112.534 111.642 110.999L114.417 112.139C113.892 113.416 113.666 114.71 113.935 115.718L111.037 116.492ZM59.7122 133.271C55.4855 134.42 50.0854 132.78 48.8006 127.927L51.7006 127.159C52.4048 129.819 55.6523 131.266 58.9248 130.376L59.7122 133.271ZM17.113 103.701C15.0598 104.351 13.0197 105.594 11.6111 107.158C10.2081 108.717 9.53184 110.465 9.83774 112.233L6.88167 112.744C6.37293 109.804 7.56929 107.164 9.38148 105.151C11.188 103.145 13.7056 101.633 16.2078 100.841L17.113 103.701ZM95.1757 41.3575C92.429 42.7846 90.6448 45.1847 90.9587 47.6488L87.9827 48.0279C87.4397 43.7647 90.5214 40.395 93.7925 38.6954L95.1757 41.3575ZM173.217 43.4734C180.293 47.1383 183.582 54.1576 183.829 61.5199C184.074 68.8592 181.32 76.7073 176.119 82.3905L173.906 80.3653C178.564 75.2746 181.05 68.1946 180.83 61.6203C180.611 55.0689 177.729 49.1889 171.837 46.1373L173.217 43.4734ZM11.2336 123.651C9.53293 124.635 7.6593 125.916 6.3627 127.35C5.04823 128.803 4.58327 130.106 4.93453 131.299L2.05665 132.146C1.26732 129.465 2.54788 127.095 4.13803 125.337C5.74605 123.56 7.93612 122.093 9.73119 121.055L11.2336 123.651ZM4.93453 131.299C5.52778 133.314 7.43093 134.519 10.102 135.442L9.12177 138.278C6.32764 137.312 3.09648 135.678 2.05665 132.146L4.93453 131.299ZM167.832 44.3642C161.449 41.9441 154.421 41.597 147.429 42.203L147.17 39.2142C154.4 38.5875 161.93 38.9181 168.896 41.559L167.832 44.3642Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M31.4951 104.297C37.3092 107.613 39.8823 110.427 42.1313 118.704C41.3277 119.142 40.5475 119.534 39.7865 119.882C38.5103 120.466 37.2882 120.926 36.1004 121.271C33.4282 122.048 30.9297 122.247 28.379 121.979C29.8635 122.823 31.4205 123.571 33.0411 124.224C34.284 124.724 35.5644 125.168 36.8782 125.555C37.9972 125.886 39.1404 126.175 40.3054 126.423C34.9149 133.564 22.095 141.175 9.61261 136.86C6.88001 135.915 4.31285 134.496 3.49631 131.723C2.35572 127.848 6.98737 124.376 10.4831 122.353C12.4683 121.204 14.4891 120.332 17.2444 119.351C17.0107 119.311 16.7858 119.273 16.5688 119.235C12.7867 118.579 9.01489 116.271 8.36043 112.488C7.54578 107.78 12.1057 103.713 16.6611 102.271C21.0241 100.89 25.2255 101.781 31.4951 104.297Z\"\r\n        fill=\"#F3EBD6\"\r\n        stroke=\"#101010\"\r\n        stroke-width=\"3\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n      <path\r\n        d=\"M59.3187 131.823C62.8235 130.87 66.0697 128.529 70.8112 124.662C63.7823 126.717 56.814 127.679 50.2508 127.543C51.2453 131.299 55.5691 132.843 59.3187 131.823Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M58.1365 106.947C57.8452 107.225 57.5635 107.48 57.2918 107.708C53.1892 111.161 49.6508 113.904 46.493 116.029C44.2198 110.538 51.9167 106.662 58.1365 106.947Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M59.3187 131.823C62.8235 130.87 66.0697 128.529 70.8112 124.662C63.7823 126.717 56.814 127.679 50.2508 127.543C51.2453 131.299 55.5691 132.843 59.3187 131.823Z\"\r\n        stroke=\"#101010\"\r\n        stroke-width=\"3\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n      <path\r\n        d=\"M58.1365 106.947C57.8452 107.225 57.5635 107.48 57.2918 107.708C53.1892 111.161 49.6508 113.904 46.493 116.029C44.2198 110.538 51.9167 106.662 58.1365 106.947Z\"\r\n        stroke=\"#101010\"\r\n        stroke-width=\"3\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n      <path\r\n        d=\"M94.484 40.0264C103.56 35.3105 119.711 34.7013 121.979 46.0794C121.551 46.25 121.123 46.4254 120.696 46.6058C119.76 47.0015 118.828 47.4212 117.897 47.8664C117.433 48.0883 116.969 48.3166 116.505 48.5514C115.68 48.9685 114.855 49.4062 114.027 49.8658C112.581 50.6684 111.126 51.5374 109.651 52.4789C104.759 52.2995 100.034 54.1374 95.1988 53.313C92.4333 52.8415 89.825 50.6213 89.4706 47.8383C89.0421 44.4747 91.4751 41.5898 94.484 40.0264Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M121.979 46.0794L123.45 45.7861C123.592 46.4958 123.206 47.2054 122.534 47.473L121.979 46.0794ZM94.484 40.0264L95.1756 41.3575L94.484 40.0264ZM95.1988 53.313L94.9467 54.7917L94.9467 54.7917L95.1988 53.313ZM109.651 52.4789L110.458 53.7432C110.202 53.9072 109.901 53.989 109.596 53.9779L109.651 52.4789ZM114.027 49.8658L114.755 51.1774L114.755 51.1774L114.027 49.8658ZM116.505 48.5514L117.182 49.8899L116.505 48.5514ZM117.897 47.8664L118.544 49.2197L118.544 49.2197L117.897 47.8664ZM120.696 46.6058L120.112 45.2242L120.112 45.2242L120.696 46.6058ZM89.4706 47.8383L87.9826 48.0279L87.9826 48.0279L89.4706 47.8383ZM120.508 46.3726C119.549 41.5614 115.701 39.1425 110.599 38.5061C105.47 37.8663 99.467 39.1277 95.1756 41.3575L93.7924 38.6954C98.5774 36.2092 105.188 34.808 110.97 35.5292C116.78 36.2538 122.141 39.2193 123.45 45.7861L120.508 46.3726ZM95.4509 51.8343C97.6206 52.2042 99.8091 51.9848 102.197 51.6522C104.521 51.3283 107.094 50.8841 109.706 50.9799L109.596 53.9779C107.317 53.8943 105.081 54.2793 102.611 54.6235C100.204 54.9588 97.6125 55.2461 94.9467 54.7917L95.4509 51.8343ZM108.844 51.2145C110.343 50.2576 111.824 49.3727 113.299 48.5543L114.755 51.1774C113.337 51.964 111.909 52.8172 110.458 53.7432L108.844 51.2145ZM113.299 48.5543C114.143 48.0856 114.985 47.6389 115.828 47.2129L117.182 49.8899C116.375 50.2981 115.566 50.7269 114.755 51.1774L113.299 48.5543ZM115.828 47.2129C116.302 46.9731 116.776 46.7399 117.25 46.5131L118.544 49.2197C118.09 49.4367 117.636 49.6601 117.182 49.8899L115.828 47.2129ZM117.25 46.5131C118.202 46.0581 119.155 45.629 120.112 45.2242L121.281 47.9874C120.366 48.3741 119.455 48.7843 118.544 49.2197L117.25 46.5131ZM120.112 45.2242C120.549 45.0397 120.986 44.8602 121.425 44.6857L122.534 47.473C122.115 47.6397 121.697 47.8111 121.281 47.9874L120.112 45.2242ZM90.9585 47.6488C91.2112 49.6323 93.1802 51.4472 95.4509 51.8343L94.9467 54.7917C91.6865 54.2358 88.4388 51.6102 87.9826 48.0279L90.9585 47.6488ZM95.1756 41.3575C92.4289 42.7846 90.6447 45.1847 90.9585 47.6488L87.9826 48.0279C87.4396 43.7647 90.5213 40.395 93.7924 38.6954L95.1756 41.3575Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M140.416 108.594C144.981 102.705 146.006 99.634 143.287 94.8416C142.781 94.9007 142.281 94.9606 141.786 95.0216C140.97 95.1221 140.167 95.2254 139.377 95.332C138.51 95.4491 137.657 95.57 136.82 95.6954C135.784 95.8503 134.771 96.0121 133.778 96.1817C130.9 96.6732 128.193 97.2304 125.609 97.8788C122.178 101.564 115.958 105.418 113.444 111.538C112.866 112.945 112.508 114.606 112.9 116.075C114.051 120.387 120.368 119.851 124.686 118.723C130.233 117.274 134.489 114.559 140.416 108.594Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M143.287 94.8416L143.113 93.3518C143.711 93.2818 144.294 93.5771 144.591 94.1013L143.287 94.8416ZM140.416 108.594L141.602 109.513C141.564 109.562 141.523 109.608 141.48 109.651L140.416 108.594ZM124.686 118.723L124.307 117.272L124.686 118.723ZM113.444 111.538L114.831 112.108L113.444 111.538ZM125.609 97.8788L124.512 96.8567C124.709 96.6447 124.963 96.4944 125.244 96.424L125.609 97.8788ZM133.778 96.1817L133.526 94.7031L133.778 96.1817ZM136.82 95.6954L136.598 94.2119L136.598 94.2119L136.82 95.6954ZM139.377 95.332L139.177 93.8454L139.177 93.8454L139.377 95.332ZM141.786 95.0216L141.969 96.5103L141.969 96.5103L141.786 95.0216ZM112.9 116.075L111.451 116.462L111.451 116.462L112.9 116.075ZM144.591 94.1013C146.072 96.7107 146.642 99.0652 146.044 101.645C145.477 104.096 143.889 106.561 141.602 109.513L139.23 107.675C141.507 104.737 142.715 102.723 143.122 100.968C143.498 99.342 143.221 97.765 141.982 95.5819L144.591 94.1013ZM141.48 109.651C135.443 115.728 130.961 118.634 125.066 120.174L124.307 117.272C129.505 115.914 133.536 113.39 139.352 107.537L141.48 109.651ZM112.056 110.968C113.433 107.617 115.796 104.949 118.148 102.709C119.324 101.589 120.532 100.544 121.622 99.5825C122.728 98.6061 123.709 97.718 124.512 96.8567L126.707 98.901C125.793 99.8823 124.71 100.858 123.607 101.832C122.487 102.82 121.34 103.812 120.217 104.881C117.972 107.02 115.969 109.339 114.831 112.108L112.056 110.968ZM134.031 97.6602C131.184 98.1465 128.515 98.6961 125.974 99.3337L125.244 96.424C127.871 95.7647 130.616 95.2 133.526 94.7031L134.031 97.6602ZM137.042 97.1788C136.016 97.3324 135.013 97.4925 134.031 97.6602L133.526 94.7031C134.53 94.5317 135.553 94.3683 136.598 94.2119L137.042 97.1788ZM139.578 96.8185C138.717 96.9347 137.872 97.0546 137.042 97.1788L136.598 94.2119C137.443 94.0854 138.302 93.9634 139.177 93.8454L139.578 96.8185ZM143.461 96.3315C142.958 96.3902 142.461 96.4497 141.969 96.5103L141.603 93.5328C142.101 93.4714 142.604 93.4111 143.113 93.3518L143.461 96.3315ZM141.969 96.5103C141.158 96.6102 140.361 96.7128 139.578 96.8185L139.177 93.8454C139.973 93.7381 140.781 93.634 141.603 93.5328L141.969 96.5103ZM111.451 116.462C110.936 114.532 111.425 112.504 112.056 110.968L114.831 112.108C114.306 113.386 114.08 114.68 114.349 115.688L111.451 116.462ZM125.066 120.174C122.828 120.759 119.961 121.224 117.432 120.929C114.907 120.634 112.26 119.491 111.451 116.462L114.349 115.688C114.692 116.97 115.779 117.715 117.78 117.949C119.776 118.182 122.227 117.815 124.307 117.272L125.066 120.174Z\"\r\n        fill=\"black\"\r\n      />\r\n      <path\r\n        d=\"M99.0272 47.9305C104.418 48.324 107.648 48.6605 114.441 49.8355C115.269 49.376 116.094 48.9382 116.919 48.5211C109.33 47.3445 105.43 47.2437 99.0272 47.9305Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M101.111 42.0617C107.698 43.9486 111.449 45.1712 118.311 47.8361C119.242 47.3909 120.175 46.9712 121.111 46.5755C112.265 42.9195 107.887 41.9337 101.111 42.0617Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M120.331 110.946C127.997 103.188 131.429 99.5533 133.778 96.1816C134.771 96.012 135.784 95.8503 136.82 95.6953C130.305 103.181 126.78 106.582 120.331 110.946Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M130.348 111.054C133.669 104.661 135.625 101.193 139.377 95.3319C140.167 95.2254 140.97 95.122 141.786 95.0215C137.617 102.388 135.124 105.941 130.348 111.054Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M99.0272 47.9305C104.418 48.324 107.648 48.6605 114.441 49.8355C115.269 49.376 116.094 48.9382 116.919 48.5211C109.33 47.3445 105.43 47.2437 99.0272 47.9305Z\"\r\n        stroke=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M101.111 42.0617C107.698 43.9486 111.449 45.1712 118.311 47.8361C119.242 47.3909 120.175 46.9712 121.111 46.5755C112.265 42.9195 107.887 41.9337 101.111 42.0617Z\"\r\n        stroke=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M120.331 110.946C127.997 103.188 131.429 99.5533 133.778 96.1816C134.771 96.012 135.784 95.8503 136.82 95.6953C130.305 103.181 126.78 106.582 120.331 110.946Z\"\r\n        stroke=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M130.348 111.054C133.669 104.661 135.625 101.193 139.377 95.3319C140.167 95.2254 140.97 95.122 141.786 95.0215C137.617 102.388 135.124 105.941 130.348 111.054Z\"\r\n        stroke=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M22.3304 129.435C26.5921 127.795 30.4562 126.091 33.4537 124.193C34.6966 124.694 35.9769 125.138 37.2907 125.525C32.3096 128.156 27.4829 129.959 22.6801 130.92C21.5558 131.145 21.2603 129.847 22.3304 129.435Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M27.4076 111.737C32.2489 113.812 36.0797 116.14 40.1991 119.852C38.9228 120.436 37.7007 120.896 36.5129 121.241C34.2073 118.334 30.0782 115.953 26.5784 113.013C25.7839 112.345 26.4539 111.328 27.4076 111.737Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M22.3304 129.435C26.5921 127.795 30.4562 126.091 33.4537 124.193C34.6966 124.694 35.9769 125.138 37.2907 125.525C32.3096 128.156 27.4829 129.959 22.6801 130.92C21.5558 131.145 21.2603 129.847 22.3304 129.435Z\"\r\n        stroke=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M27.4076 111.737C32.2489 113.812 36.0797 116.14 40.1991 119.852C38.9228 120.436 37.7007 120.896 36.5129 121.241C34.2073 118.334 30.0782 115.953 26.5784 113.013C25.7839 112.345 26.4539 111.328 27.4076 111.737Z\"\r\n        stroke=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M81.3752 114.056C84.2093 113.888 86.7621 115.818 86.0123 118.588C88.8522 117.873 99.9212 109.781 106.914 105.034C106.944 103.849 106.902 102.861 106.754 102.018C106.018 97.8236 99.9925 96.1427 96.7186 98.8667C95.0388 100.264 93.7634 102.285 92.4934 103.758C91.7375 104.634 90.4088 104.13 89.3975 103.567C88.3419 102.98 86.961 102.955 85.8248 103.365C85.778 103.382 85.732 103.399 85.6866 103.416C82.8509 104.462 79.5787 105.952 77.4781 103.779L73.4197 105.499C69.1891 102.234 66.6431 102.293 61.9781 103.736C57.5309 108.126 54.8741 110.367 49.9587 114.122C51.1294 117.587 54.2035 120.218 57.8252 120.728C61.5315 121.25 64.8141 120.07 69.1913 116.941C70.8305 115.769 72.9404 115.19 74.6119 116.315C75.609 116.986 77.0327 117.291 77.8865 116.445C77.9877 116.344 78.0864 116.241 78.1837 116.134C79.0738 115.153 80.0533 114.135 81.3752 114.056Z\"\r\n        fill=\"#D25B30\"\r\n      />\r\n      <path\r\n        d=\"M85.5439 74.0189C85.2443 73.8501 85.0093 73.6329 84.8327 73.3477C86.7476 70.655 95.8476 62.7717 103.561 57.0105C105.383 61.8256 103.305 66.9098 99.1819 68.638C98.3858 68.9717 97.6265 68.7064 96.9293 68.1974C96.0045 67.5224 94.6074 67.9171 93.9603 68.8616C92.0716 71.6184 90.6806 73.0997 89.0168 73.9114C87.9308 74.4412 86.5967 74.6118 85.5439 74.0189Z\"\r\n        fill=\"#D25B30\"\r\n      />\r\n      <path\r\n        d=\"M118.813 93.1643C117.217 95.6534 117.464 97.4242 119.78 99.5449C131.939 95.2413 150.954 95.0956 158.815 91.5653C160.387 88.4065 161.274 86.143 161.379 84.35C161.578 80.9453 157.428 78.5364 154.189 79.6044C153.206 79.9285 152.211 80.4818 151.072 81.2233C150.54 81.5698 149.794 80.8797 149.645 80.2625C148.951 77.4019 145.319 77.0679 142.508 77.9413C140.915 78.4363 139.561 79.1405 138.289 79.7903C134.045 81.957 128.803 80.4817 126.065 76.5818C125.288 75.4756 124.615 74.1867 123.9 72.5625L122.599 68.9404C122.388 67.1781 122.075 65.959 121.176 64.9617C119.686 63.3095 117.063 63.017 115.079 64.0226C113.69 64.7266 112.798 65.8465 111.833 67.7043L109.123 79.3845C110.421 81.7077 112.014 82.9426 114.45 83.4104C117.135 83.9262 120.652 82.9112 122.5 84.9269C124.699 87.3247 120.569 90.4256 118.813 93.1643Z\"\r\n        fill=\"#D25B30\"\r\n      />\r\n      <path\r\n        d=\"M126.053 54.0413C122.508 53.2428 120.656 51.4809 118.552 47.966C125.319 43.4724 143.709 40.2315 155.784 40.2084C153.177 47.5988 151.274 51.7628 148.882 53.5181C146.706 55.1143 143.55 53.1537 141.172 51.8796C138.987 50.7094 136.801 51.2758 134.605 52.4265C134.083 52.7003 133.609 52.942 133.172 53.1558C130.966 54.2372 128.45 54.5812 126.053 54.0413Z\"\r\n        fill=\"#D25B30\"\r\n      />\r\n      <path\r\n        d=\"M86.0123 118.588L86.2567 119.558C85.9124 119.645 85.5479 119.542 85.299 119.289C85.0501 119.036 84.9542 118.67 85.047 118.327L86.0123 118.588ZM81.3752 114.056L81.4346 115.054L81.4346 115.054L81.3752 114.056ZM78.1837 116.134L77.4433 115.462L77.4433 115.462L78.1837 116.134ZM77.8865 116.445L78.5904 117.155L78.5904 117.155L77.8865 116.445ZM69.1913 116.941L69.7728 117.755L69.1913 116.941ZM57.8252 120.728L57.9647 119.738L57.9647 119.738L57.8252 120.728ZM49.9587 114.122L49.0114 114.442C48.8741 114.036 49.011 113.588 49.3516 113.328L49.9587 114.122ZM61.9781 103.736L61.2755 103.024C61.3897 102.911 61.5293 102.828 61.6826 102.78L61.9781 103.736ZM73.4197 105.499L73.8099 106.419C73.4774 106.56 73.0947 106.511 72.8088 106.29L73.4197 105.499ZM77.4781 103.779L77.0879 102.858C77.4687 102.697 77.9096 102.786 78.1971 103.084L77.4781 103.779ZM85.6866 103.416L86.0328 104.354L86.0328 104.354L85.6866 103.416ZM85.8248 103.365L85.4848 102.425L85.4848 102.425L85.8248 103.365ZM92.4934 103.758L93.2507 104.411L93.2507 104.411L92.4934 103.758ZM96.7186 98.8667L96.079 98.0979L96.7186 98.8667ZM106.754 102.018L105.77 102.191L106.754 102.018ZM106.914 105.034L107.914 105.059C107.905 105.381 107.742 105.68 107.476 105.861L106.914 105.034ZM84.8327 73.3477L83.9825 73.8742C83.7706 73.532 83.7845 73.0962 84.0177 72.7682L84.8327 73.3477ZM85.5439 74.0189L86.0346 73.1475L86.0346 73.1475L85.5439 74.0189ZM89.0168 73.9114L88.5783 73.0127L88.5783 73.0127L89.0168 73.9114ZM93.9603 68.8616L94.7852 69.4268L93.9603 68.8616ZM99.1819 68.638L99.5685 69.5603L99.1819 68.638ZM103.561 57.0105L102.963 56.2093C103.215 56.0214 103.54 55.9626 103.842 56.0505C104.143 56.1385 104.386 56.3629 104.497 56.6566L103.561 57.0105ZM119.78 99.5449L120.114 100.488C119.766 100.611 119.378 100.532 119.105 100.282L119.78 99.5449ZM118.813 93.1643L119.654 93.7041L118.813 93.1643ZM114.45 83.4104L114.638 82.4283L114.45 83.4104ZM109.123 79.3845L108.25 79.8722C108.129 79.6551 108.093 79.4007 108.149 79.1585L109.123 79.3845ZM111.833 67.7043L110.859 67.4783C110.878 67.3967 110.907 67.3177 110.945 67.2433L111.833 67.7043ZM115.079 64.0226L114.627 63.1306L115.079 64.0226ZM121.176 64.9617L121.919 64.292L121.176 64.9617ZM122.599 68.9404L121.658 69.2783C121.633 69.2075 121.616 69.134 121.607 69.0593L122.599 68.9404ZM123.9 72.5625L122.984 72.9656C122.975 72.9441 122.966 72.9224 122.958 72.9003L123.9 72.5625ZM126.065 76.5818L126.883 76.0072L126.883 76.0072L126.065 76.5818ZM138.289 79.7903L138.743 80.681L138.743 80.681L138.289 79.7903ZM142.508 77.9413L142.212 76.9863L142.508 77.9413ZM151.072 81.2233L150.526 80.3852L150.527 80.3852L151.072 81.2233ZM154.189 79.6044L154.502 80.5541L154.189 79.6044ZM161.379 84.35L160.381 84.2915L161.379 84.35ZM158.815 91.5653L159.711 92.0107C159.608 92.2178 159.436 92.3828 159.225 92.4775L158.815 91.5653ZM118.552 47.966L117.694 48.4796L117.204 47.6608L117.999 47.1329L118.552 47.966ZM126.053 54.0413L125.833 55.0169L126.053 54.0413ZM133.172 53.1558L132.732 52.2578L132.732 52.2578L133.172 53.1558ZM134.605 52.4265L134.141 51.5407L134.605 52.4265ZM148.882 53.5181L149.473 54.3244L149.473 54.3244L148.882 53.5181ZM155.784 40.2084L155.783 39.2084L157.199 39.2057L156.727 40.5411L155.784 40.2084ZM149.645 80.2625L150.616 80.0269L149.645 80.2625ZM122.5 84.9269L121.763 85.6027L122.5 84.9269ZM96.9293 68.1974L97.5189 67.3897L97.5189 67.3897L96.9293 68.1974ZM141.172 51.8796L141.644 50.9981L141.172 51.8796ZM89.3975 103.567L88.9111 104.441L89.3975 103.567ZM74.6119 116.315L75.1703 115.486L75.1703 115.486L74.6119 116.315ZM85.047 118.327C85.3165 117.331 85.0072 116.537 84.3692 115.964C83.6968 115.359 82.624 114.984 81.4346 115.054L81.3159 113.058C82.9605 112.96 84.5811 113.465 85.7062 114.476C86.8656 115.519 87.4578 117.075 86.9775 118.85L85.047 118.327ZM78.9242 116.806C78.8153 116.926 78.7045 117.042 78.5904 117.155L77.1827 115.734C77.2709 115.647 77.3574 115.556 77.4433 115.462L78.9242 116.806ZM69.7728 117.755C65.2989 120.952 61.7558 122.292 57.6857 121.718L57.9647 119.738C61.3073 120.209 64.3294 119.187 68.6098 116.127L69.7728 117.755ZM49.3516 113.328C54.2392 109.593 56.8632 107.38 61.2755 103.024L62.6807 104.447C58.1987 108.872 55.5089 111.14 50.5659 114.917L49.3516 113.328ZM61.6826 102.78C64.0385 102.052 66.0126 101.619 67.9828 101.859C69.9771 102.102 71.8387 103.016 74.0306 104.707L72.8088 106.29C70.7701 104.717 69.2434 104.028 67.7409 103.844C66.2142 103.658 64.5827 103.977 62.2736 104.691L61.6826 102.78ZM73.0295 104.578L77.0879 102.858L77.8682 104.699L73.8099 106.419L73.0295 104.578ZM85.3404 102.478C85.388 102.46 85.4361 102.442 85.4848 102.425L86.1648 104.306C86.12 104.322 86.076 104.338 86.0328 104.354L85.3404 102.478ZM91.736 103.105C92.3575 102.384 92.9415 101.576 93.6699 100.661C94.3696 99.782 95.1591 98.8633 96.079 98.0979L97.3582 99.6354C96.5983 100.268 95.9102 101.058 95.2347 101.907C94.5879 102.719 93.8993 103.658 93.2507 104.411L91.736 103.105ZM107.739 101.846C107.904 102.781 107.944 103.845 107.914 105.059L105.914 105.009C105.943 103.854 105.901 102.94 105.77 102.191L107.739 101.846ZM107.476 105.861C105.733 107.044 103.736 108.436 101.669 109.875C99.6037 111.312 97.4707 112.794 95.4665 114.151C93.464 115.507 91.5786 116.745 90.0097 117.692C89.2255 118.166 88.5101 118.572 87.8922 118.887C87.2892 119.193 86.7242 119.44 86.2567 119.558L85.7679 117.619C86.0103 117.558 86.4125 117.395 86.9857 117.104C87.5441 116.82 88.214 116.44 88.9761 115.98C90.4999 115.06 92.3513 113.845 94.3452 112.495C96.3372 111.146 98.4601 109.671 100.526 108.233C102.59 106.797 104.598 105.397 106.352 104.206L107.476 105.861ZM85.6829 72.8212C85.763 72.9506 85.8689 73.0542 86.0346 73.1475L85.0532 74.8902C84.6198 74.6461 84.2556 74.3151 83.9825 73.8742L85.6829 72.8212ZM88.5783 73.0127C89.9953 72.3214 91.2638 71.0281 93.1353 68.2964L94.7852 69.4268C92.8794 72.2087 91.3659 73.878 89.4552 74.8101L88.5783 73.0127ZM98.7953 67.7158C102.359 66.222 104.282 61.7417 102.626 57.3644L104.497 56.6566C106.484 61.9096 104.25 67.5977 99.5685 69.5603L98.7953 67.7158ZM104.16 57.8117C100.324 60.6765 96.14 64.0718 92.679 67.0841C90.9485 68.5902 89.4048 69.9953 88.179 71.1864C86.9377 72.3926 86.0687 73.3352 85.6476 73.9273L84.0177 72.7682C84.5542 72.0139 85.5408 70.9613 86.7853 69.752C88.0454 68.5276 89.6179 67.0969 91.366 65.5755C94.8622 62.5326 99.085 59.1057 102.963 56.2093L104.16 57.8117ZM119.105 100.282C117.875 99.1562 117.041 97.9888 116.84 96.6402C116.638 95.2804 117.111 93.9655 117.971 92.6245L119.654 93.7041C118.918 94.8522 118.717 95.6673 118.818 96.3453C118.921 97.0345 119.369 97.8129 120.456 98.8073L119.105 100.282ZM114.261 84.3924C112.917 84.1342 111.761 83.6543 110.755 82.8893C109.753 82.1278 108.947 81.12 108.25 79.8722L109.996 78.8969C110.597 79.9722 111.237 80.7435 111.965 81.2972C112.689 81.8474 113.547 82.2188 114.638 82.4283L114.261 84.3924ZM108.149 79.1585L110.859 67.4783L112.807 67.9303L110.097 79.6105L108.149 79.1585ZM110.945 67.2433C111.95 65.3103 112.964 63.9731 114.627 63.1306L115.531 64.9146C114.415 65.4801 113.646 66.3828 112.72 68.1654L110.945 67.2433ZM121.919 64.292C123.038 65.5329 123.377 67.0222 123.592 68.8215L121.607 69.0593C121.4 67.334 121.113 66.3851 120.434 65.6314L121.919 64.292ZM123.541 68.6026L124.841 72.2246L122.958 72.9003L121.658 69.2783L123.541 68.6026ZM124.815 72.1593C125.517 73.754 126.16 74.9766 126.883 76.0072L125.247 77.1563C124.417 75.9745 123.713 74.6194 122.984 72.9656L124.815 72.1593ZM137.834 78.8997C139.093 78.2566 140.523 77.511 142.212 76.9863L142.805 78.8963C141.307 79.3616 140.029 80.0244 138.743 80.681L137.834 78.8997ZM150.527 80.3852C151.688 79.6288 152.769 79.0195 153.875 78.6547L154.502 80.5541C153.643 80.8374 152.734 81.3348 151.618 82.0613L150.527 80.3852ZM162.377 84.4084C162.259 86.4306 161.277 88.8632 159.711 92.0107L157.92 91.1198C159.497 87.9498 160.289 85.8555 160.381 84.2915L162.377 84.4084ZM159.225 92.4775C157.147 93.4107 154.388 94.0987 151.294 94.6791C148.188 95.2617 144.668 95.7487 141.048 96.2555C133.765 97.2749 126.079 98.3761 120.114 100.488L119.447 98.6022C125.64 96.4101 133.541 95.2867 140.771 94.2748C144.406 93.7659 147.875 93.2856 150.925 92.7134C153.987 92.1391 156.553 91.485 158.406 90.653L159.225 92.4775ZM119.41 47.4524C120.439 49.1707 121.36 50.3806 122.404 51.2558C123.432 52.117 124.629 52.6955 126.273 53.0657L125.833 55.0169C123.931 54.5885 122.43 53.8868 121.12 52.7887C119.826 51.7047 118.77 50.2762 117.694 48.4796L119.41 47.4524ZM132.732 52.2578C133.159 52.0489 133.625 51.8115 134.141 51.5407L135.07 53.3122C134.541 53.5891 134.059 53.835 133.613 54.0538L132.732 52.2578ZM148.29 52.7118C149.296 51.9739 150.283 50.6623 151.359 48.5264C152.43 46.4024 153.54 43.5644 154.841 39.8757L156.727 40.5411C155.422 44.2427 154.277 47.1819 153.145 49.4264C152.02 51.659 150.86 53.3071 149.473 54.3244L148.29 52.7118ZM155.786 41.2084C149.823 41.2198 142.272 42.0273 135.372 43.3918C128.429 44.7647 122.311 46.6702 119.105 48.799L117.999 47.1329C121.56 44.7682 128.021 42.8065 134.984 41.4298C141.989 40.0446 149.67 39.2201 155.783 39.2084L155.786 41.2084ZM153.875 78.6547C155.819 78.0139 157.975 78.4247 159.607 79.4542C161.243 80.4866 162.504 82.2483 162.377 84.4084L160.381 84.2915C160.453 83.0469 159.738 81.9019 158.54 81.1457C157.336 80.3866 155.797 80.127 154.502 80.5541L153.875 78.6547ZM150.616 80.0269C150.621 80.0444 150.639 80.0941 150.683 80.1597C150.727 80.2237 150.777 80.2757 150.82 80.308C150.866 80.3434 150.869 80.3299 150.817 80.3209C150.788 80.3158 150.741 80.3127 150.684 80.3231C150.626 80.3338 150.571 80.3562 150.526 80.3852L151.618 82.0613C150.83 82.574 150.025 82.2155 149.61 81.9005C149.175 81.5703 148.807 81.0535 148.673 80.498L150.616 80.0269ZM142.212 76.9863C143.745 76.5099 145.546 76.345 147.11 76.7307C148.705 77.124 150.157 78.1333 150.616 80.0269L148.673 80.498C148.438 79.531 147.728 78.943 146.631 78.6726C145.503 78.3945 144.083 78.4993 142.805 78.8963L142.212 76.9863ZM121.763 85.6027C121.128 84.9099 120.152 84.6662 118.746 84.6053C118.04 84.5747 117.353 84.5909 116.569 84.5814C115.819 84.5724 115.023 84.5387 114.261 84.3924L114.638 82.4283C115.219 82.5399 115.87 82.5728 116.593 82.5816C117.281 82.5899 118.092 82.575 118.832 82.6071C120.318 82.6716 122.025 82.9282 123.237 84.251L121.763 85.6027ZM117.971 92.6245C118.45 91.8765 119.08 91.1206 119.673 90.4154C120.285 89.6887 120.861 89.0105 121.316 88.3501C121.778 87.6807 122.041 87.1322 122.111 86.6851C122.171 86.305 122.1 85.9703 121.763 85.6027L123.237 84.251C124 85.0823 124.238 86.0344 124.087 86.9958C123.946 87.8901 123.479 88.7375 122.963 89.4854C122.441 90.2423 121.793 91.0027 121.204 91.7026C120.598 92.424 120.053 93.0827 119.654 93.7041L117.971 92.6245ZM97.5189 67.3897C98.0872 67.8046 98.4659 67.8538 98.7953 67.7158L99.5685 69.5603C98.3057 70.0896 97.1658 69.6082 96.3397 69.0051L97.5189 67.3897ZM93.1353 68.2964C94.0251 66.9977 96.0368 66.3079 97.5189 67.3897L96.3397 69.0051C95.9722 68.7369 95.1897 68.8365 94.7852 69.4268L93.1353 68.2964ZM134.141 51.5407C136.434 50.3391 139.015 49.5898 141.644 50.9981L140.7 52.7611C138.959 51.8289 137.168 52.2126 135.07 53.3122L134.141 51.5407ZM89.884 102.694C90.3582 102.958 90.8195 103.155 91.1962 103.214C91.5466 103.269 91.6625 103.19 91.736 103.105L93.2507 104.411C92.5684 105.202 91.642 105.309 90.8862 105.19C90.1568 105.076 89.4481 104.74 88.9111 104.441L89.884 102.694ZM126.273 53.0657C128.434 53.5525 130.718 53.2452 132.732 52.2578L133.613 54.0538C131.214 55.2293 128.466 55.6099 125.833 55.0169L126.273 53.0657ZM85.4848 102.425C86.8434 101.934 88.5327 101.941 89.884 102.694L88.9111 104.441C88.1511 104.018 87.0786 103.975 86.1647 104.306L85.4848 102.425ZM78.1971 103.084C78.9309 103.843 79.8836 104.021 81.1473 103.817C82.4585 103.606 83.8566 103.025 85.3405 102.478L86.0328 104.354C84.681 104.853 83.025 105.54 81.466 105.792C79.8596 106.051 78.1258 105.888 76.759 104.474L78.1971 103.084ZM86.0346 73.1475C86.6962 73.5202 87.6599 73.4607 88.5783 73.0127L89.4552 74.8101C88.2016 75.4217 86.4973 75.7035 85.0532 74.8902L86.0346 73.1475ZM126.883 76.0072C129.354 79.5265 134.063 80.825 137.834 78.8997L138.743 80.681C134.027 83.0891 128.251 81.4368 125.247 77.1563L126.883 76.0072ZM57.6857 121.718C53.6764 121.154 50.2987 118.252 49.0114 114.442L50.9061 113.802C51.9602 116.922 54.7307 119.282 57.9647 119.738L57.6857 121.718ZM74.0535 117.145C72.9019 116.37 71.2828 116.675 69.7728 117.755L68.6098 116.127C70.3783 114.863 72.9789 114.01 75.1703 115.486L74.0535 117.145ZM78.5904 117.155C77.8988 117.84 77.0065 118.018 76.211 117.945C75.4269 117.872 74.664 117.556 74.0535 117.145L75.1703 115.486C75.5569 115.746 76.0044 115.917 76.3949 115.953C76.7739 115.988 77.0203 115.895 77.1827 115.734L78.5904 117.155ZM141.644 50.9981C142.888 51.6645 144.165 52.4111 145.417 52.8259C146.666 53.2394 147.595 53.2218 148.29 52.7118L149.473 54.3244C147.993 55.4106 146.256 55.2107 144.788 54.7245C143.324 54.2395 141.834 53.3688 140.7 52.7611L141.644 50.9981ZM96.079 98.0979C98.0271 96.4771 100.72 96.2114 102.976 96.8904C105.236 97.5703 107.288 99.2748 107.739 101.846L105.77 102.191C105.484 100.567 104.156 99.3339 102.4 98.8056C100.641 98.2764 98.6841 98.5322 97.3582 99.6354L96.079 98.0979ZM114.627 63.1306C116.947 61.955 120.079 62.2516 121.919 64.292L120.434 65.6314C119.294 64.3674 117.18 64.079 115.531 64.9146L114.627 63.1306ZM81.4346 115.054C80.5831 115.105 79.8668 115.767 78.9242 116.806L77.4433 115.462C78.2807 114.539 79.5235 113.164 81.3159 113.058L81.4346 115.054Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M65.5985 111.342C80.2347 107.343 103.23 74.1321 132.238 70.9255C114.673 62.8072 94.826 70.0824 90.8625 81.5155C90.3842 82.8952 89.0294 84.0685 87.6074 84.4003C83.6622 85.3208 80.3563 87.6613 78.4052 91.2116C74.9992 97.4092 73.4051 106.158 65.5985 111.342Z\"\r\n        fill=\"#F3EBD6\"\r\n        stroke=\"#101010\"\r\n        stroke-width=\"2\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n      <path\r\n        d=\"M95.9997 81.5616C104.822 71.4834 109.721 71.0869 118.196 70.8248C109.209 73.1307 104.208 75.2109 97.869 83.0827C97.0315 84.1228 95.8952 84.88 94.6248 85.2913C89.157 87.0611 86.2466 89.4859 81.7765 94.0989C84.6827 88.3749 87.4714 85.8798 93.6165 83.2794C94.5285 82.8935 95.3474 82.3066 95.9997 81.5616Z\"\r\n        fill=\"#101010\"\r\n        stroke=\"#101010\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n      <ellipse\r\n        cx=\"3.69771\"\r\n        cy=\"2.32409\"\r\n        rx=\"3.69771\"\r\n        ry=\"2.32409\"\r\n        transform=\"matrix(-0.726533 0.687132 0.687132 0.726533 175.479 70.3684)\"\r\n        fill=\"#010201\"\r\n      />\r\n      <ellipse\r\n        cx=\"3.69771\"\r\n        cy=\"2.32409\"\r\n        rx=\"3.69771\"\r\n        ry=\"2.32409\"\r\n        transform=\"matrix(-0.986241 -0.165317 -0.165317 0.986241 170.558 45.4526)\"\r\n        fill=\"#010201\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default PoissonGauche;\r\n","import \"../../styles/Tabs-1-3.css\";\r\nimport PoissonGauche from \"../../assets/svg/Poisson-gauche\";\r\n\r\nfunction Tabs13({\r\n  categoriesBoissons,\r\n  categoriesNourritures,\r\n  cover,\r\n  classToggle,\r\n}) {\r\n  return (\r\n    <div className={`tabs-1-3 ${classToggle}`}>\r\n      <div className=\"carte-menu\">\r\n        <div className=\"feuille-menu\">\r\n          <PoissonGauche />\r\n          <div className=\"categorie-menu\">\r\n            <h3>Boissons</h3>\r\n            <ul>\r\n              {categoriesBoissons.map((cat) => (\r\n                <li key={cat}>{cat}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"trait-moyen\"></div>\r\n          <div className=\"categorie-menu\">\r\n            <h3>Nourritures</h3>\r\n            <ul>\r\n              {categoriesNourritures.map((el) => (\r\n                <li key={el}>{el}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"rectangle-menu bg-pink\"></div>\r\n      </div>\r\n      <img src={cover} alt=\"\" className=\"img-repas\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tabs13;\r\n","function VegetarienIcon({className}) {\r\n  return (\r\n    <svg\r\n      width=\"30\"\r\n      height=\"21\"\r\n      viewBox=\"0 0 190 181\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={className}\r\n    >\r\n      <path\r\n        d=\"M22.1603 146.736C15.7617 158.386 12.6312 165.721 9.80154 179.807C9.67768 180.424 10.1501 181 10.779 181H28.2979C28.7515 181 29.148 180.694 29.2668 180.257C39.6913 141.854 67.8848 108.531 110.526 106.542C111.091 106.516 111.567 106.969 111.567 107.535V124.527C111.567 125.069 111.124 125.512 110.583 125.532C82.6992 126.592 71.8046 139.792 53.9686 164.738C53.5475 165.327 53.873 166.164 54.5831 166.305C66.4296 168.664 76.1717 170 86.8614 170.263C110.951 170.857 136.009 165.471 154.176 149.639C165.256 139.984 175.704 126.47 189.133 105.19C189.383 104.793 189.326 104.261 188.991 103.933C147.315 63.1977 91.6627 57.2586 58.3771 94.4109C57.7539 95.1065 56.5673 94.6832 56.5673 93.7492V70C56.5673 69.4477 56.1196 69 55.5673 69H38.5039C37.977 69 37.5405 69.4088 37.506 69.9346L33.6968 128.025C33.6431 128.844 32.6814 129.241 32.0833 128.68C8.74105 106.781 20.4055 60.9408 53.7425 28.7885C54.1766 28.3698 54.8839 28.4337 55.2363 28.9231C63.261 40.0689 66.5967 47.4161 70.7583 60.526C70.9275 61.059 71.5008 61.355 72.0313 61.1782L86.7239 56.2806C87.2042 56.1205 87.4882 55.6204 87.3831 55.1252C82.8327 33.6664 74.8577 21.5504 57.2427 0.796229C56.8764 0.364701 56.2111 0.323884 55.7946 0.707194C-2.93409 54.7618 -17.1041 112.994 21.9117 145.462C22.2838 145.772 22.3933 146.312 22.1603 146.736Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default VegetarienIcon;\r\n","// Styles\r\nimport \"../../styles/Card-menu.css\";\r\n\r\n//Assets\r\nimport VegetarienIcon from \"../../assets/icons/Vegetarien-icon\";\r\n\r\nfunction CardMenu({ menu, typeMenu, cover, bgColor, borderColor, className }) {\r\n  return (\r\n    <div className={`card-menu ${className} ${bgColor}`}>\r\n      <img src={cover} alt=\"\" className={`img-card-menu ${borderColor}`} />\r\n      <h3 className=\"white\">{typeMenu}</h3>\r\n      <ul>\r\n        {menu.map(({ plat, imgDisplay }) => (\r\n          <div className=\"item-icon\">\r\n            <li className=\"white\">{plat}</li>\r\n            <VegetarienIcon className={imgDisplay} />\r\n          </div>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardMenu;\r\n","function FeuxVertRose() {\r\n  return (\r\n    <svg\r\n      width=\"225\"\r\n      height=\"306\"\r\n      viewBox=\"0 0 225 306\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"feux-vert-rose\"\r\n    >\r\n      <path\r\n        d=\"M158.878 76.4945C157.194 81.1374 167.964 69.818 169.829 65.9215C174.25 56.685 176.192 46.1457 177.16 36.0027C177.954 27.6769 165.927 24.6256 163.324 32.8491C159.056 46.3316 164.237 61.7212 158.878 76.4945ZM132.102 72.6864C132.878 73.59 123.67 30.2684 123.521 25.3476C123.261 16.7402 110.21 16.6014 110.242 25.2713C110.304 41.7925 121.752 60.6204 132.102 72.6864ZM119.343 95.3295C120.518 95.8323 91.6789 62.0593 88.2056 57.1118C82.1965 48.5522 68.7273 56.7851 74.2498 65.8138C82.4298 79.187 105.614 89.4545 119.343 95.3295ZM123.752 112.698C125.216 112.055 69.8464 116.083 65.036 115.658C58.3393 115.066 57.1204 125.203 63.8406 125.88C83.7646 127.887 105.823 120.573 123.752 112.698ZM142.749 124.441C141.258 117.13 134.076 142.398 130.532 147.621C127.632 151.895 133.686 156.767 137.02 152.713C143.48 144.859 144.719 134.101 142.749 124.441ZM170.255 106.305C166.049 106.058 180.828 116.749 193.444 115.118C194.761 114.948 195.946 114.415 196.821 113.387C203.682 105.334 176.401 106.665 170.255 106.305ZM164.264 90.7095C162.091 91.7447 175.213 92.2775 180.922 88.8173C188.444 84.2585 194.112 76.4239 198.035 68.6751C199.264 66.2492 199.178 63.4083 197.431 61.2355C193.102 55.8519 175.461 85.3759 164.264 90.7095Z\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <ellipse\r\n        cx=\"9.27214\"\r\n        cy=\"11.5902\"\r\n        rx=\"9.27214\"\r\n        ry=\"11.5902\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 156.465 95.4376)\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <circle\r\n        cx=\"6.9541\"\r\n        cy=\"6.9541\"\r\n        r=\"6.9541\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 210.746 48.7507)\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <path\r\n        d=\"M72.0833 187.029C71.4184 188.661 89.5599 174.459 95.0878 171.221C99.7786 168.473 96.154 161.124 91.1964 163.53C82.5691 167.718 75.578 178.455 72.0833 187.029ZM57.3807 186.599C58.0836 190.716 66.5866 181.396 60.2611 168.022C59.1737 165.723 56.464 164.606 54.1457 165.872C50.4173 167.908 56.5714 181.859 57.3807 186.599ZM54.8264 212.508C60.2961 211.46 48.9193 202.767 34.6643 210.08C25.6067 214.727 37.3037 218.91 43.201 215.846C46.9017 213.923 50.7781 213.284 54.8264 212.508ZM66.0355 220.487C66.4987 215.246 59.9278 227.93 59.2176 231.769C57.4991 241.058 57.624 251.066 59.5789 260.318C60.1363 262.956 62.5492 264.836 65.2915 264.322C68.3935 263.742 65.3894 227.797 66.0355 220.487ZM76.1963 219.42C75.2091 219.005 85.6633 234.179 86.4418 240.832C87.0892 246.364 95.3578 245.134 94.3672 239.654C92.5474 229.585 85.2579 223.232 76.1963 219.42ZM87.488 208.926C84.2127 212.532 104.063 215.376 99.612 212.376C99.5468 212.333 105.372 207.889 103.4 206.824C102 206.067 97.4868 207.447 100.935 206.529C101.034 206.503 101.337 206.452 101.235 206.464C98.1107 206.857 89.0518 207.204 87.488 208.926ZM102.964 206.626C101.213 205.98 99.2698 206.876 98.6239 208.627C97.978 210.378 98.8739 212.321 100.625 212.967C102.376 213.613 104.319 212.717 104.965 210.966C105.611 209.215 104.715 207.272 102.964 206.626ZM82.9575 190.043C82.5764 190.35 108.393 184.728 116.489 184.009C122.618 183.465 122.452 174.19 116.216 174.269C104.719 174.417 91.5107 183.148 82.9575 190.043Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <ellipse\r\n        cx=\"4.96666\"\r\n        cy=\"3.97333\"\r\n        rx=\"4.96666\"\r\n        ry=\"3.97333\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 106.034 155.246)\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <ellipse\r\n        cx=\"7.94666\"\r\n        cy=\"6.95333\"\r\n        rx=\"7.94666\"\r\n        ry=\"6.95333\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 78.1523 202.135)\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <circle\r\n        cx=\"5.96\"\r\n        cy=\"5.96\"\r\n        r=\"5.96\"\r\n        transform=\"matrix(-0.93821 -0.346067 -0.346067 0.93821 67.8242 270.32)\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M172.351 153.094C172.509 151.334 170.239 150.497 169.217 151.937L163.52 159.96C163.236 160.36 162.796 160.621 162.308 160.677L153.109 161.743C151.7 161.906 151.075 163.601 152.04 164.64L158.344 171.424C158.678 171.784 158.844 172.268 158.8 172.757L157.923 182.557C157.765 184.316 160.035 185.153 161.057 183.713L166.754 175.69C167.038 175.29 167.478 175.03 167.966 174.973L177.165 173.907C178.574 173.744 179.199 172.049 178.234 171.011L171.93 164.226C171.596 163.867 171.43 163.382 171.474 162.894L172.351 153.094Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M142.317 184.519C142.481 182.755 140.202 181.915 139.181 183.362L136.573 187.057C136.291 187.457 135.852 187.719 135.366 187.777L130.325 188.386C128.924 188.555 128.304 190.238 129.259 191.276L132.698 195.012C133.029 195.373 133.193 195.856 133.148 196.344L132.731 200.847C132.568 202.611 134.847 203.452 135.868 202.004L138.475 198.309C138.758 197.909 139.196 197.647 139.682 197.589L144.724 196.98C146.124 196.811 146.745 195.128 145.79 194.09L142.351 190.354C142.019 189.993 141.856 189.51 141.901 189.022L142.317 184.519Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default FeuxVertRose;\r\n","\r\n\r\nexport const listeVinBoissons = [\"Bar à kir\", \"Bar à sirop\"];\r\n\r\nexport const listeVinNourritures = [\"Cookies\", \"Fruits\"];\r\n\r\nexport const listeBrunchBoissons = [\r\n  \"Café\",\r\n  \"Thé\",\r\n  \"Chocolat\",\r\n  \"Lait végétal\",\r\n  \"Jus de fruit, pomme et orange\",\r\n];\r\n\r\nexport const listeBrunchNourritures = [\r\n  \"Yaourt\",\r\n  \"Compote\",\r\n  \"Fruits\",\r\n  \"Viennoiseries\",\r\n  \"Saucisses, bacon\",\r\n  \"Oeufs brouillés\",\r\n  \"Guacamole\",\r\n  \"Céréales\",\r\n  \"Confitures, pâte à tartiner\",\r\n  \"Pancakes\",\r\n];\r\n\r\nexport const assiettes = [\r\n  {\r\n    plat: \"Accras de morue\",\r\n    imgDisplay: \"none\",\r\n  },\r\n  {\r\n    plat: \"Samoussas\",\r\n    imgDisplay: \"icon-veg\",\r\n  },\r\n  {\r\n    plat: \"Gyozas\",\r\n    imgDisplay: \"none\",\r\n  },\r\n  {\r\n    plat: \"Mini burger\",\r\n    imgDisplay: \"none\",\r\n  },\r\n  {\r\n    plat: \"Mini burger végétarien\",\r\n    imgDisplay: \"icon-veg\",\r\n  },\r\n];\r\n\r\nexport const buffet = [\r\n  {\r\n    plat: \"Makis\",\r\n    imgDisplay: \"none\",\r\n  },\r\n  {\r\n    plat: \"Makis végétariens\",\r\n    imgDisplay: \"icon-veg\",\r\n  },\r\n  {\r\n    plat: \"Crudités\",\r\n    imgDisplay: \"icon-veg\",\r\n  },\r\n  {\r\n    plat: \"Verrines\",\r\n    imgDisplay: \"none\",\r\n  },\r\n  {\r\n    plat: \"Fromages\",\r\n    imgDisplay: \"none\",\r\n  },\r\n];\r\n\r\nexport const ateliers = [\r\n  {\r\n    plat: \"Mini hot dog\",\r\n    imgDisplay: \"none\",\r\n  },\r\n  {\r\n    plat: \"Borchettes boeuf & poulet\",\r\n    imgDisplay: \"none\",\r\n  },\r\n  {\r\n    plat: \"Jambon braisé\",\r\n    imgDisplay: \"none\",\r\n  },\r\n];\r\n\r\nexport const desserts = [\r\n  {\r\n    plat: \"Pièce montée choux et nougatine\",\r\n    imgDisplay: \"icon-veg\",\r\n  },\r\n  {\r\n    plat: \"Mignardises (Gâteaux nantais, tarte framboise, verrine façon tarte citron meringué, mousse au chocolat\",\r\n    imgDisplay: \"icon-veg\",\r\n  },\r\n];\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// Composants\r\nimport WaveShapeHaut from \"../../components/Wave-shape-haut\";\r\nimport Banner from \"../../components/Banner\";\r\nimport Tabs13 from \"../../components/Tabs-1-3\";\r\nimport CardMenu from \"../../components/Card-menu\";\r\n\r\n// Styles\r\nimport \"../../styles/Restauration.css\";\r\n\r\n//Assets\r\nimport vinHonneur from \"../../assets/restauration/vin-honneur.jpg\";\r\nimport brunch from \"../../assets/restauration/brunch.jpg\";\r\nimport buissonGauche from \"../../assets/buisson-gauche-bas.png\";\r\nimport buissonDroit from \"../../assets/buisson-droit.png\";\r\nimport assietesImg from \"../../assets/restauration/assiettes.jpg\";\r\nimport buffetImg from \"../../assets/restauration/buffet.jpg\";\r\nimport ateliersImg from \"../../assets/restauration/ateliers.jpg\";\r\nimport dessertsImg from \"../../assets/restauration/desserts.jpg\";\r\nimport FeuxVertRose from \"../../assets/svg/Feux-vert-rose\";\r\nimport Pompom from \"../../assets/svg/Pompom\"\r\n\r\n// Données\r\nimport {\r\n  listeVinBoissons,\r\n  listeVinNourritures,\r\n  listeBrunchBoissons,\r\n  listeBrunchNourritures,\r\n  assiettes,\r\n  buffet,\r\n  ateliers,\r\n  desserts,\r\n} from \"../../datas/menu\";\r\n\r\nfunction Restauration() {\r\n  const [toggle, setToggle] = useState(1);\r\n\r\n  function updateToggle(id) {\r\n    setToggle(id);\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = \"Restauration - Mariage Stéphie & Alain\"\r\n  }, [])\r\n\r\n  return (\r\n    <main>\r\n      {/* Bannière */}\r\n      <Banner />\r\n      <WaveShapeHaut />\r\n\r\n      <section className=\"description-menu fade-in-section\">\r\n        <FeuxVertRose />\r\n        <h2>\r\n          Le <span className=\"orange title text-center\">menu</span> du week-end\r\n          !\r\n        </h2>\r\n        <div className=\"text text-center\">\r\n          <p>\r\n            Afin de bien commencer cette belle journée, retrouvons nous après la\r\n            cérémonie pour un vin d'honneur gourmand.\r\n          </p>\r\n          <p>\r\n            Dès 18h00, nos stands s'ouvrirons afin de reprendre les forces\r\n            dûment dépensées pendant vos activités. Vous aurez jusqu'à 21h00\r\n            pour savourer chaque bouchée... avant de laisser place à la danse !\r\n          </p>\r\n          <p>\r\n            Et pour les plus gourmands, rendez-vous à 22h30 pour un dessert à\r\n            déguster entre deux pas endiablés !\r\n          </p>\r\n          <p>\r\n            Sucré, salé… pourquoi choisir ? Rejoignez-nous le dimanche à 11h00\r\n            pour un brunch qui met tout le monde d’accord !\r\n          </p>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"tabs fade-in-section\">\r\n        <Pompom className=\"pompom-menu\" />\r\n        <ul className=\"tabs-nav-container\">\r\n          <li\r\n            className={toggle === 1 ? \"tabs-title-active\" : \"tabs-title\"}\r\n            onClick={() => updateToggle(1)}\r\n          >\r\n            Vin d'honneur\r\n          </li>\r\n          <li\r\n            className={toggle === 2 ? \"tabs-title-active\" : \"tabs-title\"}\r\n            onClick={() => updateToggle(2)}\r\n          >\r\n            Restauration\r\n          </li>\r\n          <li\r\n            className={toggle === 3 ? \"tabs-title-active\" : \"tabs-title\"}\r\n            onClick={() => updateToggle(3)}\r\n          >\r\n            Brunch\r\n          </li>\r\n        </ul>\r\n        <Tabs13\r\n          categoriesBoissons={listeVinBoissons}\r\n          categoriesNourritures={listeVinNourritures}\r\n          cover={vinHonneur}\r\n          classToggle={toggle === 1 ? \"show-content\" : \"tabs-content\"}\r\n        />\r\n        <div className={toggle === 2 ? \"show-content tabs-stands\" : \"tabs-content\"}>\r\n          <CardMenu menu={assiettes} typeMenu=\"Assiettes\" cover={assietesImg} bgColor=\"bg-pink\" borderColor=\"border-pink\" className=\"one\"/>\r\n          <CardMenu menu={buffet} typeMenu=\"Buffet\" cover={buffetImg} bgColor=\"bg-orange\" borderColor=\"border-orange\" className=\"two\"/>\r\n          <CardMenu menu={ateliers} typeMenu=\"Ateliers\" cover={ateliersImg} bgColor=\"bg-green\" borderColor=\"border-green\" className=\"three\"/>\r\n          <CardMenu menu={desserts} typeMenu=\"Desserts\" cover={dessertsImg} bgColor=\"bg-blue\" borderColor=\"border-blue\" className=\"four\"/>\r\n        </div>\r\n\r\n        <Tabs13\r\n          categoriesBoissons={listeBrunchBoissons}\r\n          categoriesNourritures={listeBrunchNourritures}\r\n          cover={brunch}\r\n          classToggle={toggle === 3 ? \"show-content\" : \"tabs-content\"}\r\n        />\r\n      </section>\r\n\r\n      <div className=\"illustrations-bas\">\r\n        <img src={buissonGauche} alt=\"\" className=\"img-bas1\" />\r\n        <img src={buissonDroit} alt=\"\" className=\"img-bas2\" />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Restauration;\r\n","import React, { useState } from \"react\";\r\nimport \"../../styles/ClickableImageMap.css\";\r\n\r\n//Assets\r\nimport plan from \"../../assets/hebergement/plan.png\";\r\nimport planZone1 from \"../../assets/hebergement/plan-zone-1.png\";\r\nimport planZone2 from \"../../assets/hebergement/plan-zone-2.png\";\r\nimport planZone3 from \"../../assets/hebergement/plan-zone-3.png\";\r\n\r\nconst ClickableImageMap = () => {\r\n  const [currentImage, setCurrentImage] = useState(plan);\r\n  const [isFading, setIsFading] = useState(false);\r\n  const [isDetailView, setIsDetailView] = useState(false);\r\n\r\n  const handleClick = (newImage) => {\r\n    setIsFading(true);\r\n    setTimeout(() => {\r\n      setCurrentImage(newImage);\r\n      setIsFading(false);\r\n      setIsDetailView(true);\r\n    }, 500);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setIsFading(true);\r\n    setTimeout(() => {\r\n      setCurrentImage(plan);\r\n      setIsFading(false);\r\n      setIsDetailView(false);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"image-container\">\r\n      <img\r\n        src={currentImage}\r\n        alt=\"Plan\"\r\n        className={`plan ${isFading ? \"fade\" : \"\"}`}\r\n      />\r\n\r\n      {!isDetailView && (\r\n        <>\r\n          <div className=\"zone\" id=\"zone1\" onClick={() => handleClick(planZone1)}></div>\r\n          <div className=\"zone\" id=\"zone2\" onClick={() => handleClick(planZone2)}></div>\r\n          <div className=\"zone\" id=\"zone3\" onClick={() => handleClick(planZone3)}></div>\r\n        </>\r\n      )}\r\n\r\n      {isDetailView && (\r\n        <button className=\"back-button\" onClick={handleBack}>\r\n          ← Retour au plan\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClickableImageMap;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"../../styles/Button.css\";\r\n\r\nfunction ButtonSmall({ link, color, borderColor, className }) {\r\n  return (\r\n    <Link to={link} className={`button ${borderColor} ${className}`}>\r\n      <svg\r\n        width=\"25\"\r\n        height=\"14\"\r\n        viewBox=\"0 0 39 28\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M2 14.2034H37M37 14.2034L27.1685 26M37 14.2034L27.1685 2\"\r\n          stroke={color}\r\n          stroke-width=\"3\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default ButtonSmall;\r\n","//Assets\r\nimport cocoLodge from \"../assets/hebergement/coco-lodge.jpg\";\r\nimport lodge from \"../assets/hebergement/lodge.jpg\";\r\nimport cottage45 from \"../assets/hebergement/cottage-45.jpg\";\r\nimport cottage16 from \"../assets/hebergement/cottage-16.jpg\";\r\nimport cottage33 from \"../assets/hebergement/cottage-33.jpg\";\r\nimport camping from \"../assets/hebergement/camping.jpg\";\r\nimport campingCar from \"../assets/hebergement/camping-car.jpg\";\r\n\r\nexport const listeLogements = [\r\n  {\r\n    title: \"Coco Lodge\",\r\n    content: \"4 personnes\",\r\n    cover: cocoLodge,\r\n    link: \"https://www.loiseliere.com/camping/coco-lodge-glamping-vendee/\",\r\n    bgColor: \"bg-blue\",\r\n  },\r\n  {\r\n    title: \"Lodge\",\r\n    content: \"5 personnes\",\r\n    cover: lodge,\r\n    link: \"https://www.loiseliere.com/camping/tente-lodge/\",\r\n    bgColor: \"bg-pink\",\r\n  },\r\n  {\r\n    title: \"Cottage 45m²\",\r\n    content: \"7 personnes\",\r\n    cover: cottage45,\r\n    link: \"https://www.loiseliere.com/camping/cottage-chalet-bois/\",\r\n    bgColor: \"bg-orange\",\r\n  },\r\n  {\r\n    title: \"Cottage Original 16m²\",\r\n    content: \"4 personnes\",\r\n    cover: cottage16,\r\n    link: \"https://www.loiseliere.com/camping/cottage-original-hebergement-insolite/\",\r\n    bgColor: \"bg-green\",\r\n  },\r\n  {\r\n    title: \"Cottage 33m²\",\r\n    content: \"7 personnes\",\r\n    cover: cottage33,\r\n    link: \" https://www.loiseliere.com/camping/cottage-mobilhome-puydufou/\",\r\n    bgColor: \"bg-blue\",\r\n  },\r\n  {\r\n    title: \"Emplacement de tente\",\r\n    content: \"\",\r\n    cover: camping,\r\n    link: \"https://www.loiseliere.com/camping/emplacement-vendee/\",\r\n    bgColor: \"bg-pink\",\r\n  },\r\n  {\r\n    title: \"Parking camping-car\",\r\n    content: \" \",\r\n    cover: campingCar,\r\n    link: \"https://www.loiseliere.com/camping/emplacement-vendee/\",\r\n    bgColor: \"bg-orange\",\r\n  },\r\n];\r\n","import { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Navigation, FreeMode } from \"swiper\";\r\nimport \"swiper/swiper-bundle.css\";\r\nimport \"../../styles/Carrousel-logements.css\";\r\n\r\n//Composants\r\nimport ButtonSmall from \"../Button-small\";\r\n\r\n//Assets\r\nimport NavNext from \"../../assets/icons/Nav-next\";\r\nimport NavPrev from \"../../assets/icons/Nav-prev\";\r\n\r\n// Données\r\nimport { listeLogements } from \"../../datas/logements\";\r\nimport { white, blue } from \"../../datas/colors\";\r\n\r\nfunction CarrouselLogements() {\r\n  return (\r\n    <section className=\"carrousel-logement bg-white fade-in-section\">\r\n      <Swiper\r\n        slidesPerView={\"auto\"}\r\n        spaceBetween={20}\r\n        freeMode={true}\r\n        navigation={{\r\n          nextEl: \".custom-next\",\r\n          prevEl: \".custom-prev\",\r\n        }}\r\n        modules={[Navigation, FreeMode]}\r\n        breakpoints={{\r\n          320: {\r\n            slidesPerView: 1, \r\n          },\r\n          580: {\r\n            slidesPerView: 2, \r\n          },\r\n          768: {\r\n            slidesPerView: 3, \r\n          },\r\n          1070:{\r\n            slidesPerView: 4,\r\n          },\r\n        }}\r\n        className=\"swiper-logement\"\r\n      >\r\n        {listeLogements.map(\r\n          ({ title, content, cover, link, bgColor }, index) => (\r\n            <SwiperSlide key={index} className={`swiper-slide-logement ${bgColor}`}>\r\n              <div className=\"slide-title-logement\">\r\n                <h3 className=\"white\">{title}</h3>\r\n                <p className=\"white\">{content}</p>\r\n              </div>\r\n              <div className=\"slide-cover-button-logement\">\r\n                <img src={cover} alt=\"\" />\r\n                <div className=\"slide-button-logement\">\r\n                  <ButtonSmall\r\n                    link={link}\r\n                    color={white}\r\n                    borderColor=\"button-white\"\r\n                    className=\"button-petit\"\r\n                  />\r\n                  <p className=\"white\">En savoir plus</p>\r\n                </div>\r\n              </div>\r\n            </SwiperSlide>\r\n          )\r\n        )}\r\n      </Swiper>\r\n\r\n      <div className=\"custom-navigation\">\r\n        <span className=\"trait-carrousel2 bg-blue\"></span>\r\n        <button className=\"custom-prev btn-nav\">\r\n          <NavPrev className={blue}/>\r\n        </button>\r\n        <button className=\"custom-next btn-nav\">\r\n          <NavNext className={blue}/>\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CarrouselLogements;\r\n","function FeuxRoseVertDroit() {\r\n  return (\r\n    <svg\r\n      width=\"225\"\r\n      height=\"306\"\r\n      viewBox=\"0 0 225 306\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"feux-rose-vert-droit\"\r\n    >\r\n      <path\r\n        d=\"M65.8223 76.4944C67.5066 81.1374 56.7358 69.818 54.8709 65.9215C50.4505 56.685 48.5084 46.1457 47.5407 36.0027C46.7463 27.6769 58.7729 24.6256 61.3762 32.849C65.6442 46.3315 60.4633 61.7212 65.8223 76.4944ZM92.5977 72.6864C91.8226 73.59 101.03 30.2684 101.179 25.3476C101.439 16.7402 114.49 16.6014 114.458 25.2713C114.396 41.7925 102.948 60.6204 92.5977 72.6864ZM105.357 95.3295C104.182 95.8323 133.021 62.0593 136.495 57.1118C142.504 48.5522 155.973 56.7851 150.45 65.8137C142.27 79.1869 119.086 89.4545 105.357 95.3295ZM100.948 112.698C99.4841 112.055 154.854 116.083 159.664 115.658C166.361 115.066 167.58 125.203 160.86 125.88C140.936 127.887 118.877 120.573 100.948 112.698ZM81.9513 124.441C83.4421 117.13 90.624 142.398 94.1681 147.621C97.0686 151.895 91.014 156.767 87.6801 152.713C81.2202 144.859 79.9817 134.101 81.9513 124.441ZM54.4453 106.305C58.6514 106.058 43.8719 116.749 31.2566 115.118C29.939 114.948 28.7545 114.415 27.8792 113.387C21.0187 105.334 48.2988 106.665 54.4453 106.305ZM60.4358 90.7095C62.6088 91.7446 49.4875 92.2774 43.7783 88.8173C36.2564 84.2585 30.5878 76.4239 26.6648 68.6751C25.4367 66.2492 25.5219 63.4083 27.2691 61.2355C31.5982 55.8519 49.2393 85.3759 60.4358 90.7095Z\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <ellipse\r\n        cx=\"80.9455\"\r\n        cy=\"103.103\"\r\n        rx=\"9.27214\"\r\n        ry=\"11.5902\"\r\n        transform=\"rotate(-20.2469 80.9455 103.103)\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <circle\r\n        cx=\"22.8851\"\r\n        cy=\"52.8686\"\r\n        r=\"6.9541\"\r\n        transform=\"rotate(-20.2469 22.8851 52.8686)\"\r\n        fill=\"#EF6B93\"\r\n      />\r\n      <path\r\n        d=\"M152.617 187.03C153.282 188.661 135.14 174.459 129.612 171.221C124.922 168.474 128.546 161.124 133.504 163.53C142.131 167.718 149.122 178.455 152.617 187.03ZM167.32 186.599C166.617 190.716 158.114 181.396 164.439 168.022C165.526 165.723 168.236 164.606 170.554 165.872C174.283 167.908 168.129 181.86 167.32 186.599ZM169.874 212.508C164.404 211.46 175.781 202.767 190.036 210.08C199.093 214.727 187.397 218.91 181.499 215.846C177.798 213.923 173.922 213.285 169.874 212.508ZM158.665 220.487C158.202 215.247 164.772 227.93 165.483 231.769C167.201 241.058 167.076 251.066 165.121 260.319C164.564 262.956 162.151 264.836 159.409 264.322C156.307 263.742 159.311 227.797 158.665 220.487ZM148.504 219.42C149.491 219.005 139.037 234.18 138.258 240.832C137.611 246.364 129.342 245.135 130.333 239.654C132.153 229.585 139.442 223.232 148.504 219.42ZM137.212 208.926C140.487 212.532 120.637 215.376 125.088 212.377C125.153 212.333 119.328 207.889 121.3 206.824C122.7 206.067 127.213 207.447 123.765 206.529C123.666 206.503 123.363 206.452 123.465 206.465C126.589 206.857 135.648 207.204 137.212 208.926ZM121.736 206.626C123.487 205.98 125.43 206.876 126.076 208.627C126.722 210.378 125.826 212.321 124.075 212.967C122.324 213.613 120.381 212.717 119.735 210.966C119.089 209.215 119.985 207.272 121.736 206.626ZM141.743 190.043C142.124 190.35 116.307 184.728 108.211 184.009C102.083 183.465 102.249 174.19 108.484 174.27C119.981 174.417 133.19 183.148 141.743 190.043Z\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <ellipse\r\n        cx=\"124.701\"\r\n        cy=\"157.256\"\r\n        rx=\"4.96666\"\r\n        ry=\"3.97333\"\r\n        transform=\"rotate(-20.2469 124.701 157.256)\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <ellipse\r\n        cx=\"156.41\"\r\n        cy=\"205.908\"\r\n        rx=\"7.94666\"\r\n        ry=\"6.95333\"\r\n        transform=\"rotate(-20.2469 156.41 205.908)\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <circle\r\n        cx=\"164.529\"\r\n        cy=\"273.849\"\r\n        r=\"5.96\"\r\n        transform=\"rotate(-20.2469 164.529 273.849)\"\r\n        fill=\"#97AC83\"\r\n      />\r\n      <path\r\n        d=\"M52.3489 153.094C52.1914 151.334 54.4607 150.497 55.4833 151.937L61.18 159.96C61.4641 160.36 61.9045 160.62 62.3918 160.677L71.5917 161.743C73.0001 161.906 73.6253 163.601 72.6602 164.64L66.356 171.424C66.0221 171.784 65.8564 172.268 65.9002 172.757L66.7775 182.557C66.935 184.316 64.6657 185.153 63.6431 183.713L57.9464 175.69C57.6624 175.29 57.2219 175.03 56.7347 174.973L47.5347 173.907C46.1263 173.744 45.5011 172.049 46.4662 171.011L52.7704 164.226C53.1043 163.867 53.27 163.382 53.2262 162.894L52.3489 153.094Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M82.3828 184.519C82.2196 182.755 84.4982 181.915 85.5197 183.362L88.1272 187.057C88.4094 187.457 88.8478 187.719 89.3337 187.777L94.3756 188.386C95.7757 188.555 96.3965 190.238 95.4415 191.276L92.0024 195.012C91.6709 195.373 91.5075 195.856 91.5526 196.344L91.9691 200.847C92.1323 202.611 89.8537 203.451 88.8323 202.004L86.2247 198.309C85.9425 197.909 85.5041 197.647 85.0182 197.589L79.9763 196.98C78.5762 196.811 77.9554 195.128 78.9104 194.09L82.3495 190.354C82.681 189.993 82.8444 189.51 82.7993 189.022L82.3828 184.519Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default FeuxRoseVertDroit;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\n// Composants\r\nimport WaveShapeHaut from \"../../components/Wave-shape-haut\";\r\nimport Banner from \"../../components/Banner\";\r\nimport ClickableImageMap from \"../../components/ClickableImageMap\";\r\nimport BandeauCadre from \"../../components/Bandeau-cadre\";\r\nimport CarrouselLogements from \"../../components/Carrousel-logements\";\r\nimport Pompom from \"../../assets/svg/Pompom\";\r\nimport FeuxRoseVertDroit from \"../../assets/svg/Feux-rose-vert-droit\";\r\n\r\n// Styles\r\nimport \"../../styles/Hebergement.css\";\r\n\r\nfunction Hebergement() {\r\n  useEffect(() => {\r\n    document.title = \"Hébergement - Mariage Stéphie & Alain\";\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      <Banner />\r\n      <WaveShapeHaut />\r\n\r\n      {/* Description hébergement */}\r\n      <section className=\"description-hebergement bg-white fade-in-section\">\r\n        <Pompom className=\"pompom-hebergement\" />\r\n        <h2 className=\"text-center\">\r\n          Les <span className=\"pink title\">hébergements</span> à disposition !\r\n        </h2>\r\n        <div className=\"text text-center\">\r\n          <p>\r\n            Pour que vous puissiez profiter pleinement des festivités, chacun\r\n            aura un logement qu'il devra en partie partager (\r\n            <span className=\"pink\">*</span>nous y reviendrons) pour la nuit du\r\n            samedi soir. La mise à disposition se fera par les propriétaires à\r\n            partir de 16h00 le samedi.\r\n          </p>\r\n          <p>\r\n            Si vous souhaitez prolonger votre séjour, cela est possible à tarif\r\n            préférentiel (-20% sur le tarif de base, soit environ 20€ par\r\n            personne) et devra nous être communiqué avant le 30 avril.\r\n          </p>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Carrousel logements */}\r\n      <CarrouselLogements />\r\n\r\n      {/* Plan des logements */}\r\n      <section className=\"plan-logements fade-in-section\">\r\n        <div className=\"feux-plan-hebergement\">\r\n          <FeuxRoseVertDroit />\r\n          <h2 className=\"text-center\">\r\n            <span className=\"orange title\">Organisation des</span> logements !\r\n          </h2>\r\n          <p className=\"italic text-center\">\r\n            Cliquez sur les zones pour plus de précisions.\r\n          </p>\r\n        </div>\r\n\r\n        <ClickableImageMap />\r\n        <div className=\"text text-center\">\r\n          <p>\r\n            <span className=\"pink\">*</span>Les logements sont divisés en trois\r\n            groupes : les Cottages, les Lodges et les Emplacements. Les\r\n            emplacements sont réservés aux personnes qui viennent en van,\r\n            camping-car et tente.\r\n          </p>\r\n          <p>\r\n            Les lodges sont des grandes tentes aménagées pour 4 personnes qui\r\n            contiennent des chambres avec lits et une cuisine. Ils sont moins\r\n            chers que les cottages cependant les sanitaires se trouvent à\r\n            l'extérieur à proximité (Cf photos ci-dessus). Possibilité de n'être\r\n            que 2/3 personnes par lodge.\r\n          </p>\r\n          <p>\r\n            Les cottages doivent impérativement contenir 5 personnes minimum,\r\n            c'est pourquoi ils seront partagés. Ils sont constitués d'une\r\n            chambre lit double, d'une chambre 3 lits simples et d'un convertible\r\n            dans le salon (2 personnes). WC et douche inclus dans les cottages\r\n            mais à partager.\r\n          </p>\r\n          <p>\r\n            Comme vous pouvez le constater, ça va être un peu notre plan de\r\n            table à nous (aussi complexe !), donc n'oubliez pas de nous prévenir\r\n            si vous souhaitez utiliser un emplacement ou dormir dans un lodge\r\n            afin qu'on puisse s'organiser au mieux.\r\n          </p>\r\n        </div>\r\n      </section>\r\n\r\n      <BandeauCadre>\r\n        <div className=\"cadre-content colonne\">\r\n          <h2>Vos préférences sont les bienvenues !</h2>\r\n          <p>\r\n            Des propositions de répartition ? Des affinités avec certains\r\n            invités ? Partagez-les nous au plus tôt !\r\n          </p>\r\n        </div>\r\n      </BandeauCadre>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Hebergement;\r\n","function QrCode() {\r\n  return (\r\n    <svg\r\n      width=\"200\"\r\n      height=\"199\"\r\n      viewBox=\"0 0 143 142\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"qr-code\"\r\n    >\r\n      <path\r\n        d=\"M10.7153 3.81671H4.31689V10.2151H10.7153V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M17.1137 3.81671H10.7153V10.2151H17.1137V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M23.5121 3.81671H17.1137V10.2151H23.5121V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M29.9105 3.81671H23.5121V10.2151H29.9105V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M36.3089 3.81671H29.9105V10.2151H36.3089V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M42.7073 3.81671H36.3089V10.2151H42.7073V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 3.81671H42.7073V10.2151H49.1058V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M61.9026 3.81671H55.5042V10.2151H61.9026V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M68.301 3.81671H61.9026V10.2151H68.301V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M74.6994 3.81671H68.301V10.2151H74.6994V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M81.0978 3.81671H74.6994V10.2151H81.0978V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M87.4962 3.81671H81.0978V10.2151H87.4962V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M100.293 3.81671H93.8946V10.2151H100.293V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M106.691 3.81671H100.293V10.2151H106.691V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M113.09 3.81671H106.691V10.2151H113.09V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M119.488 3.81671H113.09V10.2151H119.488V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M125.887 3.81671H119.488V10.2151H125.887V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M132.285 3.81671H125.887V10.2151H132.285V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M138.683 3.81671H132.285V10.2151H138.683V3.81671Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M10.7153 10.2151H4.31689V16.6135H10.7153V10.2151Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 10.2151H42.7073V16.6135H49.1058V10.2151Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M68.301 10.2151H61.9026L61.9026 16.6135H68.301V10.2151Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M87.4962 10.2151H81.0978V16.6135H87.4962V10.2151Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M100.293 10.2151H93.8946V16.6135H100.293V10.2151Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M138.683 10.2151H132.285V16.6135H138.683V10.2151Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M10.7153 16.6135H4.31689V23.0119H10.7153V16.6135Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M23.5121 16.6135H17.1137V23.0119H23.5121V16.6135Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M29.9105 16.6135H23.5121V23.0119H29.9105V16.6135Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M36.3089 16.6135H29.9105V23.0119H36.3089V16.6135Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 16.6135H42.7073V23.0119H49.1058V16.6135Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M68.301 16.6135H61.9026V23.0119H68.301V16.6135Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M74.6994 16.6135H68.301V23.0119H74.6994V16.6135Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M87.4962 16.6135H81.0978V23.0119H87.4962V16.6135Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M100.293 16.6135H93.8946V23.0119H100.293V16.6135Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M113.09 16.6135H106.691V23.0119H113.09V16.6135Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M119.488 16.6135H113.09V23.0119H119.488V16.6135Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M125.887 16.6135H119.488V23.0119H125.887V16.6135Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M138.683 16.6135H132.285V23.0119H138.683V16.6135Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M10.7153 23.0119H4.31689V29.4103H10.7153V23.0119Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M23.5121 23.0119H17.1137V29.4103H23.5121V23.0119Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M29.9105 23.0119H23.5121V29.4103H29.9105V23.0119Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M36.3089 23.0119H29.9105V29.4103H36.3089V23.0119Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 23.0119H42.7073V29.4103H49.1058V23.0119Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M74.6994 23.0119H68.301L68.301 29.4103H74.6994V23.0119Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M81.0978 23.0119H74.6994V29.4103H81.0978V23.0119Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M87.4962 23.0119H81.0978V29.4103H87.4962V23.0119Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M100.293 23.0119H93.8946V29.4103H100.293V23.0119Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M113.09 23.0119H106.691V29.4103H113.09V23.0119Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M119.488 23.0119H113.09V29.4103H119.488V23.0119Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M125.887 23.0119H119.488V29.4103H125.887V23.0119Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M138.683 23.0119H132.285V29.4103H138.683V23.0119Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M10.7153 29.4103H4.31689V35.8088H10.7153V29.4103Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M23.5121 29.4103H17.1137V35.8088H23.5121V29.4103Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M29.9105 29.4103H23.5121V35.8088H29.9105V29.4103Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M36.3089 29.4103H29.9105V35.8088H36.3089V29.4103Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 29.4103H42.7073V35.8088H49.1058V29.4103Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M87.4962 29.4103H81.0978V35.8088H87.4962V29.4103Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M100.293 29.4103H93.8946V35.8088H100.293V29.4103Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M113.09 29.4103H106.691V35.8088H113.09V29.4103Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M119.488 29.4103H113.09V35.8088H119.488V29.4103Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M125.887 29.4103H119.488V35.8088H125.887V29.4103Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M138.683 29.4103H132.285V35.8088H138.683V29.4103Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M10.7153 35.8088H4.31689V42.2072H10.7153V35.8088Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 35.8088H42.7073V42.2072H49.1058V35.8088Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M68.301 35.8088H61.9026V42.2072H68.301V35.8088Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M87.4962 35.8088H81.0978V42.2072H87.4962V35.8088Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M100.293 35.8088H93.8946V42.2072H100.293V35.8088Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M138.683 35.8088H132.285V42.2072H138.683V35.8088Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M10.7153 42.2072H4.31689V48.6056H10.7153V42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M17.1137 42.2072H10.7153V48.6056H17.1137V42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M23.5121 42.2072H17.1137V48.6056H23.5121V42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M29.9105 42.2072H23.5121V48.6056H29.9105V42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M36.3089 42.2072H29.9105V48.6056H36.3089V42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M42.7073 42.2072H36.3089V48.6056H42.7073V42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 42.2072H42.7073V48.6056H49.1058V42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M61.9026 42.2072H55.5042V48.6056H61.9026L61.9026 42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M74.6994 42.2072H68.301L68.301 48.6056H74.6994V42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M87.4962 42.2072H81.0978V48.6056H87.4962V42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M100.293 42.2072H93.8946V48.6056H100.293V42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M106.691 42.2072H100.293V48.6056H106.691V42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M113.09 42.2072H106.691V48.6056H113.09V42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M119.488 42.2072H113.09V48.6056H119.488V42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M125.887 42.2072H119.488V48.6056H125.887V42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M132.285 42.2072H125.887V48.6056H132.285V42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M138.683 42.2072H132.285V48.6056H138.683V42.2072Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M74.6994 48.6056H68.301V55.004H74.6994V48.6056Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M81.0978 48.6056H74.6994V55.004H81.0978V48.6056Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M87.4962 48.6056H81.0978V55.004H87.4962V48.6056Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M17.1137 55.004H10.7153V61.4024H17.1137V55.004Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M23.5121 55.004H17.1137V61.4024H23.5121V55.004Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M29.9105 55.004H23.5121V61.4024H29.9105V55.004Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 55.004H42.7073V61.4024H49.1058V55.004Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M55.5042 55.004H49.1058V61.4024H55.5042V55.004Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M61.9026 55.004H55.5042V61.4024H61.9026V55.004Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M81.0978 55.004H74.6994L74.6994 61.4024H81.0978V55.004Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M87.4962 55.004H81.0978V61.4024H87.4962V55.004Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M93.8946 55.004L87.4962 55.004V61.4024H93.8946V55.004Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M138.683 55.004H132.285V61.4024H138.683V55.004Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M23.5121 61.4024H17.1137V67.8008H23.5121V61.4024Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M29.9105 61.4024H23.5121V67.8008H29.9105V61.4024Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M61.9026 61.4024H55.5042L55.5042 67.8008H61.9026V61.4024Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M74.6994 61.4024L68.301 61.4024V67.8008H74.6994L74.6994 61.4024Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M87.4962 61.4024H81.0978V67.8008H87.4962V61.4024Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M113.09 61.4024H106.691V67.8008H113.09V61.4024Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M119.488 61.4024H113.09V67.8008H119.488V61.4024Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M125.887 61.4024H119.488V67.8008H125.887V61.4024Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M10.7153 67.8008H4.31689V74.1992H10.7153V67.8008Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M17.1137 67.8008L10.7153 67.8008V74.1992H17.1137V67.8008Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M36.3089 67.8008L29.9105 67.8008V74.1992H36.3089V67.8008Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 67.8008H42.7073V74.1992H49.1058V67.8008Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M61.9026 67.8008H55.5042V74.1992H61.9026V67.8008Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M68.301 67.8008H61.9026V74.1992H68.301L68.301 67.8008Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M81.0978 67.8008H74.6994L74.6994 74.1992H81.0978V67.8008Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M119.488 67.8008H113.09V74.1992H119.488V67.8008Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M132.285 67.8008L125.887 67.8008V74.1992H132.285V67.8008Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M10.7153 74.1992H4.31689V80.5976H10.7153V74.1992Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M17.1137 74.1992H10.7153V80.5976H17.1137V74.1992Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M23.5121 74.1992L17.1137 74.1992V80.5976H23.5121V74.1992Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M29.9105 74.1992L23.5121 74.1992V80.5976H29.9105V74.1992Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M36.3089 74.1992H29.9105V80.5976H36.3089V74.1992Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M55.5042 74.1992H49.1058V80.5976H55.5042L55.5042 74.1992Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M74.6994 74.1992H68.301L68.301 80.5976H74.6994L74.6994 74.1992Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M93.8946 74.1992H87.4962V80.5976H93.8946V74.1992Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M106.691 74.1992H100.293V80.5976H106.691V74.1992Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M138.683 74.1992L132.285 74.1992V80.5976H138.683V74.1992Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M10.7153 80.5976H4.31689V86.996H10.7153V80.5976Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M36.3089 80.5976H29.9105V86.996H36.3089V80.5976Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M42.7073 80.5976H36.3089V86.996H42.7073V80.5976Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 80.5976H42.7073V86.996H49.1058V80.5976Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M55.5042 80.5976H49.1058V86.996H55.5042V80.5976Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M61.9026 80.5976H55.5042V86.996H61.9026V80.5976Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M68.301 80.5976H61.9026V86.996H68.301L68.301 80.5976Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M93.8946 80.5976H87.4962V86.996H93.8946V80.5976Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M100.293 80.5976H93.8946V86.996H100.293V80.5976Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M106.691 80.5976H100.293V86.996H106.691V80.5976Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path d=\"M113.09 80.5976H106.691V86.996H113.09V80.5976Z\" fill=\"#FFFCF5\" />\r\n      <path\r\n        d=\"M119.488 80.5976H113.09V86.996H119.488V80.5976Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M61.9026 86.996H55.5042L55.5042 93.3944H61.9026V86.996Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M74.6994 86.996H68.301L68.301 93.3944H74.6994V86.996Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M93.8946 86.996H87.4962V93.3944H93.8946V86.996Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M100.293 86.996H93.8946V93.3944H100.293V86.996Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path d=\"M113.09 86.996H106.691V93.3944H113.09V86.996Z\" fill=\"#FFFCF5\" />\r\n      <path\r\n        d=\"M125.887 86.996H119.488V93.3944H125.887V86.996Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M10.7153 93.3944H4.31689V99.7928H10.7153V93.3944Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M17.1137 93.3944H10.7153V99.7928H17.1137V93.3944Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M23.5121 93.3944H17.1137V99.7928H23.5121V93.3944Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M29.9105 93.3944H23.5121V99.7928H29.9105V93.3944Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M36.3089 93.3944H29.9105V99.7928H36.3089V93.3944Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M42.7073 93.3944H36.3089V99.7928H42.7073V93.3944Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 93.3944H42.7073V99.7928H49.1058V93.3944Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M61.9026 93.3944H55.5042V99.7928H61.9026V93.3944Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M100.293 93.3944H93.8946V99.7928H100.293V93.3944Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M106.691 93.3944H100.293V99.7928H106.691V93.3944Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M113.09 93.3944H106.691V99.7928H113.09V93.3944Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M119.488 93.3944H113.09V99.7928H119.488V93.3944Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M125.887 93.3944H119.488V99.7928H125.887V93.3944Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M10.7153 99.7928H4.31689V106.191H10.7153V99.7928Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 99.7928H42.7073V106.191H49.1058V99.7928Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M68.301 99.7928H61.9026L61.9026 106.191H68.301V99.7928Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M74.6994 99.7928H68.301V106.191H74.6994V99.7928Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M93.8946 99.7928H87.4962V106.191H93.8946V99.7928Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M100.293 99.7928H93.8946V106.191H100.293V99.7928Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M138.683 99.7928H132.285V106.191H138.683V99.7928Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M10.7153 106.191H4.31689V112.59H10.7153V106.191Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M23.5121 106.191H17.1137V112.59H23.5121V106.191Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M29.9105 106.191H23.5121V112.59H29.9105V106.191Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M36.3089 106.191H29.9105V112.59H36.3089V106.191Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 106.191H42.7073V112.59H49.1058V106.191Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M87.4962 106.191H81.0978V112.59H87.4962V106.191Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M93.8946 106.191H87.4962V112.59H93.8946V106.191Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M106.691 106.191H100.293V112.59H106.691V106.191Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M119.488 106.191H113.09V112.59H119.488V106.191Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M125.887 106.191H119.488V112.59H125.887V106.191Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M132.285 106.191H125.887V112.59H132.285V106.191Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M10.7153 112.59H4.31689V118.988H10.7153V112.59Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M23.5121 112.59H17.1137V118.988H23.5121V112.59Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M29.9105 112.59H23.5121V118.988H29.9105V112.59Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M36.3089 112.59H29.9105V118.988H36.3089V112.59Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 112.59H42.7073V118.988H49.1058V112.59Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M61.9026 112.59H55.5042V118.988H61.9026V112.59Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M106.691 112.59H100.293V118.988H106.691V112.59Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M132.285 112.59H125.887V118.988H132.285V112.59Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M10.7153 118.988H4.31689V125.386H10.7153V118.988Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M23.5121 118.988H17.1137V125.386H23.5121V118.988Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M29.9105 118.988H23.5121V125.386H29.9105V118.988Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M36.3089 118.988H29.9105V125.386H36.3089V118.988Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 118.988H42.7073V125.386H49.1058V118.988Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M61.9026 118.988H55.5042V125.386H61.9026V118.988Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M68.301 118.988H61.9026V125.386H68.301V118.988Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M81.0978 118.988H74.6994V125.386H81.0978V118.988Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M93.8946 118.988H87.4962V125.386H93.8946V118.988Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M106.691 118.988H100.293V125.386H106.691V118.988Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M119.488 118.988H113.09V125.386H119.488V118.988Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M132.285 118.988H125.887V125.386H132.285V118.988Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M10.7153 125.386H4.31689V131.785H10.7153V125.386Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 125.386H42.7073V131.785H49.1058V125.386Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M61.9026 125.386H55.5042V131.785H61.9026V125.386Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M68.301 125.386H61.9026V131.785H68.301V125.386Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M74.6994 125.386H68.301V131.785H74.6994L74.6994 125.386Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M100.293 125.386H93.8946V131.785H100.293V125.386Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M125.887 125.386H119.488V131.785H125.887V125.386Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M138.683 125.386H132.285V131.785H138.683V125.386Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M10.7153 131.785H4.31689V138.183H10.7153V131.785Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M17.1137 131.785H10.7153V138.183H17.1137V131.785Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M23.5121 131.785H17.1137V138.183H23.5121V131.785Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M29.9105 131.785H23.5121V138.183H29.9105V131.785Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M36.3089 131.785H29.9105V138.183H36.3089V131.785Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M42.7073 131.785H36.3089V138.183H42.7073V131.785Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M49.1058 131.785H42.7073V138.183H49.1058V131.785Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M68.301 131.785H61.9026L61.9026 138.183H68.301V131.785Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M81.0978 131.785H74.6994L74.6994 138.183H81.0978V131.785Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M87.4962 131.785H81.0978V138.183H87.4962V131.785Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M113.09 131.785H106.691V138.183H113.09V131.785Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n      <path\r\n        d=\"M125.887 131.785H119.488V138.183H125.887V131.785Z\"\r\n        fill=\"#FFFCF5\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default QrCode;\r\n","function PoissonGrand() {\r\n  return (\r\n    <svg\r\n      width=\"252\"\r\n      height=\"242\"\r\n      viewBox=\"0 0 252 242\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"poisson-grand\"\r\n    >\r\n      <path\r\n        d=\"M17.7316 51.7223C22.4412 48.4003 28.0728 46.1794 34.8765 44.5997C41.829 42.9854 49.0607 43.11 56.117 44.184C71.4244 46.5139 83.1482 49.5058 94.1097 54.911C98.4487 39.5964 120.471 42.1849 132.371 49.6212C136.316 52.0864 139.33 56.2963 138.379 60.85C137.592 64.6175 133.783 67.3705 129.949 67.7148C123.247 68.3167 116.984 65.2895 110.274 65.0031C118.968 71.5773 128.071 80.2408 139.013 91.8816C151.453 106.631 166.067 135.318 174.808 145.096C183.346 145.382 193.451 151.519 189.745 158.782C191.735 160.364 193.618 161.736 195.421 162.914C199.396 151.839 203.221 148.27 211.533 144.367C220.405 141.6 226.256 140.841 232.088 143.228C238.125 145.697 243.9 151.766 242.283 158.084C240.983 163.16 235.581 165.93 230.364 166.415C230.051 166.444 229.725 166.474 229.387 166.504C233.048 168.145 235.717 169.558 238.307 171.345C242.869 174.491 248.826 179.744 246.845 184.918C245.426 188.623 241.761 190.285 237.921 191.28C220.381 195.825 203.675 184.022 197.079 173.67C192.669 174.249 188.072 174.397 183.355 174.12C183.191 174.585 183.031 175.009 182.87 175.4C181.184 179.495 176.055 180.599 171.79 179.405C166.549 177.936 162.168 174.281 155.548 167.946C143.361 163.306 131.235 156.138 120.198 146.534C108.357 136.23 97.5663 129.993 84.0782 125.446C88.4986 131.02 96.9442 137.161 99.4654 146.23C99.8788 147.717 100.052 149.293 99.7342 150.803C99.4829 151.999 99.0132 152.912 98.2923 153.644C95.1143 156.873 89.7271 156.06 85.3786 154.788C76.7389 152.262 70.8705 148.179 62.6633 138.491C57.0604 129.94 55.992 125.629 60.2321 119.371C57.6409 118.857 54.9456 118.354 52.1337 117.853C31.6286 111.422 21.1573 104.646 13.0934 90.388C5.90381 77.6764 5.79791 60.1401 17.7316 51.7223Z\"\r\n        fill=\"#FFFAFA\"\r\n      />\r\n      <path\r\n        d=\"M34.8765 44.5997L34.5372 43.1386L34.8765 44.5997ZM17.7316 51.7223L16.867 50.4965L16.867 50.4965L17.7316 51.7223ZM13.0934 90.388L14.399 89.6495L13.0934 90.388ZM52.1337 117.853L51.6848 119.284C51.7457 119.303 51.8077 119.318 51.8705 119.33L52.1337 117.853ZM222 169.266C222.807 169.078 223.308 168.271 223.12 167.464C222.931 166.657 222.125 166.156 221.318 166.345L222 169.266ZM213.873 168.888L213.835 167.388L213.835 167.388L213.873 168.888ZM211.533 144.367L211.086 142.935C211.021 142.955 210.957 142.98 210.895 143.009L211.533 144.367ZM232.088 143.228L231.52 144.616L231.52 144.616L232.088 143.228ZM230.364 166.415L230.225 164.922L230.225 164.922L230.364 166.415ZM229.387 166.504L229.253 165.01C228.573 165.071 228.02 165.583 227.907 166.256C227.794 166.929 228.15 167.594 228.773 167.873L229.387 166.504ZM238.307 171.345L237.456 172.579L237.456 172.579L238.307 171.345ZM237.921 191.28L238.297 192.732L238.297 192.732L237.921 191.28ZM207.253 171.451L207.701 172.883L207.701 172.883L207.253 171.451ZM201.86 172.856L202.169 174.323L202.169 174.323L201.86 172.856ZM198.499 164.781L199.229 163.471L199.229 163.471L198.499 164.781ZM203.39 167.081L202.858 168.484L202.858 168.484L203.39 167.081ZM120.198 146.534L121.183 145.403L120.198 146.534ZM171.79 179.405L172.195 177.96L172.195 177.96L171.79 179.405ZM183.355 174.12L183.443 172.623L183.443 172.623L183.355 174.12ZM182.87 175.4L181.483 174.828L181.483 174.828L182.87 175.4ZM175.881 146.228L174.827 147.296L174.827 147.296L175.881 146.228ZM139.013 91.8816L140.16 90.9145C140.142 90.894 140.124 90.8739 140.106 90.8543L139.013 91.8816ZM189.745 158.782L188.812 159.957L189.745 158.782ZM56.117 44.184L56.3427 42.7011L56.3427 42.7011L56.117 44.184ZM132.371 49.6212L133.166 48.3491L133.166 48.3491L132.371 49.6212ZM129.949 67.7148L129.815 66.2208L129.949 67.7148ZM60.2321 119.371L60.5236 117.899L60.2321 119.371ZM62.6633 138.491L61.4086 139.313C61.4423 139.365 61.4791 139.414 61.5188 139.461L62.6633 138.491ZM85.3786 154.788L84.9576 156.228L84.9576 156.228L85.3786 154.788ZM98.2923 153.644L99.3614 154.696L98.2923 153.644ZM99.7342 150.803L98.2663 150.495L98.2662 150.495L99.7342 150.803ZM84.0782 125.446L84.5574 124.025L84.5574 124.025L84.0782 125.446ZM99.4654 146.23L100.911 145.828L99.4654 146.23ZM104.574 60.9538L103.745 62.2036L104.574 60.9538ZM101.328 58.8868L102.109 57.6062L102.109 57.6062L101.328 58.8868ZM99.4984 57.7986L98.7463 59.0964L98.7463 59.0965L99.4984 57.7986ZM95.8069 55.7703L96.4986 54.4394L96.4986 54.4394L95.8069 55.7703ZM73.0901 122.237L72.7212 123.691L73.0901 122.237ZM68.9835 121.241L68.6446 122.702L68.9835 121.241ZM65.5252 120.466L65.8429 119L65.8429 119L65.5252 120.466ZM138.379 60.85L139.847 61.1568L138.379 60.85ZM242.283 158.084L243.736 158.456L243.736 158.456L242.283 158.084ZM246.845 184.918L248.245 185.455L248.245 185.455L246.845 184.918ZM34.5372 43.1386C27.6135 44.7462 21.7837 47.0284 16.867 50.4965L18.5963 52.948C23.0987 49.7721 28.5322 47.6127 35.2157 46.0608L34.5372 43.1386ZM11.7877 91.1264C15.917 98.4273 20.6974 103.865 27.0949 108.289C33.464 112.694 41.3724 116.05 51.6848 119.284L52.5826 116.422C42.3899 113.225 34.8101 109.977 28.8013 105.822C22.8209 101.686 18.3337 96.6062 14.399 89.6495L11.7877 91.1264ZM221.318 166.345C218.662 166.965 216.206 167.328 213.835 167.388L213.911 170.387C216.536 170.321 219.201 169.92 222 169.266L221.318 166.345ZM196.832 163.421C198.79 157.967 200.66 154.513 202.965 151.955C205.262 149.407 208.088 147.642 212.171 145.725L210.895 143.009C206.666 144.995 203.424 146.966 200.737 149.947C198.057 152.919 196.026 156.787 194.009 162.407L196.832 163.421ZM211.98 145.799C220.788 143.052 226.2 142.439 231.52 144.616L232.656 141.839C226.311 139.244 220.022 140.149 211.086 142.935L211.98 145.799ZM230.225 164.922C229.914 164.95 229.591 164.98 229.253 165.01L229.52 167.998C229.86 167.968 230.187 167.938 230.503 167.909L230.225 164.922ZM228.773 167.873C232.387 169.492 234.967 170.863 237.456 172.579L239.159 170.11C236.467 168.253 233.71 166.797 230 165.135L228.773 167.873ZM237.545 189.828C229.211 191.987 221.029 190.278 214.079 186.725C207.113 183.165 201.493 177.805 198.344 172.864L195.814 174.476C199.261 179.886 205.291 185.603 212.713 189.397C220.15 193.198 229.091 195.117 238.297 192.732L237.545 189.828ZM207.701 172.883C210.05 172.148 212.324 171.269 214.509 170.246L213.237 167.529C211.178 168.493 209.03 169.323 206.805 170.02L207.701 172.883ZM197.274 175.157C198.932 174.939 200.565 174.661 202.169 174.323L201.551 171.388C200.024 171.71 198.467 171.974 196.883 172.182L197.274 175.157ZM202.169 174.323C204.054 173.927 205.899 173.447 207.701 172.883L206.805 170.02C205.098 170.554 203.345 171.01 201.551 171.388L202.169 174.323ZM199.229 163.471C198.26 162.931 197.266 162.328 196.241 161.658L194.6 164.17C195.678 164.874 196.733 165.514 197.769 166.091L199.229 163.471ZM213.835 167.388C210.51 167.473 207.308 166.962 203.921 165.678L202.858 168.484C206.612 169.906 210.201 170.481 213.911 170.387L213.835 167.388ZM203.921 165.678C202.41 165.106 200.855 164.377 199.229 163.471L197.769 166.091C199.508 167.06 201.195 167.854 202.858 168.484L203.921 165.678ZM119.214 147.666C130.38 157.383 142.659 164.644 155.015 169.347L156.082 166.544C144.064 161.969 132.089 154.893 121.183 145.403L119.214 147.666ZM154.511 169.029C161.101 175.336 165.732 179.265 171.386 180.849L172.195 177.96C167.365 176.607 163.236 173.226 156.586 166.862L154.511 169.029ZM155.015 169.347C164.534 172.971 174.11 175.08 183.267 175.618L183.443 172.623C174.618 172.105 165.342 170.069 156.082 166.544L155.015 169.347ZM183.267 175.618C188.072 175.9 192.764 175.75 197.274 175.157L196.883 172.182C192.574 172.749 188.072 172.895 183.443 172.623L183.267 175.618ZM184.257 175.971C184.43 175.552 184.6 175.102 184.77 174.618L181.94 173.623C181.783 174.067 181.632 174.467 181.483 174.828L184.257 175.971ZM176.935 145.161C176.614 144.844 176.278 144.489 175.927 144.096L173.69 146.096C174.076 146.527 174.455 146.928 174.827 147.296L176.935 145.161ZM175.927 144.096C171.67 139.335 165.921 129.877 159.575 119.567C153.29 109.356 146.466 98.3921 140.16 90.9145L137.866 92.8487C144 100.121 150.703 110.875 157.02 121.139C163.277 131.304 169.205 141.079 173.69 146.096L175.927 144.096ZM196.241 161.658C194.484 160.51 192.639 159.166 190.679 157.608L188.812 159.957C190.831 161.562 192.752 162.962 194.6 164.17L196.241 161.658ZM190.679 157.608C186.649 154.405 182.15 150.309 176.935 145.161L174.827 147.296C180.083 152.484 184.666 156.661 188.812 159.957L190.679 157.608ZM174.758 146.595C178.741 146.728 183.084 148.24 185.937 150.499C187.356 151.622 188.322 152.862 188.76 154.115C189.182 155.322 189.153 156.643 188.409 158.101L191.082 159.464C192.191 157.29 192.289 155.12 191.592 153.125C190.91 151.176 189.51 149.501 187.799 148.147C184.392 145.449 179.414 143.749 174.859 143.597L174.758 146.595ZM94.7731 53.5656C83.6168 48.0644 71.7234 45.0422 56.3427 42.7011L55.8912 45.6669C71.1254 47.9857 82.6796 50.9472 93.4463 56.2563L94.7731 53.5656ZM95.5529 55.3198C97.4784 48.5237 103.293 45.5547 110.472 45.233C117.679 44.9101 125.862 47.3225 131.576 50.8933L133.166 48.3491C126.98 44.4836 118.202 41.8836 110.338 42.236C102.446 42.5896 95.08 45.9836 92.6665 54.5021L95.5529 55.3198ZM140.106 90.8543C129.14 79.1886 119.971 70.4552 111.179 63.8067L109.37 66.1996C117.965 72.6995 127.001 81.293 137.92 92.909L140.106 90.8543ZM129.815 66.2208C126.715 66.4992 123.672 65.9428 120.439 65.2275C117.268 64.526 113.86 63.6548 110.338 63.5045L110.21 66.5018C113.399 66.6379 116.477 67.4234 119.791 68.1566C123.042 68.876 126.482 69.5322 130.084 69.2087L129.815 66.2208ZM51.8705 119.33C54.6748 119.829 57.3605 120.331 59.9406 120.842L60.5236 117.899C57.9214 117.384 55.2165 116.879 52.3969 116.376L51.8705 119.33ZM58.9902 118.529C56.7327 121.862 55.7633 124.88 56.273 128.293C56.7632 131.575 58.6024 135.031 61.4086 139.313L63.9179 137.669C61.1213 133.401 59.6248 130.426 59.2401 127.85C58.875 125.405 59.4913 123.138 61.4739 120.212L58.9902 118.529ZM61.5188 139.461C69.8535 149.299 75.9556 153.596 84.9576 156.228L85.7996 153.349C77.5222 150.928 71.8875 147.059 63.8078 137.522L61.5188 139.461ZM99.3614 154.696C100.314 153.729 100.901 152.544 101.202 151.112L98.2662 150.495C98.0646 151.455 97.7129 152.094 97.2233 152.592L99.3614 154.696ZM83.599 126.867C96.8883 131.347 107.509 137.481 119.214 147.666L121.183 145.403C109.204 134.979 98.2442 128.639 84.5574 124.025L83.599 126.867ZM100.911 145.828C99.5594 140.968 96.6412 136.961 93.6072 133.533C92.0897 131.819 90.5108 130.215 89.0707 128.727C87.6147 127.222 86.3067 125.842 85.2535 124.514L82.9029 126.378C84.0599 127.837 85.4653 129.315 86.9148 130.813C88.3803 132.327 89.8992 133.87 91.3608 135.522C94.2851 138.825 96.8502 142.423 98.0202 146.632L100.911 145.828ZM111.179 63.8067C109.241 62.3414 107.321 60.9769 105.404 59.7041L103.745 62.2036C105.608 63.4402 107.478 64.7689 109.37 66.1996L111.179 63.8067ZM105.404 59.7041C104.306 58.9752 103.209 58.2765 102.109 57.6062L100.547 60.1675C101.613 60.8173 102.678 61.4954 103.745 62.2036L105.404 59.7041ZM102.109 57.6062C101.491 57.2288 100.871 56.8605 100.251 56.5008L98.7463 59.0965C99.3473 59.4447 99.9475 59.8016 100.547 60.1675L102.109 57.6062ZM100.251 56.5008C99.0056 55.7793 97.7563 55.093 96.4986 54.4394L95.1152 57.1013C96.3316 57.7335 97.5406 58.3977 98.7463 59.0964L100.251 56.5008ZM96.4986 54.4394C95.9253 54.1414 95.3502 53.8502 94.7731 53.5656L93.4463 56.2563C94.0044 56.5315 94.5606 56.8131 95.1152 57.1013L96.4986 54.4394ZM72.7212 123.691C76.5733 124.668 80.1774 125.714 83.599 126.867L84.5574 124.025C81.0517 122.843 77.3728 121.776 73.459 120.783L72.7212 123.691ZM68.6446 122.702C70.0347 123.025 71.3926 123.354 72.7212 123.691L73.459 120.783C72.109 120.44 70.731 120.107 69.3224 119.78L68.6446 122.702ZM65.2075 121.932C66.3751 122.185 67.5203 122.442 68.6446 122.702L69.3224 119.78C68.183 119.516 67.0236 119.256 65.8429 119L65.2075 121.932ZM59.9406 120.842C60.6224 120.977 61.2967 121.113 61.9639 121.249L62.5654 118.31C61.8917 118.172 61.2112 118.036 60.5236 117.899L59.9406 120.842ZM61.9639 121.249C63.0643 121.475 64.1451 121.702 65.2075 121.932L65.8429 119C64.7685 118.767 63.6763 118.538 62.5654 118.31L61.9639 121.249ZM84.9576 156.228C87.1884 156.88 89.7914 157.449 92.3015 157.404C94.8222 157.358 97.4024 156.687 99.3614 154.696L97.2233 152.592C96.0042 153.831 94.3018 154.367 92.2473 154.404C90.1822 154.441 87.9174 153.968 85.7996 153.349L84.9576 156.228ZM136.91 60.5432C136.288 63.5219 133.149 65.9214 129.815 66.2208L130.084 69.2087C134.417 68.8196 138.895 65.7131 139.847 61.1568L136.91 60.5432ZM240.83 157.712C239.762 161.883 235.175 164.462 230.225 164.922L230.503 167.909C235.987 167.399 242.205 164.437 243.736 158.456L240.83 157.712ZM101.202 151.112C101.584 149.293 101.365 147.462 100.911 145.828L98.0202 146.632C98.3929 147.973 98.5188 149.293 98.2663 150.495L101.202 151.112ZM171.386 180.849C173.764 181.515 176.412 181.553 178.748 180.816C181.104 180.074 183.21 178.513 184.257 175.971L181.483 174.828C180.844 176.381 179.543 177.42 177.846 177.955C176.13 178.496 174.081 178.489 172.195 177.96L171.386 180.849ZM231.52 144.616C234.319 145.761 237.046 147.742 238.863 150.123C240.676 152.498 241.491 155.13 240.83 157.712L243.736 158.456C244.692 154.721 243.428 151.159 241.248 148.303C239.072 145.452 235.893 143.163 232.656 141.839L231.52 144.616ZM131.576 50.8933C135.271 53.2019 137.677 56.8771 136.91 60.5432L139.847 61.1568C140.984 55.7155 137.362 50.9709 133.166 48.3491L131.576 50.8933ZM16.867 50.4965C10.4614 55.0149 7.34036 61.9558 6.74612 69.3244C6.15335 76.6749 8.05895 84.5337 11.7877 91.1264L14.399 89.6495C10.9382 83.5307 9.1961 76.2655 9.73642 69.5655C10.2753 62.8836 13.0681 56.8474 18.5963 52.948L16.867 50.4965ZM237.456 172.579C239.691 174.122 242.171 176.116 243.841 178.286C245.527 180.476 246.157 182.519 245.444 184.382L248.245 185.455C249.513 182.143 248.155 178.972 246.218 176.456C244.265 173.919 241.485 171.714 239.159 170.11L237.456 172.579ZM245.444 184.382C244.308 187.348 241.322 188.849 237.545 189.828L238.297 192.732C242.2 191.72 246.544 189.898 248.245 185.455L245.444 184.382ZM35.2157 46.0608C41.931 44.5016 48.9618 44.6122 55.8912 45.6669L56.3427 42.7011C49.1597 41.6077 41.727 41.4692 34.5372 43.1386L35.2157 46.0608Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M211.533 144.367C203.221 148.27 199.396 151.839 195.42 162.914C196.472 163.601 197.496 164.222 198.499 164.781C200.181 165.718 201.802 166.48 203.389 167.081C206.96 168.434 210.355 168.977 213.873 168.888C211.751 169.881 209.54 170.735 207.252 171.451C205.498 172.001 203.699 172.468 201.86 172.856C200.294 173.185 198.699 173.457 197.078 173.67C203.675 184.022 220.38 195.825 237.921 191.28C241.761 190.285 245.426 188.623 246.844 184.918C248.825 179.744 242.868 174.491 238.307 171.345C235.717 169.558 233.048 168.145 229.386 166.504C229.725 166.474 230.05 166.444 230.364 166.415C235.581 165.93 240.983 163.16 242.282 158.084C243.9 151.766 238.124 145.697 232.088 143.228C226.255 140.841 220.405 141.6 211.533 144.367Z\"\r\n        fill=\"#F3EBD6\"\r\n        stroke=\"#101010\"\r\n        stroke-width=\"3\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n      <path\r\n        d=\"M171.791 179.405C166.549 177.936 162.168 174.281 155.549 167.946C164.938 171.52 174.364 173.592 183.355 174.12C183.192 174.585 183.031 175.009 182.871 175.4C181.184 179.494 176.055 180.599 171.791 179.405Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M174.809 145.096C175.177 145.508 175.535 145.886 175.881 146.228C181.117 151.397 185.658 155.533 189.746 158.782C193.452 151.519 183.346 145.382 174.809 145.096Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M171.791 179.405C166.549 177.936 162.168 174.281 155.549 167.946C164.938 171.52 174.364 173.592 183.355 174.12C183.192 174.585 183.031 175.009 182.871 175.4C181.184 179.494 176.055 180.599 171.791 179.405Z\"\r\n        stroke=\"#101010\"\r\n        stroke-width=\"3\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n      <path\r\n        d=\"M174.809 145.096C175.177 145.508 175.535 145.886 175.881 146.228C181.117 151.397 185.658 155.533 189.746 158.782C193.452 151.519 183.346 145.382 174.809 145.096Z\"\r\n        stroke=\"#101010\"\r\n        stroke-width=\"3\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n      <path\r\n        d=\"M132.371 49.6212C120.47 42.1849 98.4485 39.5964 94.1095 54.911C94.6772 55.1909 95.2428 55.4772 95.8067 55.7703C97.0438 56.4133 98.273 57.0885 99.4983 57.7986C100.109 58.1526 100.719 58.5152 101.328 58.8868C102.411 59.5469 103.492 60.2353 104.574 60.9538C106.464 62.2086 108.359 63.5552 110.274 65.0031C116.984 65.2895 123.247 68.3167 129.949 67.7148C133.783 67.3705 137.591 64.6175 138.379 60.85C139.33 56.2963 136.316 52.0864 132.371 49.6212Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M94.1095 54.911L92.6663 54.5021C92.4691 55.1984 92.7971 55.9362 93.4461 56.2563L94.1095 54.911ZM132.371 49.6212L131.576 50.8933L132.371 49.6212ZM129.949 67.7148L129.815 66.2208L129.949 67.7148ZM110.274 65.0031L109.369 66.1996C109.612 66.3834 109.906 66.4888 110.21 66.5018L110.274 65.0031ZM104.574 60.9538L105.404 59.7041L104.574 60.9538ZM101.328 58.8868L102.109 57.6062L102.109 57.6062L101.328 58.8868ZM99.4983 57.7986L100.25 56.5008L100.25 56.5008L99.4983 57.7986ZM95.8067 55.7703L95.115 57.1013L95.115 57.1013L95.8067 55.7703ZM138.379 60.85L136.91 60.5432L138.379 60.85ZM95.5527 55.3198C97.4783 48.5237 103.292 45.5547 110.472 45.233C117.679 44.9101 125.862 47.3225 131.576 50.8933L133.166 48.3491C126.98 44.4836 118.201 41.8836 110.338 42.236C102.446 42.5896 95.0798 45.9836 92.6663 54.5021L95.5527 55.3198ZM129.815 66.2208C126.714 66.4992 123.671 65.9428 120.439 65.2275C117.268 64.526 113.86 63.6548 110.338 63.5045L110.21 66.5018C113.399 66.6379 116.476 67.4234 119.79 68.1566C123.042 68.876 126.482 69.5322 130.083 69.2087L129.815 66.2208ZM111.179 63.8067C109.241 62.3414 107.321 60.9769 105.404 59.7041L103.745 62.2036C105.608 63.4403 107.478 64.7689 109.369 66.1996L111.179 63.8067ZM105.404 59.7041C104.306 58.9752 103.208 58.2765 102.109 57.6062L100.547 60.1675C101.613 60.8173 102.678 61.4954 103.745 62.2036L105.404 59.7041ZM102.109 57.6062C101.49 57.2288 100.871 56.8605 100.25 56.5008L98.7461 59.0965C99.3471 59.4447 99.9473 59.8016 100.547 60.1675L102.109 57.6062ZM100.25 56.5008C99.0054 55.7793 97.7562 55.093 96.4985 54.4394L95.115 57.1013C96.3315 57.7335 97.5405 58.3977 98.7461 59.0965L100.25 56.5008ZM96.4985 54.4394C95.9251 54.1414 95.3501 53.8502 94.7729 53.5656L93.4461 56.2563C94.0043 56.5315 94.5604 56.8131 95.115 57.1013L96.4985 54.4394ZM136.91 60.5432C136.288 63.5219 133.149 65.9214 129.815 66.2208L130.083 69.2087C134.417 68.8196 138.895 65.7132 139.847 61.1568L136.91 60.5432ZM131.576 50.8933C135.271 53.2019 137.676 56.8771 136.91 60.5432L139.847 61.1568C140.984 55.7155 137.362 50.9709 133.166 48.3491L131.576 50.8933Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M62.1006 138.405C56.4977 129.854 55.4292 125.543 59.6694 119.284C60.3541 119.42 61.0315 119.556 61.7019 119.693C62.8076 119.92 63.8941 120.148 64.9625 120.38C66.1367 120.634 67.289 120.892 68.4208 121.155C69.8201 121.479 71.1881 121.811 72.5274 122.15C76.4103 123.136 80.0518 124.192 83.5155 125.359C87.9359 130.934 96.3815 137.075 98.9027 146.144C99.3161 147.631 99.4889 149.206 99.1715 150.717C98.9202 151.913 98.4505 152.825 97.7296 153.558C94.5515 156.787 89.1644 155.973 84.8159 154.702C76.1762 152.175 70.3078 148.093 62.1006 138.405Z\"\r\n        fill=\"#F3EBD6\"\r\n      />\r\n      <path\r\n        d=\"M59.6694 119.284L59.9608 117.813C59.3696 117.696 58.7656 117.944 58.4275 118.443L59.6694 119.284ZM62.1006 138.405L60.8459 139.227C60.8796 139.278 60.9164 139.327 60.9561 139.374L62.1006 138.405ZM84.8159 154.702L84.3949 156.142L84.8159 154.702ZM97.7296 153.558L98.7986 154.61L98.7986 154.61L97.7296 153.558ZM99.1715 150.717L97.7035 150.409L97.7035 150.409L99.1715 150.717ZM98.9027 146.144L100.348 145.742L98.9027 146.144ZM83.5155 125.359L84.6908 124.427C84.5109 124.201 84.2691 124.031 83.9947 123.938L83.5155 125.359ZM72.5274 122.15L72.1585 123.604L72.1585 123.604L72.5274 122.15ZM68.4208 121.155L68.7596 119.694L68.7596 119.694L68.4208 121.155ZM64.9625 120.38L64.6448 121.846L64.6448 121.846L64.9625 120.38ZM61.7019 119.693L62.0026 118.224L62.0026 118.224L61.7019 119.693ZM58.4275 118.443C56.17 121.775 55.2005 124.794 55.7103 128.207C56.2005 131.489 58.0396 134.944 60.8459 139.227L63.3552 137.583C60.5586 133.315 59.0621 130.339 58.6774 127.763C58.3122 125.319 58.9286 123.052 60.9112 120.126L58.4275 118.443ZM60.9561 139.374C69.2907 149.213 75.3929 153.509 84.3949 156.142L85.2369 153.262C76.9595 150.842 71.3248 146.973 63.2451 137.435L60.9561 139.374ZM98.7986 154.61C99.7508 153.642 100.339 152.457 100.639 151.025L97.7035 150.409C97.5019 151.368 97.1502 152.008 96.6605 152.505L98.7986 154.61ZM100.348 145.742C98.9967 140.882 96.0784 136.874 93.0445 133.447C91.527 131.732 89.9481 130.128 88.508 128.64C87.0519 127.136 85.744 125.756 84.6908 124.427L82.3402 126.291C83.4972 127.751 84.9026 129.228 86.3521 130.726C87.8176 132.241 89.3365 133.784 90.7981 135.435C93.7223 138.739 96.2875 142.337 97.4575 146.546L100.348 145.742ZM72.1585 123.604C76.0105 124.582 79.6147 125.627 83.0363 126.781L83.9947 123.938C80.489 122.756 76.81 121.689 72.8963 120.696L72.1585 123.604ZM68.0819 122.616C69.4719 122.938 70.8299 123.267 72.1585 123.604L72.8963 120.696C71.5463 120.354 70.1682 120.02 68.7596 119.694L68.0819 122.616ZM64.6448 121.846C65.8124 122.099 66.9576 122.355 68.0819 122.616L68.7596 119.694C67.6203 119.429 66.4609 119.17 65.2802 118.914L64.6448 121.846ZM59.3779 120.756C60.0596 120.891 60.734 121.026 61.4012 121.163L62.0026 118.224C61.329 118.086 60.6485 117.949 59.9608 117.813L59.3779 120.756ZM61.4012 121.163C62.5016 121.388 63.5824 121.616 64.6448 121.846L65.2802 118.914C64.2057 118.681 63.1136 118.451 62.0026 118.224L61.4012 121.163ZM100.639 151.025C101.022 149.206 100.802 147.376 100.348 145.742L97.4575 146.546C97.8302 147.886 97.9561 149.207 97.7035 150.409L100.639 151.025ZM84.3949 156.142C86.6256 156.794 89.2287 157.363 91.7388 157.317C94.2595 157.272 96.8397 156.6 98.7986 154.61L96.6605 152.505C95.4415 153.744 93.7391 154.281 91.6845 154.318C89.6195 154.355 87.3547 153.881 85.2369 153.262L84.3949 156.142Z\"\r\n        fill=\"black\"\r\n      />\r\n      <path\r\n        d=\"M125.299 59.9374C117.883 59.8896 113.429 59.9987 104.011 60.8674C102.929 60.1489 101.848 59.4605 100.765 58.8004C111.272 58.0161 116.616 58.3021 125.299 59.9374Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M123.087 51.6845C113.873 53.5491 108.61 54.8135 98.9355 57.7122C97.7102 57.0021 96.4811 56.3269 95.244 55.6839C107.74 51.6454 113.834 50.7729 123.087 51.6845Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M89.3142 143.804C79.672 132.361 75.3739 127.017 72.5272 122.15C71.1879 121.811 69.8199 121.479 68.4206 121.155C76.516 132.101 80.9686 137.135 89.3142 143.804Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M75.6017 142.863C71.7547 133.76 69.4566 128.804 64.9623 120.38C63.8939 120.148 62.8074 119.92 61.7017 119.693C66.6023 130.221 69.6257 135.351 75.6017 142.863Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M125.299 59.9374C117.883 59.8896 113.429 59.9987 104.011 60.8674C102.929 60.1489 101.848 59.4605 100.765 58.8004C111.272 58.0161 116.616 58.3021 125.299 59.9374Z\"\r\n        stroke=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M123.087 51.6845C113.873 53.5491 108.61 54.8135 98.9355 57.7122C97.7102 57.0021 96.4811 56.3269 95.244 55.6839C107.74 51.6454 113.834 50.7729 123.087 51.6845Z\"\r\n        stroke=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M89.3142 143.804C79.672 132.361 75.3739 127.017 72.5272 122.15C71.1879 121.811 69.8199 121.479 68.4206 121.155C76.516 132.101 80.9686 137.135 89.3142 143.804Z\"\r\n        stroke=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M75.6017 142.863C71.7547 133.76 69.4566 128.804 64.9623 120.38C63.8939 120.148 62.8074 119.92 61.7017 119.693C66.6023 130.221 69.6257 135.351 75.6017 142.863Z\"\r\n        stroke=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M223.553 180.791C217.023 177.746 211.087 174.664 206.69 171.365C204.936 171.914 203.137 172.382 201.298 172.769C208.623 177.416 215.795 180.613 223.069 182.358C224.184 182.626 224.593 181.276 223.553 180.791Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M217.707 154.527C210.199 156.936 204.378 159.756 197.937 164.695C199.619 165.632 201.24 166.393 202.827 166.995C206.568 162.978 213.141 160.028 218.491 155.951C219.316 155.322 218.695 154.21 217.707 154.527Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M223.553 180.791C217.023 177.746 211.087 174.664 206.69 171.365C204.936 171.914 203.137 172.382 201.298 172.769C208.623 177.416 215.795 180.613 223.069 182.358C224.184 182.626 224.593 181.276 223.553 180.791Z\"\r\n        stroke=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M217.707 154.527C210.199 156.936 204.378 159.756 197.937 164.695C199.619 165.632 201.24 166.393 202.827 166.995C206.568 162.978 213.141 160.028 218.491 155.951C219.316 155.322 218.695 154.21 217.707 154.527Z\"\r\n        stroke=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M142.393 152.313C138.486 151.697 134.686 154.07 135.419 157.987C131.613 156.699 117.354 144.43 108.306 137.177C108.459 134.353 108.843 132.363 109.739 130.872C111.932 127.222 117.431 126.146 121.059 128.377C124.391 130.427 126.329 134.607 128.421 137.337C129.261 138.435 130.926 137.843 132.153 137.206C132.37 137.093 132.601 136.992 132.841 136.899C134.185 136.375 135.707 136.467 137.027 137.051C137.627 137.317 138.142 137.564 138.605 137.81C141.582 139.391 145.033 141.417 147.754 139.428C148.057 139.206 148.37 138.952 148.7 138.66L154.064 141.453C160.205 137.448 163.68 137.805 169.904 140.286C175.508 146.774 178.899 150.127 185.213 155.797C184.999 156.297 184.794 156.75 184.592 157.171C182.847 160.804 179.226 163.263 175.235 163.824C169.436 164.64 164.791 162.773 158.603 157.562C156.489 155.781 153.666 154.76 151.258 156.117C149.821 156.926 147.841 157.188 146.765 155.938C146.607 155.755 146.455 155.566 146.306 155.368C145.269 153.991 144.096 152.581 142.393 152.313Z\"\r\n        fill=\"#D25B30\"\r\n      />\r\n      <path\r\n        d=\"M140.264 97.3105C141.002 97.1116 141.553 96.782 141.95 96.2418C139.623 92.351 128.035 80.5803 118.111 71.8627C115.075 78.2949 117.419 85.5303 122.952 88.2996C123.94 88.7938 125.071 88.4221 126.017 87.852C126.105 87.7987 126.196 87.7469 126.289 87.6961C127.575 86.9954 129.137 87.6846 129.863 88.9564C132.397 93.3914 134.255 95.6262 136.763 96.883C137.843 97.4244 139.098 97.6253 140.264 97.3105Z\"\r\n        fill=\"#D25B30\"\r\n      />\r\n      <path\r\n        d=\"M93.1394 119.316C95.2655 123.081 94.8096 125.541 91.3061 128.272C75.1453 121.064 49.1557 118.798 38.7876 113.116C36.4822 107.383 35.5438 103.767 36.3456 101.081C37.321 97.8127 41.2341 96.0835 44.5873 96.7057C46.6048 97.08 48.4173 98.1958 50.6321 99.9139C51.2648 100.405 52.2038 100.01 52.3941 99.2322C52.4492 99.0065 52.5106 98.7944 52.5783 98.5944C53.7681 95.0791 58.6283 94.7803 62.106 96.0759C65.4601 97.3255 67.9416 99.2514 70.4458 100.597C74.6429 102.853 79.8221 101.305 83.3607 98.114C85.374 96.2985 86.8853 94.1134 88.6052 90.9216L90.777 86.1093C91.362 83.2012 92.0662 81.412 94.1501 80.0423C96.0092 78.8204 98.4391 78.722 100.475 79.6188C103.005 80.733 104.306 82.441 105.636 85.589L108.073 101.858C105.983 104.988 103.589 106.502 100.034 106.816C96.5076 107.128 92.5339 105.745 89.5681 107.679C89.364 107.812 89.1862 107.96 89.0346 108.125C86.187 111.228 91.0683 115.649 93.1394 119.316Z\"\r\n        fill=\"#D25B30\"\r\n      />\r\n      <path\r\n        d=\"M86.3012 65.5108C92.1287 65.0246 95.0423 62.8494 98.592 57.8636C89.8257 50.9825 65.0275 44.5514 48.5148 43.2072C51.2824 53.6168 53.4352 59.5211 56.5256 62.1748C59.3231 64.5771 63.8529 62.2356 67.2312 60.7575C70.3342 59.3999 73.2688 60.4023 76.1344 62.208C77.3329 62.9632 78.3399 63.5675 79.2295 64.0595C81.3798 65.2489 83.8523 65.7151 86.3012 65.5108Z\"\r\n        fill=\"#D25B30\"\r\n      />\r\n      <path\r\n        d=\"M135.419 157.987L135.099 158.934C135.435 159.048 135.806 158.975 136.074 158.742C136.343 158.509 136.467 158.152 136.402 157.803L135.419 157.987ZM142.393 152.313L142.238 153.301L142.393 152.313ZM146.306 155.368L147.105 154.766L147.105 154.766L146.306 155.368ZM146.765 155.938L146.007 156.59L146.007 156.59L146.765 155.938ZM158.603 157.562L159.247 156.797L158.603 157.562ZM175.235 163.824L175.374 164.815L175.374 164.815L175.235 163.824ZM184.592 157.171L185.493 157.604L185.493 157.604L184.592 157.171ZM185.213 155.797L186.132 156.191C186.301 155.798 186.2 155.34 185.881 155.053L185.213 155.797ZM169.904 140.286L170.66 139.632C170.555 139.511 170.423 139.416 170.274 139.357L169.904 140.286ZM154.064 141.453L153.602 142.34C153.922 142.507 154.308 142.488 154.61 142.291L154.064 141.453ZM148.7 138.66L149.162 137.773C148.795 137.582 148.349 137.636 148.039 137.91L148.7 138.66ZM147.754 139.428L147.163 138.621L147.163 138.621L147.754 139.428ZM138.605 137.81L138.136 138.693L138.136 138.693L138.605 137.81ZM137.027 137.051L137.432 136.137L137.432 136.137L137.027 137.051ZM132.841 136.899L132.478 135.967L132.478 135.967L132.841 136.899ZM132.153 137.206L132.614 138.094L132.614 138.094L132.153 137.206ZM128.421 137.337L129.214 136.729L128.421 137.337ZM121.059 128.377L120.535 129.229L121.059 128.377ZM109.739 130.872L110.596 131.387L110.596 131.387L109.739 130.872ZM108.306 137.177L107.308 137.123C107.29 137.445 107.429 137.755 107.681 137.957L108.306 137.177ZM141.95 96.2418L142.755 96.834C142.994 96.5097 143.014 96.0741 142.808 95.7286L141.95 96.2418ZM140.264 97.3105L140.004 96.345L140.004 96.345L140.264 97.3105ZM136.763 96.883L137.211 95.989L137.211 95.989L136.763 96.883ZM129.863 88.9564L130.732 88.4605L130.732 88.4604L129.863 88.9564ZM126.289 87.6961L126.767 88.5743L126.767 88.5743L126.289 87.6961ZM126.017 87.852L126.533 88.7085L126.533 88.7085L126.017 87.852ZM122.952 88.2996L122.505 89.1938L122.505 89.1938L122.952 88.2996ZM118.111 71.8627L118.771 71.1114C118.535 70.9041 118.215 70.8197 117.908 70.8835C117.6 70.9473 117.341 71.1518 117.207 71.4358L118.111 71.8627ZM91.3061 128.272L90.8988 129.185C91.2363 129.335 91.6293 129.288 91.9208 129.06L91.3061 128.272ZM93.1394 119.316L94.0102 118.824L94.0102 118.824L93.1394 119.316ZM89.0346 108.125L89.7714 108.801L89.7714 108.801L89.0346 108.125ZM89.5681 107.679L90.1142 108.516L89.5681 107.679ZM100.034 106.816L99.9461 105.82L100.034 106.816ZM108.073 101.858L108.904 102.413C109.042 102.206 109.098 101.956 109.062 101.71L108.073 101.858ZM105.636 85.589L106.625 85.4409C106.613 85.358 106.59 85.2769 106.557 85.1997L105.636 85.589ZM100.475 79.6188L100.072 80.534L100.475 79.6188ZM94.1501 80.0423L93.6008 79.2067L94.1501 80.0423ZM90.777 86.1093L91.6885 86.5206C91.7195 86.4521 91.7426 86.3802 91.7574 86.3065L90.777 86.1093ZM88.6052 90.9216L89.4856 91.396C89.4967 91.3753 89.5071 91.3543 89.5167 91.333L88.6052 90.9216ZM83.3607 98.114L84.0304 98.8566L83.3607 98.114ZM70.4458 100.597L69.9724 101.478L69.9724 101.478L70.4458 100.597ZM62.106 96.0759L62.4551 95.1388L62.106 96.0759ZM52.5783 98.5944L51.631 98.2738L51.631 98.2738L52.5783 98.5944ZM52.3941 99.2322L53.3654 99.4697L53.3654 99.4697L52.3941 99.2322ZM50.6321 99.9139L51.245 99.1238L50.6321 99.9139ZM44.5873 96.7057L44.4049 97.6889L44.5873 96.7057ZM36.3456 101.081L35.3874 100.795L35.3874 100.795L36.3456 101.081ZM38.7876 113.116L37.8598 113.489C37.9461 113.703 38.1041 113.881 38.3069 113.993L38.7876 113.116ZM98.592 57.8636L99.4066 58.4436L99.96 57.6662L99.2094 57.077L98.592 57.8636ZM86.3012 65.5108L86.3843 66.5073L86.3012 65.5108ZM79.2295 64.0595L79.7135 63.1845L79.7135 63.1844L79.2295 64.0595ZM76.1344 62.208L76.6675 61.3619L76.6675 61.3619L76.1344 62.208ZM56.5256 62.1748L55.8741 62.9335L56.5256 62.1748ZM48.5148 43.2072L48.5959 42.2105L47.1845 42.0956L47.5484 43.4641L48.5148 43.2072ZM67.2312 60.7575L67.6321 61.6737L67.2312 60.7575ZM151.258 156.117L150.767 155.246L150.767 155.246L151.258 156.117ZM136.402 157.803C136.111 156.247 136.7 155.046 137.764 154.251C138.866 153.428 140.512 153.029 142.238 153.301L142.549 151.325C140.367 150.981 138.159 151.46 136.568 152.649C134.938 153.865 133.994 155.81 134.436 158.171L136.402 157.803ZM145.508 155.97C145.669 156.184 145.835 156.39 146.007 156.59L147.523 155.285C147.38 155.119 147.242 154.947 147.105 154.766L145.508 155.97ZM157.959 158.327C164.261 163.633 169.183 165.686 175.374 164.815L175.096 162.834C169.689 163.595 165.322 161.912 159.247 156.797L157.959 158.327ZM185.493 157.604C185.703 157.168 185.913 156.701 186.132 156.191L184.294 155.403C184.084 155.892 183.885 156.333 183.69 156.738L185.493 157.604ZM185.881 155.053C179.593 149.406 176.233 146.083 170.66 139.632L169.147 140.939C174.784 147.465 178.204 150.847 184.545 156.541L185.881 155.053ZM170.274 139.357C167.139 138.107 164.548 137.328 161.911 137.438C159.249 137.55 156.669 138.56 153.518 140.616L154.61 142.291C157.599 140.341 159.828 139.528 161.995 139.437C164.186 139.345 166.444 139.983 169.533 141.215L170.274 139.357ZM154.526 140.566L149.162 137.773L148.239 139.547L153.602 142.34L154.526 140.566ZM148.039 137.91C147.726 138.186 147.438 138.42 147.163 138.621L148.344 140.235C148.677 139.992 149.013 139.718 149.362 139.41L148.039 137.91ZM139.075 136.927C138.585 136.666 138.047 136.409 137.432 136.137L136.622 137.966C137.207 138.225 137.7 138.461 138.136 138.693L139.075 136.927ZM132.478 135.967C132.214 136.07 131.949 136.185 131.692 136.319L132.614 138.094C132.791 138.001 132.988 137.915 133.204 137.831L132.478 135.967ZM129.214 136.729C128.717 136.08 128.222 135.336 127.694 134.527C127.171 133.727 126.616 132.865 126.021 132.025C124.835 130.349 123.423 128.658 121.582 127.525L120.535 129.229C122.026 130.146 123.249 131.57 124.389 133.18C124.956 133.982 125.486 134.805 126.019 135.621C126.546 136.428 127.078 137.23 127.627 137.946L129.214 136.729ZM108.881 130.357C107.853 132.068 107.463 134.267 107.308 137.123L109.305 137.231C109.456 134.439 109.832 132.657 110.596 131.387L108.881 130.357ZM107.681 137.957C109.937 139.766 112.52 141.888 115.19 144.08C117.858 146.27 120.612 148.528 123.204 150.6C125.793 152.67 128.231 154.564 130.266 156.024C131.283 156.754 132.21 157.383 133.01 157.873C133.796 158.355 134.513 158.736 135.099 158.934L135.739 157.039C135.374 156.916 134.812 156.632 134.055 156.168C133.311 155.712 132.428 155.114 131.432 154.399C129.44 152.97 127.034 151.102 124.453 149.038C121.873 146.975 119.128 144.725 116.459 142.534C113.792 140.345 111.199 138.214 108.932 136.397L107.681 137.957ZM141.144 95.6496C140.914 95.9628 140.582 96.189 140.004 96.345L140.525 98.2759C141.421 98.0342 142.191 97.6012 142.755 96.834L141.144 95.6496ZM137.211 95.989C134.984 94.873 133.249 92.8669 130.732 88.4605L128.995 89.4524C131.544 93.9159 133.526 96.3793 136.315 97.777L137.211 95.989ZM125.811 86.8179C125.705 86.8754 125.602 86.9345 125.501 86.9956L126.533 88.7085C126.609 88.6629 126.686 88.6183 126.767 88.5743L125.811 86.8179ZM123.4 87.4053C118.415 84.9104 116.18 78.296 119.015 72.2895L117.207 71.4358C113.97 78.2938 116.423 86.1502 122.505 89.1938L123.4 87.4053ZM117.451 72.614C122.393 76.9553 127.753 82.0602 132.165 86.5622C134.371 88.8133 136.334 90.9079 137.887 92.6768C139.455 94.462 140.561 95.8677 141.091 96.755L142.808 95.7286C142.175 94.6705 140.96 93.1458 139.39 91.3573C137.806 89.5525 135.816 87.43 133.593 85.1624C129.149 80.627 123.753 75.4877 118.771 71.1114L117.451 72.614ZM91.9208 129.06C93.752 127.633 94.9596 126.148 95.3143 124.378C95.6693 122.608 95.1225 120.794 94.0102 118.824L92.2687 119.808C93.2824 121.603 93.5707 122.901 93.3534 123.985C93.1358 125.07 92.3637 126.18 90.6914 127.483L91.9208 129.06ZM89.7714 108.801C89.8605 108.704 89.9724 108.609 90.1142 108.516L89.022 106.841C88.7556 107.014 88.5119 107.216 88.2978 107.449L89.7714 108.801ZM100.122 107.812C102.026 107.644 103.67 107.148 105.13 106.243C106.586 105.339 107.803 104.063 108.904 102.413L107.241 101.303C106.253 102.783 105.228 103.828 104.075 104.543C102.927 105.256 101.597 105.674 99.9461 105.82L100.122 107.812ZM109.062 101.71L106.625 85.4409L104.647 85.7371L107.084 102.006L109.062 101.71ZM106.557 85.1997C105.876 83.5861 105.171 82.2676 104.27 81.1973C103.356 80.1107 102.27 79.3168 100.878 78.7037L100.072 80.534C101.209 81.035 102.039 81.6522 102.74 82.4852C103.455 83.3343 104.067 84.4439 104.715 85.9783L106.557 85.1997ZM93.6008 79.2067C91.1741 80.8016 90.397 82.9275 89.7967 85.9121L91.7574 86.3065C92.327 83.475 92.9582 82.0223 94.6993 80.878L93.6008 79.2067ZM89.8656 85.6979L87.6938 90.5103L89.5167 91.333L91.6885 86.5206L89.8656 85.6979ZM87.7249 90.4472C86.0297 93.5933 84.5827 95.6655 82.691 97.3713L84.0304 98.8566C86.1653 96.9315 87.741 94.6335 89.4856 91.396L87.7249 90.4472ZM70.9192 99.7165C69.6897 99.0557 68.5132 98.2796 67.1065 97.4414C65.7313 96.6221 64.2135 95.7939 62.4551 95.1388L61.7569 97.013C63.3526 97.6074 64.7526 98.367 66.0828 99.1596C67.3813 99.9333 68.6977 100.793 69.9724 101.478L70.9192 99.7165ZM51.631 98.2738C51.5533 98.5034 51.4841 98.7434 51.4227 98.9946L53.3654 99.4697C53.4144 99.2696 53.4678 99.0853 53.5255 98.915L51.631 98.2738ZM51.245 99.1238C49.0072 97.3879 47.0354 96.1428 44.7698 95.7224L44.4049 97.6889C46.1741 98.0172 47.8273 99.0038 50.0191 100.704L51.245 99.1238ZM35.3874 100.795C34.9197 102.362 34.9827 104.124 35.4239 106.167C35.8649 108.209 36.7017 110.609 37.8598 113.489L39.7153 112.743C38.568 109.89 37.783 107.616 37.3789 105.745C36.975 103.875 36.9697 102.486 37.3038 101.367L35.3874 100.795ZM38.3069 113.993C41.0072 115.473 44.6703 116.704 48.8334 117.833C53.0076 118.964 57.7587 120.011 62.6579 121.098C72.4981 123.282 82.9288 125.631 90.8988 129.185L91.7134 127.358C83.5226 123.706 72.8781 121.318 63.0912 119.146C58.1769 118.055 53.4765 117.019 49.3567 115.902C45.2256 114.783 41.752 113.6 39.2682 112.239L38.3069 113.993ZM97.7773 57.2836C96.0311 59.7364 94.5026 61.4077 92.7581 62.5346C91.0305 63.6507 89.0153 64.2809 86.2181 64.5142L86.3843 66.5073C89.4146 66.2545 91.77 65.554 93.8434 64.2145C95.9001 62.8859 97.6032 60.9767 99.4066 58.4436L97.7773 57.2836ZM79.7135 63.1844C78.8465 62.705 77.857 62.1115 76.6675 61.3619L75.6013 63.054C76.8088 63.8149 77.8333 64.4301 78.7455 64.9346L79.7135 63.1844ZM57.177 61.4162C55.8119 60.2439 54.5747 58.2799 53.3248 55.2212C52.08 52.1749 50.8633 48.1485 49.4812 42.9502L47.5484 43.4641C48.9339 48.6755 50.1774 52.806 51.4735 55.9777C52.7644 59.137 54.1488 61.452 55.8741 62.9335L57.177 61.4162ZM48.4337 44.2039C56.6155 44.8699 66.8791 46.8001 76.1872 49.4216C85.5371 52.0549 93.759 55.3413 97.9745 58.6502L99.2094 57.077C94.6586 53.5049 86.0983 50.1352 76.7294 47.4965C67.3186 44.8461 56.9268 42.8886 48.5959 42.2105L48.4337 44.2039ZM44.7698 95.7224C41.0673 95.0355 36.5496 96.9008 35.3874 100.795L37.3038 101.367C38.0924 98.7246 41.4009 97.1315 44.4049 97.6889L44.7698 95.7224ZM51.4227 98.9946C51.4101 99.0459 51.3693 99.0957 51.3087 99.1198C51.2816 99.1307 51.2633 99.1306 51.2572 99.1299C51.2548 99.1296 51.2529 99.13 51.245 99.1238L50.0191 100.704C51.3075 101.704 53.0289 100.846 53.3654 99.4697L51.4227 98.9946ZM62.4551 95.1388C60.5717 94.4371 58.2991 94.1567 56.292 94.5497C54.2724 94.9452 52.3781 96.0666 51.631 98.2738L53.5255 98.915C53.9682 97.6069 55.0989 96.8213 56.6763 96.5124C58.2662 96.2011 60.1626 96.419 61.7569 97.013L62.4551 95.1388ZM90.1142 108.516C91.3271 107.726 92.7972 107.575 94.5548 107.639C95.4451 107.671 96.3087 107.751 97.2675 107.809C98.1964 107.865 99.1652 107.897 100.122 107.812L99.9461 105.82C99.1399 105.891 98.2895 105.867 97.3888 105.813C96.518 105.76 95.5416 105.673 94.6269 105.64C92.7745 105.573 90.7749 105.698 89.022 106.841L90.1142 108.516ZM94.0102 118.824C93.4601 117.85 92.7317 116.84 92.0355 115.873C91.3243 114.884 90.6407 113.934 90.1092 113.01C89.5735 112.079 89.2475 111.268 89.1786 110.569C89.1148 109.922 89.266 109.352 89.7714 108.801L88.2978 107.449C87.3795 108.45 87.0729 109.595 87.1882 110.765C87.2984 111.883 87.7883 112.987 88.3758 114.008C88.9676 115.036 89.7147 116.072 90.4122 117.041C91.1248 118.031 91.7832 118.948 92.2687 119.808L94.0102 118.824ZM125.501 86.9956C124.621 87.5257 123.902 87.6565 123.4 87.4053L122.505 89.1938C123.978 89.9311 125.521 89.3184 126.533 88.7085L125.501 86.9956ZM130.732 88.4604C129.819 86.8616 127.71 85.7833 125.811 86.8179L126.767 88.5743C127.441 88.2076 128.455 88.5075 128.995 89.4524L130.732 88.4604ZM76.6675 61.3619C73.7064 59.4961 70.3936 58.2823 66.8304 59.8414L67.6321 61.6737C70.2747 60.5174 72.8313 61.3086 75.6013 63.054L76.6675 61.3619ZM131.692 136.319C131.109 136.621 130.51 136.864 130.009 136.931C129.528 136.996 129.333 136.884 129.214 136.729L127.627 137.946C128.349 138.888 129.406 139.03 130.275 138.914C131.123 138.8 131.97 138.428 132.614 138.094L131.692 136.319ZM86.2181 64.5142C83.9481 64.7036 81.6757 64.2698 79.7135 63.1845L78.7455 64.9346C81.0839 66.228 83.7566 66.7265 86.3843 66.5073L86.2181 64.5142ZM137.432 136.137C135.896 135.457 134.097 135.336 132.478 135.967L133.204 137.831C134.274 137.414 135.518 137.477 136.622 137.966L137.432 136.137ZM147.163 138.621C146.15 139.362 144.968 139.407 143.553 138.997C142.103 138.578 140.607 137.741 139.075 136.927L138.136 138.693C139.58 139.46 141.298 140.427 142.998 140.919C144.732 141.42 146.637 141.483 148.344 140.235L147.163 138.621ZM140.004 96.345C139.115 96.5849 138.113 96.441 137.211 95.989L136.315 97.777C137.573 98.4079 139.081 98.6657 140.525 98.2759L140.004 96.345ZM82.691 97.3713C79.338 100.395 74.6124 101.701 70.9192 99.7165L69.9724 101.478C74.6733 104.005 80.3061 102.215 84.0304 98.8566L82.691 97.3713ZM175.374 164.815C179.668 164.211 183.591 161.565 185.493 157.604L183.69 156.738C182.103 160.044 178.785 162.315 175.096 162.834L175.374 164.815ZM151.749 156.988C153.611 155.939 155.966 156.649 157.959 158.327L159.247 156.797C157.011 154.914 153.721 153.581 150.767 155.246L151.749 156.988ZM146.007 156.59C146.788 157.497 147.871 157.812 148.889 157.8C149.896 157.787 150.913 157.459 151.749 156.988L150.767 155.246C150.166 155.584 149.475 155.792 148.863 155.8C148.263 155.807 147.818 155.628 147.523 155.285L146.007 156.59ZM66.8304 59.8414C65.0841 60.6054 63.2181 61.5071 61.4211 61.9504C59.627 62.3931 58.206 62.2998 57.177 61.4162L55.8741 62.9335C57.6427 64.4522 59.8854 64.3893 61.9002 63.8922C63.912 63.3959 66 62.3877 67.6321 61.6737L66.8304 59.8414ZM121.582 127.525C119.52 126.257 116.97 125.949 114.653 126.441C112.335 126.933 110.148 128.249 108.881 130.357L110.596 131.387C111.523 129.844 113.182 128.798 115.068 128.397C116.956 127.996 118.969 128.266 120.535 129.229L121.582 127.525ZM100.878 78.7037C98.5655 77.685 95.7728 77.7791 93.6008 79.2067L94.6993 80.878C96.2455 79.8617 98.3127 79.759 100.072 80.534L100.878 78.7037ZM142.238 153.301C143.487 153.498 144.437 154.549 145.508 155.97L147.105 154.766C146.1 153.433 144.706 151.665 142.549 151.325L142.238 153.301Z\"\r\n        fill=\"#101010\"\r\n      />\r\n      <path\r\n        d=\"M164.125 150.295C144.542 143.235 116.703 95.3149 77.3787 87.7764C102.486 78.5075 129.067 90.889 132.912 107.151C133.318 108.866 134.533 110.334 136.223 110.832C136.693 110.971 137.139 111.112 137.568 111.259C142.194 112.841 146.231 116.065 148.371 120.461C152.707 129.368 153.66 142.08 164.125 150.295Z\"\r\n        fill=\"#F3EBD6\"\r\n        stroke=\"#101010\"\r\n        stroke-width=\"2\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n      <path\r\n        d=\"M126.117 106.711C114.947 91.5411 108.274 90.4578 96.5953 89.1652C108.853 93.3704 115.487 96.8067 123.489 108.77C124.231 109.88 125.308 110.733 126.55 111.225C134.309 114.298 138.083 117.942 143.874 124.954C140.454 116.646 136.836 112.946 128.36 108.614C127.478 108.163 126.705 107.509 126.117 106.711Z\"\r\n        fill=\"#101010\"\r\n        stroke=\"#101010\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n      <ellipse\r\n        cx=\"19.3312\"\r\n        cy=\"88.2173\"\r\n        rx=\"5.07309\"\r\n        ry=\"3.18855\"\r\n        transform=\"rotate(47.9475 19.3312 88.2173)\"\r\n        fill=\"#010201\"\r\n      />\r\n      <ellipse\r\n        cx=\"33.0706\"\r\n        cy=\"51.5105\"\r\n        rx=\"5.07309\"\r\n        ry=\"3.18855\"\r\n        transform=\"rotate(-4.9717 33.0706 51.5105)\"\r\n        fill=\"#010201\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default PoissonGrand;\r\n","import { useEffect } from \"react\";\r\n\r\n// Composants\r\nimport Button from \"../../components/Button\";\r\nimport WaveShapeHaut from \"../../components/Wave-shape-haut\";\r\nimport Banner from \"../../components/Banner\";\r\nimport QrCode from \"../../assets/icons/Qr-code\";\r\n\r\n//Assets\r\nimport galerie1 from \"../../assets/galerie/galerie-1.jpg\";\r\nimport galerie2 from \"../../assets/galerie/galerie-2.jpg\";\r\nimport galerie3 from \"../../assets/galerie/galerie-3.jpg\";\r\nimport galerie4 from \"../../assets/galerie/galerie-4.jpg\";\r\nimport galerie5 from \"../../assets/galerie/galerie-5.jpg\";\r\nimport galerie6 from \"../../assets/galerie/galerie-6.jpg\";\r\nimport galerie7 from \"../../assets/galerie/galerie-7.jpg\";\r\nimport galerie8 from \"../../assets/galerie/galerie-8.jpg\";\r\nimport galerie9 from \"../../assets/galerie/galerie-9.jpg\";\r\nimport galerie10 from \"../../assets/galerie/galerie-10.jpg\";\r\nimport galerie11 from \"../../assets/galerie/galerie-11.jpg\";\r\nimport PoissonGrand from \"../../assets/svg/Poisson-grand\";\r\n\r\n//Styles\r\nimport \"../../styles/Galerie.css\";\r\n\r\n//Données\r\nimport { white } from \"../../datas/colors\";\r\n\r\nfunction Galerie() {\r\n\r\n  useEffect(() => {\r\n    document.title = \"Galerie - Mariage Stéphie & Alain\"\r\n  }, [])\r\n\r\n  return (\r\n    <main>\r\n      {/* Bannière */}\r\n      <Banner />\r\n      <WaveShapeHaut />\r\n\r\n      <section className=\"galerie bg-white fade-in-section\">\r\n        <div className=\"galerie-colonne\">\r\n          <img src={galerie1} alt=\"\" className=\"galerie-img carre\"/>\r\n          <img src={galerie2} alt=\"\" className=\"galerie-img rectangle-haut\"/>\r\n          <img src={galerie3} alt=\"\" className=\"galerie-img carre\"/>\r\n        </div>\r\n        <div className=\"galerie-colonne\">\r\n        <img src={galerie4} alt=\"\" className=\"galerie-img rectangle-haut\"/>\r\n        <img src={galerie5} alt=\"\" className=\"galerie-img rectangle\"/>\r\n        <img src={galerie6} alt=\"\" className=\"galerie-img rectangle-haut\"/>\r\n        </div>\r\n        <div className=\"galerie-colonne\">\r\n        <img src={galerie7} alt=\"\" className=\"galerie-img carre\"/>\r\n        <img src={galerie8} alt=\"\" className=\"galerie-img rectangle-haut\"/>\r\n        <img src={galerie9} alt=\"\" className=\"galerie-img carre\"/>\r\n        </div>\r\n        <div className=\"galerie-colonne\">\r\n        <img src={galerie10} alt=\"\" className=\"galerie-img rectangle-haut\"/>\r\n        <img src={galerie11} alt=\"\" className=\"galerie-img rectangle-haut\"/>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"encart-bleu encart-galerie fade-in-section\">\r\n        <PoissonGrand />\r\n        <div className=\"img-title\">\r\n          <QrCode />\r\n          <h2 className=\"white\">L’album photo à partager !</h2>\r\n        </div>\r\n        <div className=\"text content-galerie\">\r\n          <p className=\"white\">\r\n            Pour que nous puissions tous revivre ensemble les meilleurs moments\r\n            de cette journée, nous avons mis en place une application dédiée au\r\n            partage de photos.\r\n          </p>\r\n          <p className=\"white\">\r\n            Nous avons créé un album sur Wedshoots où vous pourrez ajouter vos\r\n            clichés et découvrir ceux des autres en temps réel !\r\n          </p>\r\n          <ul>\r\n            <li className=\"white\">\r\n              Téléchargez l'appli en passant par le bouton.\r\n            </li>\r\n            <li className=\"white\">\r\n              Une fois installée vous pourrez accéder à l'album en scannant le\r\n              QR code ou en renseignant le nom et le code de notre album :\r\n              FR2cbd4978\r\n            </li>\r\n          </ul>\r\n          <p className=\"white\">\r\n            Parce que les plus beaux moments sont ceux que l'on partage et qu'on sait\r\n            que vous avez un talent caché de photographe ! A vos appareils !\r\n          </p>\r\n        </div>\r\n        <Button\r\n          link=\"http://www.wedshoots.com/fr/download?albumId=FR2cbd4978\"\r\n          color={white}\r\n          borderColor=\"button-white\"\r\n        />\r\n      </section>\r\n      <div className=\"espace\"></div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Galerie;\r\n","function Error() {\r\n    return (\r\n        <div>\r\n            <h1>Oups 🙈 Cette page n'existe pas</h1>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Error","// src/App.jsx\r\nimport { Routes, Route, useLocation } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport Home from './pages/Home'\r\nimport Informations from './pages/Informations'\r\nimport Programmation from './pages/Programmation'\r\nimport Activites from './pages/Activites'\r\nimport Restauration from './pages/Restauration'\r\nimport Hebergement from './pages/Hebergement'\r\nimport Galerie from './pages/Galerie'\r\nimport Error from './components/Error'\r\nimport initScrollFadeIn from './components/Scroll-fade-in'\r\n\r\nfunction App() {\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    initScrollFadeIn()\r\n  }, [location.pathname])\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/informations\" element={<Informations />} />\r\n        <Route path=\"/programmation\" element={<Programmation />} />\r\n        <Route path=\"/activites\" element={<Activites />} />\r\n        <Route path=\"/restauration\" element={<Restauration />} />\r\n        <Route path=\"/hebergement\" element={<Hebergement />} />\r\n        <Route path=\"/galerie\" element={<Galerie />} />\r\n        <Route path=\"*\" element={<Error />} />\r\n      </Routes>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// src/components/Scroll-fade-in.js\r\nexport default function initScrollFadeIn() {\r\n  const sections = document.querySelectorAll('.fade-in-section')\r\n\r\n  const observer = new IntersectionObserver(\r\n    entries => {\r\n      entries.forEach(entry => {\r\n        if (entry.isIntersecting) {\r\n          entry.target.classList.add('is-visible')\r\n        }\r\n      })\r\n    },\r\n    {\r\n      threshold: 0.1,\r\n    }\r\n  )\r\n\r\n  sections.forEach(section => {\r\n    observer.observe(section)\r\n  })\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    console.log(\"ScrollToTop - pathname changed:\", pathname);\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default ScrollToTop;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport ScrollToTop from \"./components/Scroll-to-top\";\r\nimport \"./styles/Global.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <ScrollToTop />\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"names":["getOwnPropertySymbols","Object","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","module","exports","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","val","undefined","TypeError","toObject","s","arguments","length","key","call","Marquee","React","forwardRef","_ref","ref","style","className","autoFill","play","pauseOnHover","pauseOnClick","direction","speed","delay","loop","gradient","gradientColor","gradientWidth","onFinish","onCycleComplete","onMount","children","containerWidth","setContainerWidth","useState","marqueeWidth","setMarqueeWidth","multiplier","setMultiplier","isMounted","setIsMounted","rootRef","useRef","containerRef","marqueeRef","calculateWidth","useCallback","current","containerRect","getBoundingClientRect","marqueeRect","width","height","Math","ceil","useEffect","resizeObserver","ResizeObserver","observe","disconnect","duration","useMemo","containerStyle","gradientStyle","marqueeStyle","childStyle","multiplyChildren","Array","Number","isFinite","_","React__default","createElement","Fragment","Children","child","onAnimationIteration","onAnimationEnd","l","require","p","StrictMode","Profiler","q","r","t","Suspense","u","v","Symbol","for","w","x","iterator","z","a","b","c","encodeURIComponent","A","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","B","C","this","props","context","refs","updater","D","E","isReactComponent","setState","Error","forceUpdate","F","constructor","isPureReactComponent","G","H","I","__self","__source","J","e","d","k","h","g","f","m","defaultProps","$$typeof","type","_owner","L","M","N","replace","escape","toString","O","isArray","K","push","y","next","done","value","P","Q","_status","_result","then","default","R","S","T","ReactCurrentDispatcher","ReactCurrentBatchConfig","transition","ReactCurrentOwner","IsSomeRendererActing","apply","count","toArray","only","Component","PureComponent","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createFactory","bind","createRef","render","isValidElement","lazy","_payload","_init","memo","compare","useContext","useDebugValue","useImperativeHandle","useLayoutEffect","useReducer","version","aa","ba","Set","ca","da","ea","add","fa","window","document","ha","ia","ja","ka","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","toLowerCase","oa","pa","toUpperCase","qa","slice","ma","isNaN","na","test","la","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ra","sa","ta","ua","wa","xa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ma","Ka","La","Na","stack","trim","match","Oa","Pa","prepareStackTrace","defineProperty","set","Reflect","construct","displayName","name","Qa","tag","_render","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","$a","ab","bb","cb","ownerDocument","eb","db","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","ob","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","pb","lastChild","nodeType","nodeValue","qb","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","rb","sb","tb","indexOf","setProperty","charAt","substring","ub","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","vb","wb","is","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Ob","Pb","Qb","addEventListener","removeEventListener","Rb","onError","Sb","Tb","Ub","Vb","Wb","Xb","Zb","alternate","return","flags","$b","memoizedState","dehydrated","ac","cc","sibling","bc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","nc","Map","oc","pc","qc","rc","blockedOn","domEventName","eventSystemFlags","nativeEvent","targetContainers","sc","delete","pointerId","tc","vc","wc","lanePriority","unstable_runWithPriority","priority","hydrate","containerInfo","xc","yc","shift","zc","Ac","Bc","unstable_scheduleCallback","unstable_NormalPriority","Cc","Dc","Ec","animationend","animationiteration","animationstart","transitionend","Fc","Gc","Hc","animation","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","unstable_now","Rc","Uc","pendingLanes","expiredLanes","suspendedLanes","pingedLanes","Vc","entangledLanes","entanglements","Wc","Xc","Yc","Zc","$c","eventTimes","clz32","bd","cd","log","LN2","dd","unstable_UserBlockingPriority","ed","fd","gd","hd","id","uc","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","code","location","repeat","locale","which","Rd","Td","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","Le","node","offset","nextSibling","Me","contains","compareDocumentPosition","Ne","HTMLIFrameElement","contentWindow","href","Oe","contentEditable","Pe","Qe","Re","Se","Te","Ue","start","selectionStart","end","selectionEnd","anchorNode","defaultView","getSelection","anchorOffset","focusNode","focusOffset","Ve","We","Xe","Ye","concat","Ze","Yb","instance","listener","$e","has","af","bf","random","cf","df","capture","passive","Nb","ef","ff","parentWindow","gf","hf","je","char","ke","unshift","jf","kf","lf","mf","autoFocus","nf","__html","of","setTimeout","pf","clearTimeout","qf","rf","sf","previousSibling","tf","vf","wf","xf","yf","zf","Af","Bf","Cf","Df","Ef","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ff","childContextTypes","Gf","Hf","If","getChildContext","Jf","__reactInternalMemoizedMergedChildContext","Kf","Lf","Mf","Nf","Of","Pf","unstable_cancelCallback","Qf","unstable_shouldYield","Rf","unstable_requestPaint","Sf","Tf","unstable_getCurrentPriorityLevel","Uf","unstable_ImmediatePriority","Vf","Wf","Xf","unstable_LowPriority","Yf","unstable_IdlePriority","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","childLanes","tg","dependencies","firstContext","lanes","ug","vg","observedBits","responders","wg","xg","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","yg","zg","eventTime","lane","payload","callback","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Kg","_reactInternals","Hg","Ig","Jg","Lg","shouldComponentUpdate","Mg","contextType","state","Ng","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Og","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Pg","Qg","_stringRef","Rg","Sg","lastEffect","nextEffect","firstEffect","index","Tg","Ug","mode","elementType","Vg","implementation","Wg","Xg","Yg","Zg","$g","ah","bh","ch","dh","eh","documentElement","tagName","fh","gh","hh","ih","memoizedProps","revealOrder","jh","kh","lh","mh","nh","oh","pendingProps","ph","qh","rh","sh","th","uh","_workInProgressVersionPrimary","vh","wh","xh","yh","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","baseQueue","queue","Ih","Jh","Kh","lastRenderedReducer","action","eagerReducer","eagerState","lastRenderedState","dispatch","Lh","Mh","_getVersion","_source","mutableReadLanes","Nh","U","getSnapshot","subscribe","setSnapshot","Oh","Ph","Qh","Rh","create","destroy","deps","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","ci","di","readContext","useDeferredValue","useTransition","useMutableSource","useOpaqueIdentifier","unstable_isNewReconciler","uf","ei","fi","gi","hi","ii","ji","ki","li","mi","baseLanes","ni","oi","pi","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","qi","getDerivedStateFromError","ri","pendingContext","Bi","Ci","Di","Ei","si","retryLane","ti","fallback","unstable_avoidThisFallback","ui","unstable_expectedLoadTime","vi","wi","xi","yi","zi","isBackwards","rendering","renderingStartTime","last","tail","tailMode","Ai","Fi","Gi","wasMultiple","multiple","onClick","onclick","size","createElementNS","createTextNode","V","Hi","Ii","W","Ji","Ki","Li","Mi","message","Ni","console","error","Oi","WeakMap","Pi","element","Qi","Ri","Si","componentDidCatch","Ti","componentStack","Ui","WeakSet","Vi","Wi","Xi","__reactInternalSnapshotBeforeUpdate","Yi","Zi","$i","focus","aj","display","bj","onCommitFiberUnmount","componentWillUnmount","cj","dj","ej","fj","gj","hj","insertBefore","_reactRootContainer","ij","jj","kj","lj","mj","nj","oj","pj","X","Y","qj","rj","sj","tj","uj","vj","Infinity","wj","ck","Z","xj","yj","zj","Aj","Bj","Cj","Dj","Ej","Fj","Gj","Hj","Ij","Jj","Sc","Kj","Lj","Mj","callbackNode","expirationTimes","callbackPriority","Tc","Nj","Oj","Pj","Qj","Rj","Sj","Tj","finishedWork","finishedLanes","Uj","timeoutHandle","Wj","Xj","pingCache","Yj","Zj","va","ak","bk","dk","rangeCount","focusedElem","selectionRange","ek","min","extend","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","onCommitFiberRoot","fk","gk","ik","pendingChildren","jk","mutableSourceEagerHydrationData","lk","mk","nk","ok","qk","hydrationOptions","mutableSources","_internalRoot","rk","tk","hasAttribute","sk","uk","kk","hk","unstable_observedBits","unmount","querySelectorAll","JSON","stringify","form","Vj","vk","Events","wk","findFiberByHostInstance","bundleType","rendererPackageName","xk","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","__REACT_DEVTOOLS_GLOBAL_HOOK__","yk","isDisabled","supportsFiber","inject","createPortal","findDOMNode","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","performance","MessageChannel","unstable_forceFrameRate","cancelAnimationFrame","requestAnimationFrame","floor","port2","port1","onmessage","postMessage","pop","sortIndex","startTime","expirationTime","priorityLevel","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_wrapCallback","jsx","jsxs","checkDCE","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","leafPrototypes","getProto","getPrototypeOf","obj","__esModule","ns","def","definition","o","prop","toStringTag","Action","PopStateEventType","invariant","warning","cond","warn","getHistoryState","usr","idx","createLocation","_extends","pathname","hash","parsePath","substr","createPath","path","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","nextIndex","delta","createURL","origin","URL","replaceState","listen","fn","encodeLocation","Push","historyState","pushState","Replace","go","ResultType","matchRoutes","routes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","score","siblings","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","_route$path","includes","exploded","explodeOptionalSegments","segments","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","some","filter","reduce","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","paramNames","regexpSource","paramName","RegExp","compilePath","captureGroups","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","startIndex","nextChar","getInvalidPathError","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","checkIfSnapshotChanged","inst","latestGetSnapshot","prevValue","nextValue","DataRouterContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","RouteErrorContext","useInRouterContext","useLocation","UNSAFE_invariant","useNavigate","navigator","routePathnamesJson","UNSAFE_getPathContributingMatches","activeRef","parse","relative","useResolvedPath","_temp2","DefaultErrorComponent","_state$errors","useDataRouterState","DataRouterStateHook","UseRouteError","routeId","useCurrentRouteId","errors","useRouteError","lightgrey","preStyles","padding","backgroundColor","fontStyle","RenderErrorBoundary","super","errorInfo","routeContext","component","RenderedRoute","dataRouterContext","static","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_renderMatches","parentMatches","dataRouterState","renderedMatches","errorIndex","findIndex","reduceRight","getChildren","DataRouterHook","hookName","useRouteContext","thisRoute","Route","_props","Router","_ref4","basenameProp","locationProp","navigationType","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref5","dataRouterStateContext","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","useRoutes","router","createRoutesFromChildren","AwaitRenderStatus","Promise","treePath","loader","hasErrorBoundary","shouldRevalidate","handle","BrowserRouter","historyRef","isBrowser","ABSOLUTE_URL_REGEX","Link","absoluteHref","reloadDocument","preventScrollReset","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","currentUrl","targetUrl","protocol","_temp","joinedPathname","useHref","internalOnClick","replaceProp","navigate","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","NavLink","ariaCurrentProp","classNameProp","styleProp","_excluded2","routerState","UNSAFE_DataRouterStateContext","nextLocationPathname","navigation","isActive","isPending","ariaCurrent","Boolean","_jsx","viewBox","fill","xmlns","white","blue","pink","orange","green","label","image","accueilImg","bgColor","infoImg","progImg","actImg","restauImg","hebergImg","galerieImg","isOpen","setIsOpen","hoveredPath","setHoveredPath","currentPath","activeRoute","find","_jsxs","MenuShape","isHovered","isHighlighted","textColor","onMouseEnter","onMouseLeave","alignItems","gap","Star","WaveShapeMilieu","src","alt","logo","rel","handleScroll","scrollY","heroTitle","querySelector","artificeGauche","getElementById","artificeMilieu","artificeDroit","lanternes","sol","roue","personnages","classList","remove","toggle","showElements","etoiles","lune","artificesGauche","artificesMilieu","artificesDroit","reflet","lucioles","grandeRoueBuisson","scrollDown","cx","cy","rx","ry","transform","TIMER_TARGET","getTimeLeft","totalTimeLeft","days","hours","minutes","seconds","timeLeft","setTimeLeft","timer","setInterval","clearInterval","FeuxVertOrange","accueilIntroduction","FeuxRoseOrangeDroit","BrancheVert","BrancheOrange","borderColor","stroke","words","el","title","imgPosition","imgGrande","imgPetite","Button","grandeRoue","buissonDroit","FeuxRoseOrange","Activite3Accueil","Activite2Accueil","Activite1Accueil","FeuxBleuVertBas","maskUnits","mask","HeroBanner","Timer","WaveShape","Introduction","EncartInfo","Slider","DescriptionImg","accueilProgrammeGrande","accueilProgrammePetite","Rubans","accueilRestaurationGrande","accueilRestaurationPetite","Pompon","accueilHebergementGrande","accueilHebergementPetite","OrigamiRose","OrigamiOrange","ActivitesAccueil","BandeauCadre","nombre","question","answer","linkText","imgClass","MinusBox","AddBox","bannerLanterne","bannerBuisson","legendPink","legendOrange","legendGreen","faqSurPlace","objetsInterdits","faqPourVenir","faqDormir","faqOrganisation","theme","Banner","WaveShapeHaut","PlanDomaine","LegendItem","_ref2","_ref3","Guirlande","FaqAccordion","_ref6","_ref7","Icon","content","isObject","ssrDocument","blur","createEvent","initEvent","childNodes","getElementsByTagName","importNode","host","hostname","getDocument","doc","ssrWindow","userAgent","back","CustomEvent","getComputedStyle","getPropertyValue","Image","screen","matchMedia","getWindow","win","nextTick","getTranslate","axis","matrix","curTransform","transformMatrix","curStyle","currentStyle","WebKitCSSMatrix","webkitTransform","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","noExtend","nextSource","HTMLElement","keysArray","len","nextKey","desc","__swiper__","setCSSProperty","varName","varValue","animateCSSModeScroll","swiper","targetPosition","side","startPosition","translate","wrapperEl","scrollSnapType","cssModeFrameID","dir","isOutOfBound","animate","getTime","progress","max","easeProgress","cos","PI","currentPosition","scrollTo","overflow","elementChildren","selector","classes","elementStyle","elementIndex","elementTransitionEnd","fireCallBack","elementOuterSize","includeMargins","offsetWidth","support","deviceCached","browser","getSupport","smoothScroll","touch","DocumentTouch","calcSupport","getDevice","platform","device","ios","android","screenWidth","screenHeight","ipad","ipod","iphone","windows","macos","os","calcDevice","getBrowser","needPerspectiveFix","isSafari","major","minor","num","isWebView","calcBrowser","on","events","handler","self","eventsListeners","destroyed","method","once","onceHandler","off","__emitterProxy","_len","args","_key","onAny","eventsAnyListeners","offAny","splice","eventHandler","emit","_len2","_key2","processLazyPreloader","imageEl","slideEl","closest","isElement","slideClass","lazyEl","lazyPreloaderClass","unlazy","slides","preload","amount","lazyPreloadPrevNext","slidesPerView","slidesPerViewDynamic","activeIndex","grid","rows","activeColumn","preloadColumns","column","slideIndexLastInView","rewind","realIndex","updateSize","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","updateSlides","getDirectionLabel","property","getDirectionPropertyValue","slidesEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginRight","marginBottom","marginTop","centeredSlides","cssMode","gridEnabled","slideSize","initSlides","shouldResetSlideSize","breakpoints","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","swiperSlideSize","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","slidesBefore","slidesAfter","groupSize","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","watchOverflow","checkOverflow","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","containerModifierClass","hasClassBackfaceClassAdded","maxBackfaceHiddenSlides","updateAutoHeight","activeSlides","newHeight","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","offsetHeight","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","cssOverflowAdjustment","updateSlidesProgress","offsetCenter","slideVisibleClass","visibleSlidesIndexes","slideOffset","slideProgress","minTranslate","originalSlideProgress","slideBefore","slideAfter","originalProgress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","firstSlideIndex","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","autoHeight","updateSlidesClasses","getFilteredSlide","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","nextSlide","nextEls","nextElementSibling","elementNextAll","prevSlide","prevEls","previousElementSibling","prev","elementPrevAll","emitSlidesClasses","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","getActiveIndexByTranslate","skip","getAttribute","initialized","runCallbacksOnInit","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","previousTranslate","translateTo","runCallbacks","translateBounds","animating","preventInteractionOnTransition","newTranslate","isH","behavior","onTranslateToWrapperTransitionEnd","transitionEmit","step","slideTo","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","allowSlideNext","allowSlidePrev","transitionStart","transitionEnd","_immediateVirtual","_cssModeVirtualInitialSet","initialSlide","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","slideNext","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","clientLeft","slidePrev","normalize","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","slideReset","slideToClosest","threshold","currentSnap","slideToIndex","slideSelector","loopedSlides","getSlideIndex","loopCreate","slideRealIndex","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","swiperLoopMoveDOM","prepend","append","recalcSlides","currentSlideTranslate","diff","controller","control","loopParams","loopDestroy","newSlidesOrder","swiperSlideIndex","onTouchStart","touchEventsData","evCache","simulateTouch","originalEvent","targetEl","touchEventsTarget","isTouched","isMoved","swipingClassHasValue","noSwipingClass","eventPath","composedPath","shadowRoot","noSwipingSelector","isTargetShadow","noSwiping","__closestFrom","assignedSlot","found","getRootNode","closestElement","allowClick","swipeHandler","currentX","currentY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","focusableElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","freeMode","onTouchMove","pointerIndex","cachedEv","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","touchMoveStopPropagation","nested","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","startTranslate","evt","dispatchEvent","allowMomentumBounce","grabCursor","setGrabCursor","loopFixed","disableParentSwiper","resistanceRatio","resistance","followFinger","onTouchEnd","touchEndTime","timeDiff","pathTree","lastClickTime","currentPos","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","nextEl","prevEl","onResize","setBreakpoint","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","preventClicks","preventClicksPropagation","stopImmediatePropagation","onScroll","onLoad","update","dummyEventAttached","dummyEventListener","domMethod","swiperMethod","updateOnWindowResize","isGridEnabled","init","createElements","breakpointsBase","uniqueNavElements","passiveListeners","wrapperClass","_emitClasses","moduleExtendParams","allModulesParams","moduleParamName","moduleParams","auto","prototypes","eventsEmitter","transitionDuration","moving","isLocked","__preventObserver__","cursor","unsetGrabCursor","attachEvents","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointParams","originalParams","wasMultiRow","isMultiRow","wasEnabled","emitContainerClasses","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","containerEl","currentHeight","innerHeight","points","point","minRatio","wasLocked","lastSlideRightEdge","addClasses","classNames","suffixes","entries","prefix","resultClasses","item","prepareClasses","removeClasses","extendedDefaults","Swiper","swipers","newParams","modules","__modules__","mod","extendParams","swiperParams","defaults","passedParams","eventName","velocity","trunc","clickTimeout","velocities","imagesToLoad","imagesLoaded","setProgress","cls","getSlideClasses","updates","exact","spv","breakLoop","translateValue","translated","complete","newDirection","needUpdate","currentDirection","changeLanguageDirection","mount","mounted","shadowEl","getWrapperSelector","getWrapper","deleteInstance","cleanStyles","object","deleteProps","extendDefaults","newDefaults","installModule","use","prototypeGroup","protoMethod","observer","animationFrame","resizeHandler","orientationChangeHandler","newWidth","contentBoxSize","contentRect","inlineSize","blockSize","unobserve","observers","attach","MutationObserver","WebkitMutationObserver","mutations","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","parents","parent","parentElement","elementParents","Navigation","hideOnClick","disabledClass","hiddenClass","lockClass","navigationDisabledClass","makeElementsArray","getEl","res","toggleEl","subEl","onPrevClick","onNextClick","checkProps","createElementIfNotDefined","initButton","destroyButton","_s","pagination","clickable","isHidden","Thumb","thumbs","multipleActiveThumbs","autoScrollOffset","slideThumbActiveClass","thumbsContainerClass","swiperCreated","onThumbClick","thumbsSwiper","thumbsParams","SwiperClass","thumbsSwiperParams","thumbsToActivate","thumbActiveClass","useOffset","currentThumbsIndex","newThumbsIndex","newThumbsSlide","getThumbsElementAndInit","thumbsElement","onThumbsSwiper","watchForThumbsToAppear","momentum","momentumRatio","momentumBounce","momentumBounceRatio","momentumVelocityRatio","sticky","minimumVelocity","position","lastMoveEvent","velocityEvent","distance","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","j","moveDistance","currentSlideSize","needsNavigation","needsPagination","needsScrollbar","scrollbar","uniqueClasses","unique","paramsList","isChildSwiperSlide","processChildren","slots","slot","foundSlides","useIsomorphicLayoutEffect","SwiperSlideContext","SwiperContext","externalElRef","Tag","wrapperTag","WrapperTag","onSwiper","eventsAssigned","containerClasses","setContainerClasses","virtualData","setVirtualData","breakpointChanged","setBreakpointChanged","initializedRef","swiperElRef","swiperRef","oldPassedParamsRef","oldSlides","nextElRef","prevElRef","paginationElRef","scrollbarElRef","restProps","splitEvents","allowedParams","plainObj","getParams","onBeforeBreakpoint","_containerClasses","initSwiper","passParams","SwiperCore","extendWith","cache","renderExternal","renderExternalUpdate","paginationEl","scrollbarEl","mountSwiper","changedParams","oldParams","oldChildren","getKey","addKey","oldChildrenKeys","childrenKeys","newKeys","oldKeys","newKey","oldKey","getChangedParams","updateParams","currentParams","needThumbsInit","needControllerInit","needPaginationInit","needScrollbarInit","needNavigationInit","loopNeedDestroy","loopNeedEnable","loopNeedReloop","destroyModule","newValue","updateSwiper","parallax","loopFrom","loopTo","slidesToRender","renderVirtual","SwiperSlide","externalRef","virtualIndex","slideElRef","slideClasses","setSlideClasses","lazyLoaded","setLazyLoaded","updateClasses","slideData","isVisible","renderChildren","typeSwiper","loopFillGroupWithBlank","horaire","cover","NavPrev","NavNext","listeCardProgramme","icon","Bienvenue","Lit","Parking","samediSlides","accueil","ceremonieLaique","vinHonneur","debutActivites","dispoLogements","repas","ouvertureBal","desserts","dimancheSlides","checkOut","activitesLendemain","brunch","depart","setToggle","updateToggle","Origamis","CardProgrammation","Coeur","CarrouselProgramme","Billet","puyDuFou","listeActivites","escapeGame1","cover2","escapeGame2","illustration","FeuxVert","activitesDomaines1","activitesDomaines2","FeuxBleu","jeuxCollectifs1","jeuxCollectifs2","jeuxBois1","jeuxBois2","jeuxKermesse1","jeuxKermesse2","activites1","activites2","setThumbsSwiper","isModalOpen","setIsModalOpen","FreeMode","Thumbs","_Fragment","escapeGame","categoriesBoissons","categoriesNourritures","classToggle","PoissonGauche","cat","menu","typeMenu","plat","imgDisplay","VegetarienIcon","listeVinBoissons","listeVinNourritures","listeBrunchBoissons","listeBrunchNourritures","assiettes","buffet","ateliers","FeuxVertRose","Pompom","Tabs13","CardMenu","assietesImg","buffetImg","ateliersImg","dessertsImg","ClickableImageMap","currentImage","setCurrentImage","plan","isFading","setIsFading","isDetailView","setIsDetailView","handleClick","newImage","planZone1","planZone2","planZone3","handleBack","listeLogements","ButtonSmall","CarrouselLogements","FeuxRoseVertDroit","galerie1","galerie2","galerie3","galerie4","galerie5","galerie6","galerie7","galerie8","galerie9","galerie10","galerie11","PoissonGrand","QrCode","sections","IntersectionObserver","entry","isIntersecting","section","initScrollFadeIn","Header","Home","Informations","Programmation","Activites","Restauration","Hebergement","Galerie","Footer","ReactDOM","ScrollToTop","App"],"sourceRoot":""}